C C-SRCU2-LB-split

(*
 * Result: Never
 *)

{
}

P0(int *x0, int *x1)
{
	int r1;

	r1 = READ_ONCE(*x0);
	synchronize_rcu();
	WRITE_ONCE(*x1, 1);
}

P1(int *x1, int *x2, struct srcu_struct *ssp1)
{
	int r1;

	r1 = READ_ONCE(*x1);
	synchronize_srcu(ssp1);
	WRITE_ONCE(*x2, 1);
}

P2(int *x2, int *x3, struct srcu_struct *ssp1)
{
	int r0;
	int r1;

	r0 = srcu_read_lock(ssp1);
	WRITE_ONCE(*x3, 1);
	r1 = READ_ONCE(*x2); // LB, but intentionally reversed.
	srcu_read_unlock(ssp1, r0);
}

P3(int *x3, int *x4)
{
	int r1;

	rcu_read_lock();
	WRITE_ONCE(*x4, 1);
	r1 = READ_ONCE(*x3);
	rcu_read_unlock();
}

P4(int *x4, int *x5, struct srcu_struct *ssp1)
{
	int r1;

	r1 = READ_ONCE(*x4);
	synchronize_srcu(ssp1);
	WRITE_ONCE(*x5, 1);
}

P5(int *x5, int *x0, struct srcu_struct *ssp1)
{
	int r0;
	int r1;

	r0 = srcu_read_lock(ssp1);
	WRITE_ONCE(*x0, 1);
	r1 = READ_ONCE(*x5); // LB, but intentionally reversed.
	srcu_read_unlock(ssp1, r0);
}

exists
(0:r1=1 /\ 1:r1=1 /\ 2:r1=1 /\ 3:r1=1 /\ 4:r1=1 /\ 5:r1=1)
