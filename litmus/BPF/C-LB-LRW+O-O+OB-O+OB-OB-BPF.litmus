BPF C-LB-LRW+O-O+OB-O+OB-OB-BPF
(*
 *  * Result: Sometimes
 *  * P0 LRW,O: Never->Sometimes: No ordering
 *  *
 *  * 0:r1 -> 0:r1
 *  * 1:r1 -> 1:r1
 *  * 1:-tmp- -> 1:r2
 *  * 2:r1 -> 2:r1
 *  * 2:-tmp- -> 2:r2
 *  * 3:r1 -> 3:r1
 *  * 3:-tmp- -> 3:r2
 *)
{
	0:r10 = u0;
	0:r9 = x1;
	1:r10 = x1;
	1:r9 = x2;
	1:r8 = __temporary_1;
	2:r10 = x2;
	2:r9 = x3;
	2:r8 = __temporary_2;
	3:r10 = x3;
	3:r9 = u0;
	3:r8 = __temporary_3;
}
 P0                     | P1                                        | P2                                        | P3                                        ;
 r1 = *(u32 *)(r10 + 0) | r1 = *(u32 *)(r10 + 0)                    | r1 = *(u32 *)(r10 + 0)                    | r1 = *(u32 *)(r10 + 0)                    ;
 *(u32 *)(r9 + 0) = 1   | r2 = atomic_fetch_add((u64*)(r8 + 0), r2) | r2 = atomic_fetch_add((u64*)(r8 + 0), r2) | r2 = atomic_fetch_add((u64*)(r8 + 0), r2) ;
                        | *(u32 *)(r9 + 0) = 1                      | *(u32 *)(r9 + 0) = 1                      | *(u32 *)(r9 + 0) = 1                      ;
exists
((0:r1=1 /\ 1:r1=1 /\ 2:r1=1 /\ 3:r1=1))
