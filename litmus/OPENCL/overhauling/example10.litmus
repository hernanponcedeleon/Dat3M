C example10

(*
 * https://multicore.doc.ic.ac.uk/overhauling/examples/example10.litmus
 * global_fga -> global
 *)

{
[x] = 0;
[y] = 0;
[z1] = 0;
[z2] = 0;
}

P0@wg 0, dev 0 (global atomic_int* x, global atomic_int* y, global atomic_int* z1, global atomic_int* z2) {
  atomic_store_explicit(x, 1, memory_order_seq_cst, memory_scope_device);
  //int r = atomic_load_explicit(x, memory_order_seq_cst, memory_scope_device);
  atomic_store_explicit(z1, 1, memory_order_release, memory_scope_all_svm_devices);
}

P1@wg 0, dev 0 (global atomic_int* x, global atomic_int* y, global atomic_int* z1, global atomic_int* z2) {
  int r = -1;
  if (atomic_load_explicit(z2, memory_order_acquire, memory_scope_all_svm_devices) == 1)
    r = atomic_load_explicit(x, memory_order_seq_cst, memory_scope_device);
}

P2@wg 0, dev 1 (global atomic_int* x, global atomic_int* y, global atomic_int* z1, global atomic_int* z2) {
  atomic_store_explicit(y, 1, memory_order_seq_cst, memory_scope_device);
  //int r = atomic_load_explicit(y, memory_order_seq_cst, memory_scope_device);
  atomic_store_explicit(z2, 1, memory_order_release, memory_scope_all_svm_devices);
}

P3@wg 0, dev 1 (global atomic_int* x, global atomic_int* y, global atomic_int* z1, global atomic_int* z2) {
  int r = -1;
  if (atomic_load_explicit(z1, memory_order_acquire, memory_scope_all_svm_devices) == 1)
    r = atomic_load_explicit(y, memory_order_seq_cst, memory_scope_device);
}

exists (1:r = 0 /\ 3:r = 0)