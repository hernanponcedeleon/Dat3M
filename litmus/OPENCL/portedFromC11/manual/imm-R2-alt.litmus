OPENCL imm-R2

(*
 * Bridging the Gap between Programming Languages and Hardware Weak Memory Models
 *)

{}

P0@wg 0, dev 0 (global atomic_int* x, global atomic_int* y) {
    atomic_store_explicit(y, 1, memory_order_relaxed);
    atomic_store_explicit(x, 1, memory_order_release);
}

P1@wg 0, dev 0 (global atomic_int* x) {
    atomic_work_item_fence(CLK_GLOBAL_MEM_FENCE,memory_order_release,memory_scope_all_svm_devices);
    int r0 = atomic_fetch_add_explicit(x, 1, memory_order_acquire);
    atomic_store_explicit(x, 3, memory_order_relaxed);
}

P2@wg 0, dev 0 (global atomic_int* x, global atomic_int* y) {
    int r0 = atomic_load_explicit(x, memory_order_acquire);
    int r1 = atomic_load_explicit(y, memory_order_relaxed);
}

exists (1:r0=1 /\ 2:r0=3 /\ 2:r1=0)
