# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build

# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly every Sunday at midnight
  workflow_dispatch:

jobs:

  Ck-armv7-tests:
    name: Concurrency Kit armv7 tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Concurrency Kit armv7 tests
        run: mvn test -Dtest="com/dat3m/dartagnan/asm/armv7/ck/*" -f dartagnan/pom.xml

  Ck-armv8-tests:
    name: Concurrency Kit armv8 tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Concurrency Kit armv8 tests
        run: mvn test -Dtest="com/dat3m/dartagnan/asm/armv8/ck/*" -f dartagnan/pom.xml
  
  Libvsync-armv7-tests:
    name: Libvsync armv7 tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Libvsync armv7 tests
        run: mvn test -Dtest="com/dat3m/dartagnan/asm/armv7/libvsync/*" -f dartagnan/pom.xml
  
  Libvsync-armv8-tests:
    name: Libvsync armv8 tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Libvsync armv8 tests
        run: mvn test -Dtest="com/dat3m/dartagnan/asm/armv8/libvsync/*" -f dartagnan/pom.xml


  litmus-tests:
    name: Litmus tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Litmus tests
        run: mvn test -Dtest="com/dat3m/dartagnan/litmus/**/*" -f dartagnan/pom.xml

  llvm-tests:
    name: LLVM tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: LLVM tests
        run: mvn test -Dtest="com/dat3m/dartagnan/llvm/**/*" -f dartagnan/pom.xml

  other-tests:
    name: Other tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Other tests
        run: mvn test -Dtest="com/dat3m/dartagnan/others/**/*" -f dartagnan/pom.xml

  spirv-tests:
    name: SPIRV tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: SPIRV tests
        run: mvn test -Dtest="com/dat3m/dartagnan/spirv/**/*" -f dartagnan/pom.xml

  weekly:
    name: All tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout badges branch dedicated to storing badges only
        uses: actions/checkout@v4
        with:
          ref: badges
          path: badges

      - name: Set up the Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set DAT3M_HOME
        run: echo "DAT3M_HOME=$(echo $GITHUB_WORKSPACE)" >> $GITHUB_ENV

      - name: Set DAT3M_OUTPUT
        run: echo "DAT3M_OUTPUT=$(echo $DAT3M_HOME)/output" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots install

      - name: Build the Docker image
        run: docker build . --file Dockerfile

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          coverage-badge-filename: coverage.svg
          generate-branches-badge: true
          branches-badge-filename: branches.svg
          jacoco-csv-file: dartagnan/target/site/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Commit the badges (if changed)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          cd badges
          if [[ `git status --porcelain *.svg` ]]; then
            git config --global user.name 'Hernan Ponce de Leon'
            git config --global user.email 'hernanponcedeleon@users.noreply.github.com'
            git add *.svg
            git commit -m "Autogenerated JaCoCo coverage badge" *.svg
            git push
          fi
