C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --po-> 3
3 --rf-> 1
"
{ [a1]=0; 0:r4=0; }

P0( atomic_int *a1 )  {
  r4 = atomic_load_explicit(a1, memory_order_seq_cst);
  atomic_store_explicit(a1, 2, memory_order_seq_cst);
}

exists ( 0:r4 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --po-> 3
4 --co-> 1
4 --rf-> 3
"
{ [a2]=0; 0:r2=0; 2:r9=0; 2:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  r2 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 4, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r2 = 4 /\ 2:r12 = 4 /\ 2:r9 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --po-> 3
3 --co-> 1
"
{ [a2]=0; 1:r9=0; 1:r11=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r11 = 2 /\ 1:r9 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
3 --po-> 1
2 --rf-> 3
"
{ [a2]=0; 0:r2=0; }

P0( atomic_int *a2 )  {
  r2 = atomic_load_explicit(a2, memory_order_seq_cst);
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

exists ( 0:r2 = 3 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
3 --po-> 1
4 --co-> 3
4 --rf-> 2
"
{ [a3]=0; 0:r1=0; 2:r11=0; 2:r12=0; }

P0( atomic_int *a3 )  {
  atomic_store_explicit(a3, 2, memory_order_seq_cst);
  r1 = atomic_load_explicit(a3, memory_order_seq_cst);
}

P1( atomic_int *a3 )  {
  atomic_store_explicit(a3, 1, memory_order_seq_cst);
}

P2( atomic_int *a3 )  {
  r12 = atomic_load_explicit(a3, memory_order_seq_cst);
  r11 = atomic_load_explicit(a3, memory_order_seq_cst);
}

exists ( 0:r1 = 1 /\ 2:r12 = 1 /\ 2:r11 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
3 --po-> 1
2 --co-> 3
"
{ [a2]=0; 1:r10=0; 1:r11=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r10 = 1 /\ 1:r11 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --rf-> 3
4 --co-> 1
4 --rf-> 3
"
{ [a2]=0; 0:r3=0; 2:r9=0; 2:r12=0; }

P0( atomic_int *a2 )  {
  r3 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r3 = 3 /\ 2:r12 = 3 /\ 2:r9 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
3 --rf-> 1
4 --co-> 3
4 --rf-> 2
"
{ [a2]=0; 0:r4=0; 0:r1=0; 3:r11=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r4 = 2 /\ 0:r1 = 3 /\ 3:r12 = 3 /\ 3:r11 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
3 --co-> 1
4 --co-> 3
4 --rf-> 2
"
{ [a2]=0; 0:r3=0; 3:r9=0; 3:r11=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
  r3 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 4, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r3 = 4 /\ 3:r12 = 4 /\ 3:r11 = 3 /\ 3:r9 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --co-> 3
3 --rf-> 1
"
{ [a1]=0; 1:r1=0; 2:r10=0; 2:r11=0; }

P0( atomic_int *a1 )  {
  atomic_store_explicit(a1, 1, memory_order_seq_cst);
}

P1( atomic_int *a1 )  {
  r1 = atomic_load_explicit(a1, memory_order_seq_cst);
  atomic_store_explicit(a1, 2, memory_order_seq_cst);
}

P2( atomic_int *a1 )  {
  r10 = atomic_load_explicit(a1, memory_order_seq_cst);
  r11 = atomic_load_explicit(a1, memory_order_seq_cst);
}

exists ( 1:r1 = 1 /\ 2:r10 = 2 /\ 2:r11 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --po-> 2
2 --co-> 3
3 --co-> 1
"
{ [a2]=0; 2:r9=0; 2:r10=0; 2:r11=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 2:r10 = 2 /\ 2:r11 = 3 /\ 2:r9 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
2 --po-> 3
1 --rf-> 2
"
{ [a1]=0; 0:r2=0; }

P0( atomic_int *a1 )  {
  r2 = atomic_load_explicit(a1, memory_order_seq_cst);
  atomic_store_explicit(a1, 2, memory_order_seq_cst);
}

exists ( 0:r2 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
2 --po-> 3
4 --co-> 2
4 --rf-> 1
"
{ [a2]=0; 0:r1=0; 2:r10=0; 2:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r1 = 1 /\ 2:r12 = 1 /\ 2:r10 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
2 --po-> 3
1 --co-> 2
"
{ [a2]=0; 1:r9=0; 1:r10=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r9 = 2 /\ 1:r10 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
1 --rf-> 2
4 --co-> 3
4 --rf-> 2
"
{ [a2]=0; 0:r1=0; 2:r11=0; 2:r12=0; }

P0( atomic_int *a2 )  {
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r1 = 1 /\ 2:r12 = 1 /\ 2:r11 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
2 --rf-> 3
4 --co-> 2
4 --rf-> 1
"
{ [a2]=0; 0:r4=0; 0:r2=0; 3:r10=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  r2 = atomic_load_explicit(a2, memory_order_seq_cst);
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r2 = 2 /\ 0:r4 = 1 /\ 3:r12 = 1 /\ 3:r10 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
2 --co-> 3
4 --co-> 2
4 --rf-> 1
"
{ [a2]=0; 0:r3=0; 3:r10=0; 3:r11=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
  r3 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r3 = 1 /\ 3:r12 = 1 /\ 3:r10 = 2 /\ 3:r11 = 3 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
1 --co-> 2
2 --rf-> 3
"
{ [a2]=0; 1:r4=0; 2:r9=0; 2:r10=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r4 = 2 /\ 2:r9 = 1 /\ 2:r10 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
3 --po-> 1
1 --co-> 2
2 --co-> 3
"
{ [a2]=0; 2:r10=0; 2:r9=0; 2:r11=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 2:r10 = 2 /\ 2:r9 = 3 /\ 2:r11 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
2 --po-> 3
1 --rf-> 2
4 --co-> 1
4 --rf-> 3
"
{ [a2]=0; 1:r1=0; 1:r4=0; 3:r9=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r1 = 2 /\ 1:r4 = 3 /\ 3:r12 = 3 /\ 3:r9 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
2 --po-> 3
3 --rf-> 1
4 --co-> 2
4 --rf-> 1
"
{ [a2]=0; 0:r4=0; 2:r10=0; 2:r12=0; }

P0( atomic_int *a2 )  {
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r4 = 1 /\ 2:r12 = 1 /\ 2:r10 = 2 )

C Dat3M Testgen Litmus
"
Program relation graph:
2 --po-> 3
3 --co-> 1
1 --rf-> 2
"
{ [a2]=0; 0:r1=0; 2:r9=0; 2:r11=0; }

P0( atomic_int *a2 )  {
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r1 = 1 /\ 2:r11 = 2 /\ 2:r9 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --rf-> 2
3 --co-> 1
4 --co-> 3
4 --rf-> 2
"
{ [a2]=0; 0:r2=0; 3:r9=0; 3:r11=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  r2 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r2 = 1 /\ 3:r12 = 1 /\ 3:r11 = 2 /\ 3:r9 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
2 --co-> 3
4 --co-> 2
3 --rf-> 1
4 --rf-> 1
"
{ [a2]=0; 0:r1=0; 3:r10=0; 3:r11=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  r1 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 1, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r11 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 0:r1 = 1 /\ 3:r12 = 1 /\ 3:r10 = 2 /\ 3:r11 = 1 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --co-> 2
2 --po-> 3
4 --co-> 1
4 --rf-> 3
"
{ [a2]=0; 1:r4=0; 3:r10=0; 3:r9=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
  r4 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 4, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r4 = 4 /\ 3:r12 = 4 /\ 3:r10 = 2 /\ 3:r9 = 3 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --co-> 2
2 --rf-> 3
4 --co-> 1
4 --rf-> 3
"
{ [a2]=0; 1:r3=0; 3:r9=0; 3:r10=0; 3:r12=0; }

P0( atomic_int *a2 )  {
  atomic_store_explicit(a2, 2, memory_order_seq_cst);
}

P1( atomic_int *a2 )  {
  r3 = atomic_load_explicit(a2, memory_order_seq_cst);
}

P2( atomic_int *a2 )  {
  atomic_store_explicit(a2, 3, memory_order_seq_cst);
}

P3( atomic_int *a2 )  {
  r12 = atomic_load_explicit(a2, memory_order_seq_cst);
  r9 = atomic_load_explicit(a2, memory_order_seq_cst);
  r10 = atomic_load_explicit(a2, memory_order_seq_cst);
}

exists ( 1:r3 = 3 /\ 3:r12 = 3 /\ 3:r9 = 2 /\ 3:r10 = 3 )

C Dat3M Testgen Litmus
"
Program relation graph:
1 --co-> 2
3 --co-> 1
2 --po-> 3
"
{ [a3]=0; 2:r9=0; 2:r10=0; 2:r11=0; }

P0( atomic_int *a3 )  {
  atomic_store_explicit(a3, 3, memory_order_seq_cst);
}

P1( atomic_int *a3 )  {
  atomic_store_explicit(a3, 2, memory_order_seq_cst);
  atomic_store_explicit(a3, 4, memory_order_seq_cst);
}

P2( atomic_int *a3 )  {
  r11 = atomic_load_explicit(a3, memory_order_seq_cst);
  r9 = atomic_load_explicit(a3, memory_order_seq_cst);
  r10 = atomic_load_explicit(a3, memory_order_seq_cst);
}

exists ( 2:r11 = 4 /\ 2:r9 = 3 /\ 2:r10 = 2 )

