Program relation graph:
1 --po-> 2
2 --po-> 3
3 --rf-> 1


[0] thread void P2()
0:       ThreadStart
1:       bv64 r4 = load(*&a1)
2:       store(*&a1, bv64(2))
3:    END_OF_T2:

Skipping init threads...
...
...
...

EXISTS( bv64 r4 == bv64(2) )

Program relation graph:
1 --po-> 2
2 --po-> 3
4 --co-> 1
4 --rf-> 3


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:       bv64 r2 = load(*&a2)
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(4))
6:    END_OF_T3:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r12 = load(*&a2)
9:       bv64 r9 = load(*&a2)
10:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r2 == bv64(4)) && (bv64 r12 == bv64(4)) && (bv64 r9 == bv64(2)) )

Program relation graph:
1 --po-> 2
2 --po-> 3
3 --co-> 1


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(1))
2:       store(*&a2, bv64(2))
3:    END_OF_T2:

[1] thread void P8()
4:       ThreadStart
5:       bv64 r11 = load(*&a2)
6:       bv64 r9 = load(*&a2)
7:    END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r11 == bv64(2)) && (bv64 r9 == bv64(1)) )

Program relation graph:
1 --po-> 2
3 --po-> 1
2 --rf-> 3


[0] thread void P2()
0:       ThreadStart
1:       bv64 r2 = load(*&a2)
2:       store(*&a2, bv64(3))
3:    END_OF_T2:

Skipping init threads...
...
...
...

EXISTS( bv64 r2 == bv64(3) )

Program relation graph:
1 --po-> 2
3 --po-> 1
4 --co-> 3
4 --rf-> 2


[0] thread void P1()
0:       ThreadStart
1:       store(*&a3, bv64(2))
2:       bv64 r1 = load(*&a3)
3:    END_OF_T1:

[1] thread void P2()
4:       ThreadStart
5:       store(*&a3, bv64(1))
6:    END_OF_T2:

[2] thread void P10()
7:       ThreadStart
8:       bv64 r12 = load(*&a3)
9:       bv64 r11 = load(*&a3)
10:   END_OF_T10:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r11 == bv64(2)) )

Program relation graph:
1 --po-> 2
3 --po-> 1
2 --co-> 3


[0] thread void P1()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:       store(*&a2, bv64(1))
3:    END_OF_T1:

[1] thread void P9()
4:       ThreadStart
5:       bv64 r10 = load(*&a2)
6:       bv64 r11 = load(*&a2)
7:    END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r10 == bv64(1)) && (bv64 r11 == bv64(2)) )

Program relation graph:
1 --po-> 2
2 --rf-> 3
4 --co-> 1
4 --rf-> 3


[0] thread void P1()
0:       ThreadStart
1:       bv64 r3 = load(*&a2)
2:    END_OF_T1:

[1] thread void P2()
3:       ThreadStart
4:       store(*&a2, bv64(2))
5:       store(*&a2, bv64(3))
6:    END_OF_T2:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r12 = load(*&a2)
9:       bv64 r9 = load(*&a2)
10:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r3 == bv64(3)) && (bv64 r12 == bv64(3)) && (bv64 r9 == bv64(2)) )

Program relation graph:
1 --po-> 2
3 --rf-> 1
4 --co-> 3
4 --rf-> 2


[0] thread void P2()
0:       ThreadStart
1:       bv64 r4 = load(*&a2)
2:       bv64 r1 = load(*&a2)
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(2))
6:    END_OF_T3:

[2] thread void P4()
7:       ThreadStart
8:       store(*&a2, bv64(3))
9:    END_OF_T4:

[3] thread void P10()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r11 = load(*&a2)
13:   END_OF_T10:

Skipping init threads...
...
...
...

EXISTS( (bv64 r4 == bv64(2)) && (bv64 r1 == bv64(3)) && (bv64 r12 == bv64(3)) && (bv64 r11 == bv64(2)) )

Program relation graph:
1 --po-> 2
3 --co-> 1
4 --co-> 3
4 --rf-> 2


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(1))
2:       bv64 r3 = load(*&a2)
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(3))
6:    END_OF_T3:

[2] thread void P4()
7:       ThreadStart
8:       store(*&a2, bv64(4))
9:    END_OF_T4:

[3] thread void P8()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r11 = load(*&a2)
13:      bv64 r9 = load(*&a2)
14:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r3 == bv64(4)) && (bv64 r12 == bv64(4)) && (bv64 r11 == bv64(3)) && (bv64 r9 == bv64(1)) )

Program relation graph:
1 --po-> 2
2 --co-> 3
3 --rf-> 1


[0] thread void P2()
0:       ThreadStart
1:       store(*&a1, bv64(1))
2:    END_OF_T2:

[1] thread void P5()
3:       ThreadStart
4:       bv64 r1 = load(*&a1)
5:       store(*&a1, bv64(2))
6:    END_OF_T5:

[2] thread void P9()
7:       ThreadStart
8:       bv64 r10 = load(*&a1)
9:       bv64 r11 = load(*&a1)
10:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r10 == bv64(2)) && (bv64 r11 == bv64(1)) )

Program relation graph:
1 --po-> 2
2 --co-> 3
3 --co-> 1


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(1))
2:       store(*&a2, bv64(2))
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(3))
6:    END_OF_T3:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r10 = load(*&a2)
9:       bv64 r11 = load(*&a2)
10:      bv64 r9 = load(*&a2)
11:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r10 == bv64(2)) && (bv64 r11 == bv64(3)) && (bv64 r9 == bv64(1)) )

Program relation graph:
3 --po-> 1
2 --po-> 3
1 --rf-> 2


[0] thread void P2()
0:       ThreadStart
1:       bv64 r2 = load(*&a1)
2:       store(*&a1, bv64(2))
3:    END_OF_T2:

Skipping init threads...
...
...
...

EXISTS( bv64 r2 == bv64(2) )

Program relation graph:
3 --po-> 1
2 --po-> 3
4 --co-> 2
4 --rf-> 1


[0] thread void P1()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:       bv64 r1 = load(*&a2)
3:    END_OF_T1:

[1] thread void P2()
4:       ThreadStart
5:       store(*&a2, bv64(1))
6:    END_OF_T2:

[2] thread void P9()
7:       ThreadStart
8:       bv64 r12 = load(*&a2)
9:       bv64 r10 = load(*&a2)
10:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r10 == bv64(2)) )

Program relation graph:
3 --po-> 1
2 --po-> 3
1 --co-> 2


[0] thread void P1()
0:       ThreadStart
1:       store(*&a2, bv64(1))
2:       store(*&a2, bv64(2))
3:    END_OF_T1:

[1] thread void P8()
4:       ThreadStart
5:       bv64 r9 = load(*&a2)
6:       bv64 r10 = load(*&a2)
7:    END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r9 == bv64(2)) && (bv64 r10 == bv64(1)) )

Program relation graph:
3 --po-> 1
1 --rf-> 2
4 --co-> 3
4 --rf-> 2


[0] thread void P1()
0:       ThreadStart
1:       bv64 r1 = load(*&a2)
2:    END_OF_T1:

[1] thread void P2()
3:       ThreadStart
4:       store(*&a2, bv64(2))
5:       store(*&a2, bv64(1))
6:    END_OF_T2:

[2] thread void P10()
7:       ThreadStart
8:       bv64 r12 = load(*&a2)
9:       bv64 r11 = load(*&a2)
10:   END_OF_T10:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r11 == bv64(2)) )

Program relation graph:
3 --po-> 1
2 --rf-> 3
4 --co-> 2
4 --rf-> 1


[0] thread void P1()
0:       ThreadStart
1:       bv64 r2 = load(*&a2)
2:       bv64 r4 = load(*&a2)
3:    END_OF_T1:

[1] thread void P2()
4:       ThreadStart
5:       store(*&a2, bv64(2))
6:    END_OF_T2:

[2] thread void P3()
7:       ThreadStart
8:       store(*&a2, bv64(1))
9:    END_OF_T3:

[3] thread void P9()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r10 = load(*&a2)
13:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r2 == bv64(2)) && (bv64 r4 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r10 == bv64(2)) )

Program relation graph:
3 --po-> 1
2 --co-> 3
4 --co-> 2
4 --rf-> 1


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(3))
2:       bv64 r3 = load(*&a2)
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(2))
6:    END_OF_T3:

[2] thread void P4()
7:       ThreadStart
8:       store(*&a2, bv64(1))
9:    END_OF_T4:

[3] thread void P9()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r10 = load(*&a2)
13:      bv64 r11 = load(*&a2)
14:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r3 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r10 == bv64(2)) && (bv64 r11 == bv64(3)) )

Program relation graph:
3 --po-> 1
1 --co-> 2
2 --rf-> 3


[0] thread void P1()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:    END_OF_T1:

[1] thread void P4()
3:       ThreadStart
4:       bv64 r4 = load(*&a2)
5:       store(*&a2, bv64(1))
6:    END_OF_T4:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r9 = load(*&a2)
9:       bv64 r10 = load(*&a2)
10:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r4 == bv64(2)) && (bv64 r9 == bv64(1)) && (bv64 r10 == bv64(2)) )

Program relation graph:
3 --po-> 1
1 --co-> 2
2 --co-> 3


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(1))
2:       store(*&a2, bv64(2))
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(3))
6:    END_OF_T3:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r10 = load(*&a2)
9:       bv64 r9 = load(*&a2)
10:      bv64 r11 = load(*&a2)
11:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r10 == bv64(2)) && (bv64 r9 == bv64(3)) && (bv64 r11 == bv64(1)) )

Program relation graph:
2 --po-> 3
1 --rf-> 2
4 --co-> 1
4 --rf-> 3


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:    END_OF_T2:

[1] thread void P3()
3:       ThreadStart
4:       bv64 r1 = load(*&a2)
5:       bv64 r4 = load(*&a2)
6:    END_OF_T3:

[2] thread void P4()
7:       ThreadStart
8:       store(*&a2, bv64(3))
9:    END_OF_T4:

[3] thread void P8()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r9 = load(*&a2)
13:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(2)) && (bv64 r4 == bv64(3)) && (bv64 r12 == bv64(3)) && (bv64 r9 == bv64(2)) )

Program relation graph:
2 --po-> 3
3 --rf-> 1
4 --co-> 2
4 --rf-> 1


[0] thread void P1()
0:       ThreadStart
1:       bv64 r4 = load(*&a2)
2:    END_OF_T1:

[1] thread void P2()
3:       ThreadStart
4:       store(*&a2, bv64(2))
5:       store(*&a2, bv64(1))
6:    END_OF_T2:

[2] thread void P9()
7:       ThreadStart
8:       bv64 r12 = load(*&a2)
9:       bv64 r10 = load(*&a2)
10:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r4 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r10 == bv64(2)) )

Program relation graph:
2 --po-> 3
3 --co-> 1
1 --rf-> 2


[0] thread void P2()
0:       ThreadStart
1:       bv64 r1 = load(*&a2)
2:       store(*&a2, bv64(2))
3:    END_OF_T2:

[1] thread void P3()
4:       ThreadStart
5:       store(*&a2, bv64(1))
6:    END_OF_T3:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r11 = load(*&a2)
9:       bv64 r9 = load(*&a2)
10:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r11 == bv64(2)) && (bv64 r9 == bv64(1)) )

Program relation graph:
1 --rf-> 2
3 --co-> 1
4 --co-> 3
4 --rf-> 2


[0] thread void P2()
0:       ThreadStart
1:       bv64 r2 = load(*&a2)
2:    END_OF_T2:

[1] thread void P3()
3:       ThreadStart
4:       store(*&a2, bv64(2))
5:    END_OF_T3:

[2] thread void P4()
6:       ThreadStart
7:       store(*&a2, bv64(1))
8:    END_OF_T4:

[3] thread void P8()
9:       ThreadStart
10:      bv64 r12 = load(*&a2)
11:      bv64 r11 = load(*&a2)
12:      bv64 r9 = load(*&a2)
13:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r2 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r11 == bv64(2)) && (bv64 r9 == bv64(1)) )

Program relation graph:
2 --co-> 3
4 --co-> 2
3 --rf-> 1
4 --rf-> 1


[0] thread void P2()
0:       ThreadStart
1:       bv64 r1 = load(*&a2)
2:    END_OF_T2:

[1] thread void P3()
3:       ThreadStart
4:       store(*&a2, bv64(2))
5:    END_OF_T3:

[2] thread void P4()
6:       ThreadStart
7:       store(*&a2, bv64(1))
8:    END_OF_T4:

[3] thread void P9()
9:       ThreadStart
10:      bv64 r12 = load(*&a2)
11:      bv64 r10 = load(*&a2)
12:      bv64 r11 = load(*&a2)
13:   END_OF_T9:

Skipping init threads...
...
...
...

EXISTS( (bv64 r1 == bv64(1)) && (bv64 r12 == bv64(1)) && (bv64 r10 == bv64(2)) && (bv64 r11 == bv64(1)) )

Program relation graph:
1 --co-> 2
2 --po-> 3
4 --co-> 1
4 --rf-> 3


[0] thread void P2()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:    END_OF_T2:

[1] thread void P3()
3:       ThreadStart
4:       store(*&a2, bv64(3))
5:       bv64 r4 = load(*&a2)
6:    END_OF_T3:

[2] thread void P6()
7:       ThreadStart
8:       store(*&a2, bv64(4))
9:    END_OF_T6:

[3] thread void P8()
10:      ThreadStart
11:      bv64 r12 = load(*&a2)
12:      bv64 r10 = load(*&a2)
13:      bv64 r9 = load(*&a2)
14:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r4 == bv64(4)) && (bv64 r12 == bv64(4)) && (bv64 r10 == bv64(2)) && (bv64 r9 == bv64(3)) )

Program relation graph:
1 --co-> 2
2 --rf-> 3
4 --co-> 1
4 --rf-> 3


[0] thread void P1()
0:       ThreadStart
1:       store(*&a2, bv64(2))
2:    END_OF_T1:

[1] thread void P2()
3:       ThreadStart
4:       bv64 r3 = load(*&a2)
5:    END_OF_T2:

[2] thread void P3()
6:       ThreadStart
7:       store(*&a2, bv64(3))
8:    END_OF_T3:

[3] thread void P8()
9:       ThreadStart
10:      bv64 r12 = load(*&a2)
11:      bv64 r9 = load(*&a2)
12:      bv64 r10 = load(*&a2)
13:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r3 == bv64(3)) && (bv64 r12 == bv64(3)) && (bv64 r9 == bv64(2)) && (bv64 r10 == bv64(3)) )

Program relation graph:
1 --co-> 2
3 --co-> 1
2 --po-> 3


[0] thread void P1()
0:       ThreadStart
1:       store(*&a3, bv64(3))
2:    END_OF_T1:

[1] thread void P3()
3:       ThreadStart
4:       store(*&a3, bv64(2))
5:       store(*&a3, bv64(4))
6:    END_OF_T3:

[2] thread void P8()
7:       ThreadStart
8:       bv64 r11 = load(*&a3)
9:       bv64 r9 = load(*&a3)
10:      bv64 r10 = load(*&a3)
11:   END_OF_T8:

Skipping init threads...
...
...
...

EXISTS( (bv64 r11 == bv64(4)) && (bv64 r9 == bv64(3)) && (bv64 r10 == bv64(2)) )

