; SPIR-V
; Version: 1.0
; Generator: Google Clspv; 0
; Bound: 80
; Schema: 0
               OpCapability Shader
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_non_semantic_info"
         %60 = OpExtInstImport "NonSemantic.ClspvReflection.5"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %18 "mutex_test"
               OpSource OpenCL_C 200
         %61 = OpString "mutex_test"
         %62 = OpString " __kernel"
         %65 = OpString "now_serving"
         %68 = OpString "res"
         %71 = OpString "iters"
         %75 = OpString "next_ticket"
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 0
               OpDecorate %12 Coherent
               OpDecorate %13 DescriptorSet 0
               OpDecorate %13 Binding 1
               OpDecorate %13 Coherent
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 2
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 3
               OpDecorate %15 Coherent
               OpDecorate %2 SpecId 0
               OpDecorate %3 SpecId 1
               OpDecorate %4 SpecId 2
       %uint = OpTypeInt 32 0
          %2 = OpSpecConstant %uint 1
          %3 = OpSpecConstant %uint 1
          %4 = OpSpecConstant %uint 1
     %v3uint = OpTypeVector %uint 3
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %2 %3 %4
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
%_runtimearr_uint = OpTypeRuntimeArray %uint
 %_struct_10 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer__struct_10 = OpTypePointer StorageBuffer %_struct_10
       %void = OpTypeVoid
         %17 = OpTypeFunction %void
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
     %uint_1 = OpConstant %uint 1
    %uint_64 = OpConstant %uint 64
    %uint_72 = OpConstant %uint 72
    %uint_66 = OpConstant %uint 66
    %uint_68 = OpConstant %uint 68
     %uint_4 = OpConstant %uint 4
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
          %8 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %12 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %13 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %14 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %15 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %18 = OpFunction %void None %17
         %19 = OpLabel
         %22 = OpAccessChain %_ptr_StorageBuffer_uint %12 %uint_0 %uint_0
         %23 = OpAccessChain %_ptr_StorageBuffer_uint %13 %uint_0 %uint_0
         %24 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_0
         %25 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %uint_0
         %26 = OpLoad %uint %24
         %28 = OpINotEqual %bool %26 %uint_0
               OpSelectionMerge %59 None
               OpBranchConditional %28 %31 %59
         %31 = OpLabel
         %32 = OpPhi %uint %53 %47 %uint_0 %19
               OpMemoryBarrier %uint_1 %uint_64
         %36 = OpAtomicIAdd %uint %25 %uint_1 %uint_72 %uint_1
               OpLoopMerge %57 %47 None
               OpBranch %39
         %39 = OpLabel
         %41 = OpAtomicLoad %uint %22 %uint_1 %uint_66
         %42 = OpIEqual %bool %41 %36
               OpLoopMerge %45 %39 None
               OpBranchConditional %42 %45 %39
         %45 = OpLabel
               OpBranch %47
         %47 = OpLabel
         %48 = OpLoad %uint %23
         %49 = OpIAdd %uint %48 %uint_1
               OpStore %23 %49
         %50 = OpAtomicLoad %uint %22 %uint_1 %uint_66
         %51 = OpIAdd %uint %50 %uint_1
               OpAtomicStore %22 %uint_1 %uint_68 %51
         %53 = OpIAdd %uint %32 %uint_1
         %54 = OpLoad %uint %24
         %55 = OpUGreaterThanEqual %bool %53 %54
               OpBranchConditional %55 %57 %31
         %57 = OpLabel
               OpBranch %59
         %59 = OpLabel
               OpReturn
               OpFunctionEnd
         %64 = OpExtInst %void %60 Kernel %18 %61 %uint_4 %uint_0 %62
         %66 = OpExtInst %void %60 ArgumentInfo %65
         %67 = OpExtInst %void %60 ArgumentStorageBuffer %64 %uint_0 %uint_0 %uint_0 %66
         %69 = OpExtInst %void %60 ArgumentInfo %68
         %70 = OpExtInst %void %60 ArgumentStorageBuffer %64 %uint_1 %uint_0 %uint_1 %69
         %72 = OpExtInst %void %60 ArgumentInfo %71
         %74 = OpExtInst %void %60 ArgumentStorageBuffer %64 %uint_2 %uint_0 %uint_2 %72
         %76 = OpExtInst %void %60 ArgumentInfo %75
         %78 = OpExtInst %void %60 ArgumentStorageBuffer %64 %uint_3 %uint_0 %uint_3 %76
         %79 = OpExtInst %void %60 SpecConstantWorkgroupSize %uint_0 %uint_1 %uint_2
