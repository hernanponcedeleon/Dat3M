; SPIR-V
; Version: 1.0
; Generator: Google Clspv; 0
; Bound: 70
; Schema: 0
               OpCapability Shader
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_non_semantic_info"
         %54 = OpExtInstImport "NonSemantic.ClspvReflection.5"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %17 "mutex_test"
               OpSource OpenCL_C 200
         %55 = OpString "mutex_test"
         %56 = OpString " __kernel"
         %59 = OpString "l"
         %62 = OpString "res"
         %65 = OpString "iters"
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 0
               OpDecorate %13 DescriptorSet 0
               OpDecorate %13 Binding 1
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 2
               OpDecorate %2 SpecId 0
               OpDecorate %3 SpecId 1
               OpDecorate %4 SpecId 2
       %uint = OpTypeInt 32 0
          %2 = OpSpecConstant %uint 1
          %3 = OpSpecConstant %uint 1
          %4 = OpSpecConstant %uint 1
     %v3uint = OpTypeVector %uint 3
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %2 %3 %4
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
%_runtimearr_uint = OpTypeRuntimeArray %uint
 %_struct_10 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer__struct_10 = OpTypePointer StorageBuffer %_struct_10
       %void = OpTypeVoid
         %16 = OpTypeFunction %void
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
     %uint_0 = OpConstant %uint 0
       %bool = OpTypeBool
     %uint_1 = OpConstant %uint 1
    %uint_72 = OpConstant %uint 72
    %uint_66 = OpConstant %uint 66
    %uint_68 = OpConstant %uint 68
     %uint_3 = OpConstant %uint 3
     %uint_2 = OpConstant %uint 2
          %8 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %12 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %13 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %14 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %17 = OpFunction %void None %16
         %18 = OpLabel
         %21 = OpAccessChain %_ptr_StorageBuffer_uint %12 %uint_0 %uint_0
         %22 = OpAccessChain %_ptr_StorageBuffer_uint %13 %uint_0 %uint_0
         %23 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_0
         %24 = OpLoad %uint %23
         %26 = OpINotEqual %bool %24 %uint_0
               OpSelectionMerge %53 None
               OpBranchConditional %26 %29 %53
         %29 = OpLabel
         %30 = OpPhi %uint %47 %43 %uint_0 %18
               OpLoopMerge %51 %43 None
               OpBranch %33
         %33 = OpLabel
         %37 = OpAtomicCompareExchange %uint %21 %uint_1 %uint_72 %uint_66 %uint_1 %uint_0
         %38 = OpIEqual %bool %37 %uint_0
               OpLoopMerge %41 %33 None
               OpBranchConditional %38 %41 %33
         %41 = OpLabel
               OpBranch %43
         %43 = OpLabel
         %44 = OpLoad %uint %22
         %45 = OpIAdd %uint %44 %uint_1
               OpStore %22 %45
               OpAtomicStore %21 %uint_1 %uint_68 %uint_0
         %47 = OpIAdd %uint %30 %uint_1
         %48 = OpLoad %uint %23
         %49 = OpUGreaterThanEqual %bool %47 %48
               OpBranchConditional %49 %51 %29
         %51 = OpLabel
               OpBranch %53
         %53 = OpLabel
               OpReturn
               OpFunctionEnd
         %58 = OpExtInst %void %54 Kernel %17 %55 %uint_3 %uint_0 %56
         %60 = OpExtInst %void %54 ArgumentInfo %59
         %61 = OpExtInst %void %54 ArgumentStorageBuffer %58 %uint_0 %uint_0 %uint_0 %60
         %63 = OpExtInst %void %54 ArgumentInfo %62
         %64 = OpExtInst %void %54 ArgumentStorageBuffer %58 %uint_1 %uint_0 %uint_1 %63
         %66 = OpExtInst %void %54 ArgumentInfo %65
         %68 = OpExtInst %void %54 ArgumentStorageBuffer %58 %uint_2 %uint_0 %uint_2 %66
         %69 = OpExtInst %void %54 SpecConstantWorkgroupSize %uint_0 %uint_1 %uint_2
