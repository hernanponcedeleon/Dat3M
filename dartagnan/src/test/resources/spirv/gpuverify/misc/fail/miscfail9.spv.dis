; @Input: %18 = {{0, 0, 0, 0, 0, 0, 0, 0, 0}}
; @Config: 3, 1, 3
; SPIR-V
; Version: 1.6
; Generator: Google Clspv; 0
; Bound: 7117
; Schema: 0
               OpCapability Shader
        %184 = OpExtInstImport "GLSL.std.450"
       %7107 = OpExtInstImport "NonSemantic.ClspvReflection.5"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %21 "test" %gl_GlobalInvocationID %13 %18 %5
               OpSource OpenCL_C 200
       %7108 = OpString "test"
       %7109 = OpString " __kernel"
       %7111 = OpString "A"
               OpMemberDecorate %_struct_3 0 Offset 0
               OpDecorate %_struct_3 Block
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %_struct_16 0 Offset 0
               OpDecorate %_struct_16 Block
               OpDecorate %18 DescriptorSet 0
               OpDecorate %18 Binding 0
               OpDecorate %228 NoContraction
               OpDecorate %229 NoContraction
               OpDecorate %770 NoContraction
               OpDecorate %799 NoContraction
               OpDecorate %1298 NoContraction
               OpDecorate %1338 NoContraction
               OpDecorate %1347 NoContraction
               OpDecorate %1348 NoContraction
               OpDecorate %1850 NoContraction
               OpDecorate %1884 NoContraction
               OpDecorate %1885 NoContraction
               OpDecorate %1889 NoContraction
               OpDecorate %1890 NoContraction
               OpDecorate %1891 NoContraction
               OpDecorate %1904 NoContraction
               OpDecorate %1906 NoContraction
               OpDecorate %1908 NoContraction
               OpDecorate %1909 NoContraction
               OpDecorate %2408 NoContraction
               OpDecorate %2442 NoContraction
               OpDecorate %2446 NoContraction
               OpDecorate %2447 NoContraction
               OpDecorate %2448 NoContraction
               OpDecorate %2449 NoContraction
               OpDecorate %2450 NoContraction
               OpDecorate %2451 NoContraction
               OpDecorate %2452 NoContraction
               OpDecorate %2949 NoContraction
               OpDecorate %2983 NoContraction
               OpDecorate %2987 NoContraction
               OpDecorate %2988 NoContraction
               OpDecorate %2989 NoContraction
               OpDecorate %2990 NoContraction
               OpDecorate %2991 NoContraction
               OpDecorate %2993 NoContraction
               OpDecorate %2994 NoContraction
               OpDecorate %3492 NoContraction
               OpDecorate %3526 NoContraction
               OpDecorate %3530 NoContraction
               OpDecorate %3531 NoContraction
               OpDecorate %3532 NoContraction
               OpDecorate %3533 NoContraction
               OpDecorate %3534 NoContraction
               OpDecorate %3543 NoContraction
               OpDecorate %3544 NoContraction
               OpDecorate %3546 NoContraction
               OpDecorate %3548 NoContraction
               OpDecorate %3549 NoContraction
               OpDecorate %3551 NoContraction
               OpDecorate %3552 NoContraction
               OpDecorate %3554 NoContraction
               OpDecorate %3555 NoContraction
               OpDecorate %3557 NoContraction
               OpDecorate %3558 NoContraction
               OpDecorate %3559 NoContraction
               OpDecorate %3560 NoContraction
               OpDecorate %3561 NoContraction
               OpDecorate %3562 NoContraction
               OpDecorate %3564 NoContraction
               OpDecorate %3565 NoContraction
               OpDecorate %3566 NoContraction
               OpDecorate %3567 NoContraction
               OpDecorate %3569 NoContraction
               OpDecorate %3571 NoContraction
               OpDecorate %3572 NoContraction
               OpDecorate %3574 NoContraction
               OpDecorate %3575 NoContraction
               OpDecorate %3577 NoContraction
               OpDecorate %3578 NoContraction
               OpDecorate %3580 NoContraction
               OpDecorate %3581 NoContraction
               OpDecorate %3583 NoContraction
               OpDecorate %3584 NoContraction
               OpDecorate %3601 NoContraction
               OpDecorate %3602 NoContraction
               OpDecorate %3604 NoContraction
               OpDecorate %3605 NoContraction
               OpDecorate %3606 NoContraction
               OpDecorate %3607 NoContraction
               OpDecorate %3608 NoContraction
               OpDecorate %3609 NoContraction
               OpDecorate %3778 NoContraction
               OpDecorate %3779 NoContraction
               OpDecorate %4278 NoContraction
               OpDecorate %4307 NoContraction
               OpDecorate %4804 NoContraction
               OpDecorate %4844 NoContraction
               OpDecorate %4853 NoContraction
               OpDecorate %4854 NoContraction
               OpDecorate %5356 NoContraction
               OpDecorate %5390 NoContraction
               OpDecorate %5391 NoContraction
               OpDecorate %5395 NoContraction
               OpDecorate %5396 NoContraction
               OpDecorate %5397 NoContraction
               OpDecorate %5409 NoContraction
               OpDecorate %5410 NoContraction
               OpDecorate %5412 NoContraction
               OpDecorate %5413 NoContraction
               OpDecorate %5912 NoContraction
               OpDecorate %5946 NoContraction
               OpDecorate %5950 NoContraction
               OpDecorate %5951 NoContraction
               OpDecorate %5952 NoContraction
               OpDecorate %5953 NoContraction
               OpDecorate %5954 NoContraction
               OpDecorate %5955 NoContraction
               OpDecorate %5956 NoContraction
               OpDecorate %6453 NoContraction
               OpDecorate %6487 NoContraction
               OpDecorate %6491 NoContraction
               OpDecorate %6492 NoContraction
               OpDecorate %6493 NoContraction
               OpDecorate %6494 NoContraction
               OpDecorate %6495 NoContraction
               OpDecorate %6496 NoContraction
               OpDecorate %6497 NoContraction
               OpDecorate %6994 NoContraction
               OpDecorate %7028 NoContraction
               OpDecorate %7032 NoContraction
               OpDecorate %7033 NoContraction
               OpDecorate %7034 NoContraction
               OpDecorate %7035 NoContraction
               OpDecorate %7036 NoContraction
               OpDecorate %7046 NoContraction
               OpDecorate %7047 NoContraction
               OpDecorate %7048 NoContraction
               OpDecorate %7049 NoContraction
               OpDecorate %7050 NoContraction
               OpDecorate %7051 NoContraction
               OpDecorate %7052 NoContraction
               OpDecorate %7053 NoContraction
               OpDecorate %7054 NoContraction
               OpDecorate %7055 NoContraction
               OpDecorate %7056 NoContraction
               OpDecorate %7057 NoContraction
               OpDecorate %7058 NoContraction
               OpDecorate %7059 NoContraction
               OpDecorate %7060 NoContraction
               OpDecorate %7061 NoContraction
               OpDecorate %7062 NoContraction
               OpDecorate %7063 NoContraction
               OpDecorate %7064 NoContraction
               OpDecorate %7065 NoContraction
               OpDecorate %7066 NoContraction
               OpDecorate %7067 NoContraction
               OpDecorate %7068 NoContraction
               OpDecorate %7069 NoContraction
               OpDecorate %7070 NoContraction
               OpDecorate %7071 NoContraction
               OpDecorate %7072 NoContraction
               OpDecorate %7073 NoContraction
               OpDecorate %7074 NoContraction
               OpDecorate %7086 NoContraction
               OpDecorate %7087 NoContraction
               OpDecorate %7088 NoContraction
               OpDecorate %7089 NoContraction
               OpDecorate %7090 NoContraction
               OpDecorate %7091 NoContraction
               OpDecorate %7092 NoContraction
               OpDecorate %7093 NoContraction
               OpDecorate %8 SpecId 0
               OpDecorate %9 SpecId 1
               OpDecorate %10 SpecId 2
       %uint = OpTypeInt 32 0
     %v3uint = OpTypeVector %uint 3
  %_struct_3 = OpTypeStruct %v3uint
%_ptr_PushConstant__struct_3 = OpTypePointer PushConstant %_struct_3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
          %8 = OpSpecConstant %uint 1
          %9 = OpSpecConstant %uint 1
         %10 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %8 %9 %10
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
 %_struct_16 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer__struct_16 = OpTypePointer StorageBuffer %_struct_16
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_ptr_Input_uint = OpTypePointer Input %uint
     %uint_0 = OpConstant %uint 0
%_ptr_PushConstant_uint = OpTypePointer PushConstant %uint
         %33 = OpTypeFunction %float %float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%uint_2147483647 = OpConstant %uint 2147483647
       %bool = OpTypeBool
%float_8388608 = OpConstant %float 8388608
    %uint_23 = OpConstant %uint 23
%uint_8388607 = OpConstant %uint 8388607
%uint_8388608 = OpConstant %uint 8388608
%uint_4266746795 = OpConstant %uint 4266746795
 %_struct_58 = OpTypeStruct %uint %uint
%uint_1011060801 = OpConstant %uint 1011060801
     %uint_1 = OpConstant %uint 1
%uint_3680671129 = OpConstant %uint 3680671129
%uint_4113882560 = OpConstant %uint 4113882560
%uint_4230436817 = OpConstant %uint 4230436817
%uint_1313084713 = OpConstant %uint 1313084713
%uint_2734261102 = OpConstant %uint 2734261102
%uint_4294967176 = OpConstant %uint 4294967176
    %uint_31 = OpConstant %uint 31
%uint_4294967264 = OpConstant %uint 4294967264
    %uint_24 = OpConstant %uint 24
    %uint_29 = OpConstant %uint 29
     %uint_2 = OpConstant %uint 2
    %uint_30 = OpConstant %uint 30
     %uint_9 = OpConstant %uint 9
%uint_1056964608 = OpConstant %uint 1056964608
%uint_4294967295 = OpConstant %uint 4294967295
%uint_864026624 = OpConstant %uint 864026624
%float_1_57079625 = OpConstant %float 1.57079625
    %v2float = OpTypeVector %float 2
        %261 = OpUndef %float
        %262 = OpConstantComposite %v2float %float_1_57079625 %261
     %v2uint = OpTypeVector %uint 2
%uint_2139095040 = OpConstant %uint 2139095040
        %267 = OpConstantComposite %v2uint %uint_2139095040 %uint_2139095040
     %v2bool = OpTypeVector %bool 2
        %270 = OpConstantNull %v2uint
        %272 = OpConstantComposite %v2uint %uint_8388607 %uint_8388607
%uint_2147483648 = OpConstant %uint 2147483648
        %277 = OpConstantComposite %v2uint %uint_2147483648 %uint_2147483648
        %290 = OpConstantNull %v2float
        %292 = OpUndef %v2bool
    %float_0 = OpConstant %float 0
   %uint_255 = OpConstant %uint 255
%uint_4294967169 = OpConstant %uint 4294967169
        %319 = OpConstantComposite %v2uint %uint_8388608 %uint_8388608
    %uint_14 = OpConstant %uint 14
    %uint_18 = OpConstant %uint 18
%uint_4294967042 = OpConstant %uint 4294967042
     %uint_5 = OpConstant %uint 5
%uint_268435424 = OpConstant %uint 268435424
%uint_268435456 = OpConstant %uint 268435456
        %354 = OpUndef %uint
        %355 = OpConstantComposite %v2uint %uint_0 %354
    %uint_32 = OpConstant %uint 32
%uint_4294967233 = OpConstant %uint 4294967233
        %420 = OpConstantComposite %v2uint %354 %uint_0
    %uint_63 = OpConstant %uint 63
        %528 = OpUndef %v2uint
      %false = OpConstantFalse %bool
        %536 = OpConstantComposite %v2uint %uint_4294967295 %uint_4294967295
     %uint_3 = OpConstant %uint 3
%uint_4294967293 = OpConstant %uint 4294967293
        %650 = OpConstantComposite %v2uint %uint_4294967295 %354
     %uint_4 = OpConstant %uint 4
       %true = OpConstantTrue %bool
%uint_16777215 = OpConstant %uint 16777215
   %uint_127 = OpConstant %uint 127
%uint_4294967170 = OpConstant %uint 4294967170
%uint_1065353216 = OpConstant %uint 1065353216
        %768 = OpUndef %v2float
%float_7_54978942en08 = OpConstant %float 7.54978942e-08
        %829 = OpConstantComposite %v2float %float_7_54978942en08 %261
%float_0_636619747 = OpConstant %float 0.636619747
  %float_0_5 = OpConstant %float 0.5
%float_5_39030253en15 = OpConstant %float 5.39030253e-15
       %3023 = OpConstantComposite %v2float %float_5_39030253en15 %261
%float_1_58969102en10 = OpConstant %float 1.58969102e-10
%float_n2_50507597en08 = OpConstant %float -2.50507597e-08
%float_2_72500006en06 = OpConstant %float 2.72500006e-06
%float_n0_00019840087 = OpConstant %float -0.00019840087
%float_0_00833333191 = OpConstant %float 0.00833333191
%float_0_166666672 = OpConstant %float 0.166666672
%float_1_13596476en11 = OpConstant %float 1.13596476e-11
%float_2_08757234en09 = OpConstant %float 2.08757234e-09
%float_n2_7301013en07 = OpConstant %float -2.7301013e-07
%float_2_48005999en05 = OpConstant %float 2.48005999e-05
%float_n0_00138888881 = OpConstant %float -0.00138888881
%float_0_0416666679 = OpConstant %float 0.0416666679
%uint_4278190080 = OpConstant %uint 4278190080
%uint_3244713574 = OpConstant %uint 3244713574
%uint_11429479 = OpConstant %uint 11429479
%uint_1061683200 = OpConstant %uint 1061683200
%float_0_28125 = OpConstant %float 0.28125
    %float_1 = OpConstant %float 1
%uint_2139095039 = OpConstant %uint 2139095039
%float_0x1_8p_128 = OpConstant %float 0x1.8p+128
       %7106 = OpConstantComposite %v2uint %uint_1 %uint_0
    %uint_12 = OpConstant %uint 12
          %5 = OpVariable %_ptr_PushConstant__struct_3 PushConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %13 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %18 = OpVariable %_ptr_StorageBuffer__struct_16 StorageBuffer
         %21 = OpFunction %void None %20
         %22 = OpLabel
         %25 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %26 = OpLoad %uint %25
         %28 = OpAccessChain %_ptr_PushConstant_uint %5 %uint_0 %uint_0
         %29 = OpLoad %uint %28
         %30 = OpIAdd %uint %29 %26
         %31 = OpConvertUToF %float %30
         %32 = OpFunctionCall %float %34 %31
               OpReturn
               OpFunctionEnd
         %34 = OpFunction %float None %33
         %35 = OpFunctionParameter %float
         %36 = OpLabel
         %38 = OpAccessChain %_ptr_StorageBuffer_float %18 %uint_0 %uint_0
         %39 = OpBitcast %uint %35
         %41 = OpBitwiseAnd %uint %39 %uint_2147483647
         %42 = OpBitcast %float %41
         %43 = OpBitcast %uint %42
         %46 = OpFUnordGreaterThanEqual %bool %42 %float_8388608
               OpSelectionMerge %1895 None
               OpBranchConditional %46 %49 %1895
         %49 = OpLabel
         %51 = OpShiftRightLogical %uint %43 %uint_23
         %53 = OpBitwiseAnd %uint %43 %uint_8388607
         %55 = OpBitwiseOr %uint %53 %uint_8388608
         %57 = OpIMul %uint %55 %uint_4266746795
         %59 = OpUMulExtended %_struct_58 %55 %uint_4266746795
         %60 = OpCompositeExtract %uint %59 1
         %62 = OpIMul %uint %55 %uint_1011060801
         %63 = OpIAdd %uint %60 %62
         %64 = OpUMulExtended %_struct_58 %55 %uint_1011060801
         %65 = OpCompositeExtract %uint %64 1
         %66 = OpULessThan %bool %63 %60
         %68 = OpSelect %uint %66 %uint_1 %uint_0
         %69 = OpIAdd %uint %65 %68
         %71 = OpIMul %uint %55 %uint_3680671129
         %72 = OpIAdd %uint %69 %71
         %73 = OpUMulExtended %_struct_58 %55 %uint_3680671129
         %74 = OpCompositeExtract %uint %73 1
         %75 = OpULessThan %bool %72 %69
         %76 = OpSelect %uint %75 %uint_1 %uint_0
         %77 = OpIAdd %uint %74 %76
         %79 = OpIMul %uint %55 %uint_4113882560
         %80 = OpIAdd %uint %77 %79
         %81 = OpUMulExtended %_struct_58 %55 %uint_4113882560
         %82 = OpCompositeExtract %uint %81 1
         %83 = OpULessThan %bool %80 %77
         %84 = OpSelect %uint %83 %uint_1 %uint_0
         %85 = OpIAdd %uint %82 %84
         %87 = OpIMul %uint %55 %uint_4230436817
         %88 = OpIAdd %uint %85 %87
         %89 = OpUMulExtended %_struct_58 %55 %uint_4230436817
         %90 = OpCompositeExtract %uint %89 1
         %91 = OpULessThan %bool %88 %85
         %92 = OpSelect %uint %91 %uint_1 %uint_0
         %93 = OpIAdd %uint %90 %92
         %95 = OpIMul %uint %55 %uint_1313084713
         %96 = OpIAdd %uint %93 %95
         %97 = OpUMulExtended %_struct_58 %55 %uint_1313084713
         %98 = OpCompositeExtract %uint %97 1
         %99 = OpULessThan %bool %96 %93
        %100 = OpSelect %uint %99 %uint_1 %uint_0
        %101 = OpIAdd %uint %98 %100
        %103 = OpIMul %uint %55 %uint_2734261102
        %104 = OpIAdd %uint %101 %103
        %105 = OpUMulExtended %_struct_58 %55 %uint_2734261102
        %106 = OpCompositeExtract %uint %105 1
        %107 = OpULessThan %bool %104 %101
        %108 = OpSelect %uint %107 %uint_1 %uint_0
        %109 = OpIAdd %uint %106 %108
        %111 = OpIAdd %uint %51 %uint_4294967176
        %113 = OpUGreaterThan %bool %111 %uint_31
        %114 = OpSelect %uint %113 %104 %109
        %115 = OpSelect %uint %113 %96 %104
        %116 = OpSelect %uint %113 %88 %96
        %117 = OpSelect %uint %113 %80 %88
        %118 = OpSelect %uint %113 %72 %80
        %119 = OpSelect %uint %113 %63 %72
        %120 = OpSelect %uint %113 %57 %63
        %122 = OpSelect %uint %113 %uint_4294967264 %uint_0
        %123 = OpIAdd %uint %122 %111
        %124 = OpUGreaterThan %bool %123 %uint_31
        %125 = OpSelect %uint %124 %115 %114
        %126 = OpSelect %uint %124 %116 %115
        %127 = OpSelect %uint %124 %117 %116
        %128 = OpSelect %uint %124 %118 %117
        %129 = OpSelect %uint %124 %119 %118
        %130 = OpSelect %uint %124 %120 %119
        %131 = OpSelect %uint %124 %uint_4294967264 %uint_0
        %132 = OpIAdd %uint %131 %123
        %133 = OpUGreaterThan %bool %132 %uint_31
        %134 = OpSelect %uint %133 %126 %125
        %135 = OpSelect %uint %133 %127 %126
        %136 = OpSelect %uint %133 %128 %127
        %137 = OpSelect %uint %133 %129 %128
        %138 = OpSelect %uint %133 %130 %129
        %139 = OpSelect %uint %133 %uint_4294967264 %uint_0
        %140 = OpIAdd %uint %139 %132
        %141 = OpUGreaterThan %bool %140 %uint_31
        %142 = OpSelect %uint %141 %135 %134
        %143 = OpSelect %uint %141 %136 %135
        %144 = OpSelect %uint %141 %137 %136
        %145 = OpSelect %uint %141 %138 %137
        %146 = OpSelect %uint %141 %uint_4294967264 %uint_0
        %147 = OpISub %uint %uint_0 %140
        %148 = OpIEqual %bool %146 %147
        %150 = OpISub %uint %uint_24 %51
        %151 = OpBitwiseAnd %uint %111 %uint_31
        %152 = OpShiftLeftLogical %uint %142 %151
        %153 = OpBitwiseAnd %uint %150 %uint_31
        %154 = OpShiftRightLogical %uint %143 %153
        %155 = OpBitwiseOr %uint %152 %154
        %156 = OpShiftLeftLogical %uint %143 %151
        %157 = OpShiftRightLogical %uint %144 %153
        %158 = OpBitwiseOr %uint %156 %157
        %159 = OpShiftLeftLogical %uint %144 %151
        %160 = OpShiftRightLogical %uint %145 %153
        %161 = OpBitwiseOr %uint %159 %160
        %162 = OpSelect %uint %148 %142 %155
        %163 = OpSelect %uint %148 %143 %158
        %164 = OpSelect %uint %148 %144 %161
        %166 = OpShiftRightLogical %uint %162 %uint_29
        %168 = OpShiftLeftLogical %uint %162 %uint_2
        %170 = OpShiftRightLogical %uint %163 %uint_30
        %171 = OpBitwiseOr %uint %170 %168
        %172 = OpShiftLeftLogical %uint %163 %uint_2
        %173 = OpShiftRightLogical %uint %164 %uint_30
        %174 = OpBitwiseOr %uint %173 %172
        %175 = OpShiftLeftLogical %uint %164 %uint_2
        %176 = OpShiftRightLogical %uint %145 %uint_30
        %177 = OpBitwiseOr %uint %176 %175
        %178 = OpBitwiseAnd %uint %166 %uint_1
        %179 = OpISub %uint %uint_0 %178
        %180 = OpShiftLeftLogical %uint %166 %uint_31
        %181 = OpBitwiseXor %uint %171 %179
        %182 = OpBitwiseXor %uint %174 %179
        %183 = OpBitwiseXor %uint %177 %179
        %185 = OpExtInst %uint %184 FindUMsb %181
        %186 = OpISub %uint %uint_31 %185
        %187 = OpIAdd %uint %186 %uint_1
        %188 = OpISub %uint %uint_31 %186
        %189 = OpBitwiseAnd %uint %187 %uint_31
        %190 = OpShiftLeftLogical %uint %181 %189
        %191 = OpBitwiseAnd %uint %188 %uint_31
        %192 = OpShiftRightLogical %uint %182 %191
        %193 = OpBitwiseOr %uint %190 %192
        %194 = OpShiftLeftLogical %uint %182 %189
        %195 = OpShiftRightLogical %uint %183 %191
        %196 = OpBitwiseOr %uint %194 %195
        %198 = OpShiftRightLogical %uint %193 %uint_9
        %199 = OpShiftLeftLogical %uint %186 %uint_23
        %200 = OpISub %uint %198 %199
        %202 = OpIAdd %uint %200 %uint_1056964608
        %203 = OpBitwiseOr %uint %202 %180
        %204 = OpBitcast %float %203
        %205 = OpShiftLeftLogical %uint %193 %uint_23
        %206 = OpShiftRightLogical %uint %196 %uint_9
        %207 = OpBitwiseOr %uint %206 %205
        %208 = OpExtInst %uint %184 FindUMsb %207
        %209 = OpISub %uint %uint_31 %208
        %211 = OpBitwiseXor %uint %209 %uint_4294967295
        %212 = OpIAdd %uint %209 %uint_1
        %213 = OpISub %uint %uint_31 %209
        %214 = OpBitwiseAnd %uint %212 %uint_31
        %215 = OpShiftLeftLogical %uint %207 %214
        %216 = OpBitwiseAnd %uint %213 %uint_31
        %217 = OpShiftRightLogical %uint %196 %216
        %218 = OpBitwiseOr %uint %215 %217
        %219 = OpISub %uint %211 %186
        %220 = OpShiftLeftLogical %uint %219 %uint_23
        %221 = OpShiftRightLogical %uint %218 %uint_9
        %223 = OpIAdd %uint %220 %uint_864026624
        %224 = OpBitwiseOr %uint %221 %223
        %225 = OpBitwiseOr %uint %224 %180
        %226 = OpBitcast %float %225
        %228 = OpFMul %float %204 %float_1_57079625
        %229 = OpFNegate %float %228
        %230 = OpIsNan %bool %204
        %231 = OpLogicalNot %bool %230
               OpSelectionMerge %1330 None
               OpBranchConditional %231 %234 %1330
        %234 = OpLabel
        %235 = OpIsNan %bool %float_1_57079625
        %236 = OpLogicalNot %bool %235
               OpSelectionMerge %793 None
               OpBranchConditional %236 %239 %793
        %239 = OpLabel
        %240 = OpIsNan %bool %229
        %241 = OpLogicalNot %bool %240
               OpSelectionMerge %789 None
               OpBranchConditional %241 %244 %789
        %244 = OpLabel
        %245 = OpIsInf %bool %204
        %246 = OpLogicalNot %bool %245
               OpSelectionMerge %785 None
               OpBranchConditional %246 %249 %785
        %249 = OpLabel
        %250 = OpIsInf %bool %float_1_57079625
        %251 = OpLogicalNot %bool %250
               OpSelectionMerge %782 None
               OpBranchConditional %251 %254 %782
        %254 = OpLabel
        %255 = OpIsInf %bool %229
        %256 = OpLogicalNot %bool %255
               OpSelectionMerge %779 None
               OpBranchConditional %256 %259 %779
        %259 = OpLabel
        %263 = OpCompositeInsert %v2float %204 %262 1
        %265 = OpBitcast %v2uint %263
        %268 = OpBitwiseAnd %v2uint %265 %267
        %271 = OpINotEqual %v2bool %268 %270
        %273 = OpBitwiseAnd %v2uint %265 %272
        %274 = OpIEqual %v2bool %273 %270
        %275 = OpLogicalOr %v2bool %274 %271
        %278 = OpBitwiseAnd %v2uint %265 %277
        %279 = OpBitcast %v2float %278
        %280 = OpSelect %v2float %275 %263 %279
        %281 = OpBitcast %uint %229
        %282 = OpBitwiseAnd %uint %281 %uint_2139095040
        %283 = OpINotEqual %bool %282 %uint_0
        %284 = OpBitwiseAnd %uint %281 %uint_8388607
        %285 = OpIEqual %bool %284 %uint_0
        %286 = OpLogicalOr %bool %285 %283
        %287 = OpBitwiseAnd %uint %281 %uint_2147483648
        %288 = OpBitcast %float %287
        %289 = OpSelect %float %286 %229 %288
        %291 = OpFOrdEqual %v2bool %280 %290
        %293 = OpVectorShuffle %v2bool %291 %292 1 4294967295
        %294 = OpLogicalOr %v2bool %293 %291
        %295 = OpCompositeExtract %bool %294 0
        %296 = OpLogicalNot %bool %295
               OpSelectionMerge %776 None
               OpBranchConditional %296 %299 %776
        %299 = OpLabel
        %301 = OpFUnordNotEqual %bool %289 %float_0
               OpSelectionMerge %762 None
               OpBranchConditional %301 %304 %762
        %304 = OpLabel
        %305 = OpBitcast %v2uint %280
        %306 = OpCompositeExtract %uint %305 1
        %307 = OpShiftRightLogical %uint %306 %uint_23
        %309 = OpBitwiseAnd %uint %307 %uint_255
        %310 = OpCompositeExtract %uint %305 0
        %311 = OpShiftRightLogical %uint %310 %uint_23
        %312 = OpBitwiseAnd %uint %311 %uint_255
        %313 = OpBitcast %uint %289
        %314 = OpShiftRightLogical %uint %313 %uint_23
        %315 = OpBitwiseAnd %uint %314 %uint_255
        %317 = OpIAdd %uint %315 %uint_4294967169
        %318 = OpBitwiseAnd %v2uint %305 %272
        %320 = OpBitwiseOr %v2uint %318 %319
        %321 = OpBitwiseAnd %uint %313 %uint_2147483648
        %322 = OpBitwiseXor %uint %310 %306
        %323 = OpBitwiseAnd %uint %322 %uint_2147483648
        %324 = OpCompositeExtract %uint %320 0
        %325 = OpCompositeExtract %uint %320 1
        %326 = OpUMulExtended %_struct_58 %325 %324
        %327 = OpCompositeExtract %uint %326 1
        %328 = OpIMul %uint %324 %325
        %330 = OpShiftLeftLogical %uint %327 %uint_14
        %332 = OpShiftRightLogical %uint %328 %uint_18
        %333 = OpBitwiseOr %uint %332 %330
        %334 = OpShiftLeftLogical %uint %328 %uint_14
        %335 = OpCompositeConstruct %v2uint %334 %333
        %336 = OpBitwiseOr %uint %333 %334
        %337 = OpIEqual %bool %336 %uint_0
        %339 = OpIAdd %uint %309 %uint_4294967042
        %340 = OpIAdd %uint %339 %312
        %341 = OpSelect %uint %337 %uint_0 %340
        %342 = OpBitwiseOr %uint %341 %336
        %343 = OpINotEqual %bool %342 %uint_0
               OpSelectionMerge %759 None
               OpBranchConditional %343 %346 %759
        %346 = OpLabel
        %347 = OpISub %uint %341 %317
        %349 = OpShiftLeftLogical %uint %313 %uint_5
        %351 = OpBitwiseAnd %uint %349 %uint_268435424
        %353 = OpBitwiseOr %uint %351 %uint_268435456
        %356 = OpCompositeInsert %v2uint %353 %355 1
        %357 = OpExtInst %uint %184 SAbs %347
        %358 = OpINotEqual %bool %357 %uint_0
               OpSelectionMerge %386 None
               OpBranchConditional %358 %361 %386
        %361 = OpLabel
        %363 = OpUGreaterThanEqual %bool %357 %uint_32
               OpSelectionMerge %371 None
               OpBranchConditional %363 %366 %371
        %366 = OpLabel
        %367 = OpBitwiseAnd %uint %357 %uint_31
        %368 = OpShiftLeftLogical %uint %uint_1 %367
        %369 = OpCompositeInsert %v2uint %368 %355 1
               OpBranch %371
        %371 = OpLabel
        %372 = OpPhi %v2uint %369 %366 %528 %361
        %373 = OpPhi %bool %false %366 %true %361
               OpSelectionMerge %383 None
               OpBranchConditional %373 %376 %383
        %376 = OpLabel
        %377 = OpISub %uint %uint_0 %357
        %378 = OpBitwiseAnd %uint %377 %uint_31
        %379 = OpShiftRightLogical %uint %uint_1 %378
        %380 = OpShiftLeftLogical %uint %uint_1 %357
        %381 = OpCompositeConstruct %v2uint %380 %379
               OpBranch %383
        %383 = OpLabel
        %384 = OpPhi %v2uint %381 %376 %372 %371
               OpBranch %386
        %386 = OpLabel
        %387 = OpPhi %v2uint %7106 %346 %384 %383
        %388 = OpCompositeExtract %uint %387 0
        %389 = OpShiftRightLogical %uint %388 %uint_1
        %390 = OpIAdd %uint %389 %uint_2147483647
        %391 = OpBitwiseAnd %uint %388 %uint_1
        %392 = OpIAdd %uint %390 %391
        %393 = OpShiftRightLogical %uint %392 %uint_31
        %394 = OpIAdd %uint %388 %uint_4294967295
        %395 = OpCompositeExtract %uint %387 1
        %396 = OpIAdd %uint %395 %uint_4294967295
        %397 = OpIAdd %uint %396 %393
        %398 = OpCompositeConstruct %v2uint %394 %397
        %399 = OpSLessThanEqual %bool %347 %uint_0
               OpSelectionMerge %453 None
               OpBranchConditional %399 %402 %453
        %402 = OpLabel
        %404 = OpSGreaterThanEqual %bool %347 %uint_4294967233
               OpSelectionMerge %448 None
               OpBranchConditional %404 %407 %448
        %407 = OpLabel
        %408 = OpISub %uint %uint_0 %347
        %409 = OpBitwiseAnd %v2uint %398 %335
        %410 = OpINotEqual %bool %341 %317
               OpSelectionMerge %443 None
               OpBranchConditional %410 %413 %443
        %413 = OpLabel
        %414 = OpUGreaterThanEqual %bool %408 %uint_32
               OpSelectionMerge %423 None
               OpBranchConditional %414 %417 %423
        %417 = OpLabel
        %418 = OpBitwiseAnd %uint %408 %uint_31
        %419 = OpShiftRightLogical %uint %333 %418
        %421 = OpCompositeInsert %v2uint %419 %420 0
               OpBranch %423
        %423 = OpLabel
        %424 = OpPhi %v2uint %356 %417 %528 %413
        %425 = OpPhi %v2uint %409 %417 %528 %413
        %426 = OpPhi %v2uint %421 %417 %528 %413
        %427 = OpPhi %bool %false %417 %true %413
               OpSelectionMerge %438 None
               OpBranchConditional %427 %430 %438
        %430 = OpLabel
        %431 = OpShiftRightLogical %uint %334 %408
        %432 = OpBitwiseAnd %uint %347 %uint_31
        %433 = OpShiftLeftLogical %uint %333 %432
        %434 = OpBitwiseOr %uint %433 %431
        %435 = OpShiftRightLogical %uint %333 %408
        %436 = OpCompositeConstruct %v2uint %434 %435
               OpBranch %438
        %438 = OpLabel
        %439 = OpPhi %v2uint %356 %430 %424 %423
        %440 = OpPhi %v2uint %409 %430 %425 %423
        %441 = OpPhi %v2uint %436 %430 %426 %423
               OpBranch %443
        %443 = OpLabel
        %444 = OpPhi %v2uint %439 %438 %356 %407
        %445 = OpPhi %v2uint %440 %438 %409 %407
        %446 = OpPhi %v2uint %441 %438 %335 %407
               OpBranch %448
        %448 = OpLabel
        %449 = OpPhi %v2uint %444 %443 %356 %402
        %450 = OpPhi %v2uint %445 %443 %335 %402
        %451 = OpPhi %v2uint %446 %443 %270 %402
               OpBranch %453
        %453 = OpLabel
        %454 = OpPhi %v2uint %449 %448 %528 %386
        %455 = OpPhi %v2uint %450 %448 %528 %386
        %456 = OpPhi %v2uint %451 %448 %528 %386
        %457 = OpPhi %bool %false %448 %true %386
               OpSelectionMerge %500 None
               OpBranchConditional %457 %460 %500
        %460 = OpLabel
        %462 = OpULessThanEqual %bool %347 %uint_63
               OpSelectionMerge %495 None
               OpBranchConditional %462 %465 %495
        %465 = OpLabel
        %466 = OpBitwiseAnd %uint %397 %353
        %467 = OpCompositeInsert %v2uint %466 %355 1
        %468 = OpUGreaterThanEqual %bool %347 %uint_32
               OpSelectionMerge %476 None
               OpBranchConditional %468 %471 %476
        %471 = OpLabel
        %472 = OpBitwiseAnd %uint %347 %uint_31
        %473 = OpShiftRightLogical %uint %353 %472
        %474 = OpCompositeInsert %v2uint %473 %420 0
               OpBranch %476
        %476 = OpLabel
        %477 = OpPhi %v2uint %474 %471 %528 %465
        %478 = OpPhi %v2uint %467 %471 %528 %465
        %479 = OpPhi %v2uint %335 %471 %528 %465
        %480 = OpPhi %bool %false %471 %true %465
               OpSelectionMerge %490 None
               OpBranchConditional %480 %483 %490
        %483 = OpLabel
        %484 = OpISub %uint %uint_0 %347
        %485 = OpBitwiseAnd %uint %484 %uint_31
        %486 = OpShiftLeftLogical %uint %353 %485
        %487 = OpShiftRightLogical %uint %353 %347
        %488 = OpCompositeConstruct %v2uint %486 %487
               OpBranch %490
        %490 = OpLabel
        %491 = OpPhi %v2uint %488 %483 %477 %476
        %492 = OpPhi %v2uint %467 %483 %478 %476
        %493 = OpPhi %v2uint %335 %483 %479 %476
               OpBranch %495
        %495 = OpLabel
        %496 = OpPhi %v2uint %491 %490 %270 %460
        %497 = OpPhi %v2uint %492 %490 %356 %460
        %498 = OpPhi %v2uint %493 %490 %335 %460
               OpBranch %500
        %500 = OpLabel
        %501 = OpPhi %v2uint %456 %453 %498 %495
        %502 = OpPhi %v2uint %455 %453 %497 %495
        %503 = OpPhi %v2uint %454 %453 %496 %495
        %504 = OpExtInst %uint %184 SMax %341 %317
        %505 = OpINotEqual %bool %321 %323
               OpSelectionMerge %555 None
               OpBranchConditional %505 %508 %555
        %508 = OpLabel
        %509 = OpCompositeExtract %uint %503 0
        %510 = OpBitwiseXor %uint %509 %uint_4294967295
        %511 = OpCompositeExtract %uint %503 1
        %512 = OpBitwiseXor %uint %511 %uint_4294967295
        %513 = OpShiftRightLogical %uint %510 %uint_1
        %514 = OpBitwiseAnd %uint %510 %uint_1
        %515 = OpIAdd %uint %513 %514
        %516 = OpShiftRightLogical %uint %515 %uint_31
        %517 = OpISub %uint %uint_0 %509
        %518 = OpCompositeExtract %uint %501 0
        %519 = OpShiftRightLogical %uint %518 %uint_1
        %520 = OpShiftRightLogical %uint %517 %uint_1
        %521 = OpIAdd %uint %520 %519
        %522 = OpBitwiseAnd %uint %518 %uint_1
        %523 = OpBitwiseAnd %uint %522 %517
        %524 = OpIAdd %uint %521 %523
        %525 = OpShiftRightLogical %uint %524 %uint_31
        %526 = OpISub %uint %518 %509
        %527 = OpCompositeExtract %uint %501 1
        %529 = OpVectorShuffle %v2uint %502 %528 1 4294967295
        %530 = OpBitwiseOr %v2uint %529 %502
        %531 = OpCompositeExtract %uint %530 0
        %532 = OpINotEqual %bool %531 %uint_0
        %533 = OpSGreaterThan %bool %341 %317
        %535 = OpSelect %bool %532 %533 %false
        %537 = OpSelect %v2uint %535 %536 %270
        %538 = OpCompositeExtract %uint %537 0
        %539 = OpShiftRightLogical %uint %526 %uint_1
        %540 = OpShiftRightLogical %uint %538 %uint_1
        %541 = OpIAdd %uint %540 %539
        %542 = OpBitwiseAnd %uint %526 %uint_1
        %543 = OpBitwiseAnd %uint %542 %538
        %544 = OpIAdd %uint %541 %543
        %545 = OpShiftRightLogical %uint %544 %uint_31
        %546 = OpIAdd %uint %538 %526
        %547 = OpCompositeExtract %uint %537 1
        %548 = OpIAdd %uint %527 %512
        %549 = OpIAdd %uint %548 %516
        %550 = OpIAdd %uint %549 %525
        %551 = OpIAdd %uint %550 %547
        %552 = OpIAdd %uint %551 %545
        %553 = OpCompositeConstruct %v2uint %546 %552
               OpBranch %555
        %555 = OpLabel
        %556 = OpPhi %v2uint %553 %508 %528 %500
        %557 = OpPhi %bool %false %508 %true %500
               OpSelectionMerge %576 None
               OpBranchConditional %557 %560 %576
        %560 = OpLabel
        %561 = OpCompositeExtract %uint %501 0
        %562 = OpCompositeExtract %uint %503 0
        %563 = OpShiftRightLogical %uint %561 %uint_1
        %564 = OpShiftRightLogical %uint %562 %uint_1
        %565 = OpIAdd %uint %564 %563
        %566 = OpBitwiseAnd %uint %561 %uint_1
        %567 = OpBitwiseAnd %uint %566 %562
        %568 = OpIAdd %uint %565 %567
        %569 = OpShiftRightLogical %uint %568 %uint_31
        %570 = OpIAdd %uint %562 %561
        %571 = OpIAdd %v2uint %503 %501
        %572 = OpCompositeExtract %uint %571 1
        %573 = OpIAdd %uint %569 %572
        %574 = OpCompositeConstruct %v2uint %570 %573
               OpBranch %576
        %576 = OpLabel
        %577 = OpPhi %v2uint %574 %560 %556 %555
        %578 = OpCompositeExtract %uint %577 1
        %579 = OpSLessThan %bool %578 %uint_0
               OpSelectionMerge %595 None
               OpBranchConditional %579 %582 %595
        %582 = OpLabel
        %583 = OpCompositeExtract %uint %577 0
        %584 = OpBitwiseXor %uint %583 %uint_4294967295
        %585 = OpBitwiseXor %uint %578 %uint_4294967295
        %586 = OpShiftRightLogical %uint %584 %uint_1
        %587 = OpBitwiseAnd %uint %584 %uint_1
        %588 = OpIAdd %uint %586 %587
        %589 = OpShiftRightLogical %uint %588 %uint_31
        %590 = OpISub %uint %uint_0 %583
        %591 = OpIAdd %uint %589 %585
        %592 = OpCompositeConstruct %v2uint %590 %591
        %593 = OpBitwiseXor %uint %323 %uint_2147483648
               OpBranch %595
        %595 = OpLabel
        %596 = OpPhi %uint %593 %582 %323 %576
        %597 = OpPhi %v2uint %592 %582 %577 %576
        %598 = OpCompositeExtract %uint %597 1
        %599 = OpExtInst %uint %184 FindUMsb %598
        %600 = OpISub %uint %uint_31 %599
        %601 = OpIEqual %bool %598 %uint_0
        %602 = OpCompositeExtract %uint %597 0
        %603 = OpExtInst %uint %184 FindUMsb %602
        %604 = OpISub %uint %uint_31 %603
        %605 = OpIAdd %uint %604 %uint_32
        %606 = OpSelect %uint %601 %605 %600
        %608 = OpISub %uint %uint_3 %606
        %609 = OpIAdd %uint %608 %504
        %610 = OpUGreaterThan %bool %606 %uint_3
               OpSelectionMerge %642 None
               OpBranchConditional %610 %613 %642
        %613 = OpLabel
        %615 = OpIAdd %uint %606 %uint_4294967293
        %616 = OpUGreaterThanEqual %bool %615 %uint_32
               OpSelectionMerge %624 None
               OpBranchConditional %616 %619 %624
        %619 = OpLabel
        %620 = OpBitwiseAnd %uint %615 %uint_31
        %621 = OpShiftLeftLogical %uint %602 %620
        %622 = OpCompositeInsert %v2uint %621 %355 1
               OpBranch %624
        %624 = OpLabel
        %625 = OpPhi %uint %uint_0 %619 %354 %613
        %626 = OpPhi %v2uint %622 %619 %528 %613
        %627 = OpPhi %bool %false %619 %true %613
               OpSelectionMerge %638 None
               OpBranchConditional %627 %630 %638
        %630 = OpLabel
        %631 = OpShiftLeftLogical %uint %598 %615
        %632 = OpBitwiseAnd %uint %608 %uint_31
        %633 = OpShiftRightLogical %uint %602 %632
        %634 = OpBitwiseOr %uint %633 %631
        %635 = OpShiftLeftLogical %uint %602 %615
        %636 = OpCompositeConstruct %v2uint %635 %634
               OpBranch %638
        %638 = OpLabel
        %639 = OpPhi %uint %uint_0 %630 %625 %624
        %640 = OpPhi %v2uint %636 %630 %626 %624
               OpBranch %642
        %642 = OpLabel
        %643 = OpPhi %v2uint %597 %595 %640 %638
        %644 = OpPhi %uint %608 %595 %639 %638
        %645 = OpIAdd %uint %644 %uint_5
        %646 = OpBitwiseAnd %uint %645 %uint_31
        %647 = OpShiftLeftLogical %uint %uint_1 %646
        %648 = OpCompositeInsert %v2uint %647 %355 1
        %649 = OpIAdd %uint %647 %uint_4294967295
        %651 = OpCompositeInsert %v2uint %649 %650 1
        %652 = OpBitwiseAnd %v2uint %651 %643
        %653 = OpCompositeExtract %uint %652 1
        %654 = OpBitwiseAnd %v2uint %648 %643
        %655 = OpIAdd %uint %644 %uint_2
        %656 = OpBitwiseAnd %uint %655 %uint_31
        %658 = OpShiftLeftLogical %uint %uint_4 %656
        %659 = OpUGreaterThan %bool %653 %658
        %660 = OpLogicalNot %bool %659
               OpSelectionMerge %692 None
               OpBranchConditional %660 %663 %692
        %663 = OpLabel
        %664 = OpCompositeExtract %uint %652 0
        %665 = OpVectorShuffle %v2uint %502 %528 1 4294967295
        %666 = OpBitwiseOr %v2uint %665 %502
        %667 = OpCompositeExtract %uint %666 0
        %668 = OpINotEqual %bool %667 %uint_0
        %669 = OpSelect %uint %668 %uint_1 %uint_0
        %670 = OpBitwiseOr %uint %664 %669
        %671 = OpIEqual %bool %653 %658
        %672 = OpINotEqual %bool %670 %uint_0
        %673 = OpSelect %bool %671 %672 %false
        %674 = OpLogicalNot %bool %673
               OpSelectionMerge %688 None
               OpBranchConditional %674 %677 %688
        %677 = OpLabel
        %678 = OpINotEqual %bool %653 %658
        %679 = OpLogicalOr %bool %678 %672
        %680 = OpVectorShuffle %v2uint %654 %528 1 4294967295
        %681 = OpBitwiseOr %v2uint %680 %654
        %682 = OpCompositeExtract %uint %681 0
        %683 = OpIEqual %bool %682 %uint_0
        %685 = OpSelect %bool %679 %true %683
        %686 = OpLogicalNot %bool %685
               OpBranch %688
        %688 = OpLabel
        %689 = OpPhi %v2uint %643 %677 %528 %663
        %690 = OpPhi %bool %686 %677 %673 %663
               OpBranch %692
        %692 = OpLabel
        %693 = OpPhi %v2uint %689 %688 %528 %642
        %694 = OpPhi %bool %690 %688 %659 %642
               OpSelectionMerge %702 None
               OpBranchConditional %694 %697 %702
        %697 = OpLabel
        %698 = OpCompositeExtract %uint %643 1
        %699 = OpIAdd %uint %647 %698
        %700 = OpCompositeInsert %v2uint %699 %643 1
               OpBranch %702
        %702 = OpLabel
        %703 = OpPhi %v2uint %700 %697 %693 %692
        %704 = OpCompositeExtract %uint %703 1
        %705 = OpShiftRightLogical %uint %704 %646
        %707 = OpUGreaterThan %bool %705 %uint_16777215
        %708 = OpSelect %uint %707 %uint_1 %uint_0
        %709 = OpShiftRightLogical %uint %705 %708
        %710 = OpIAdd %uint %609 %708
        %711 = OpINotEqual %bool %709 %uint_0
               OpSelectionMerge %756 None
               OpBranchConditional %711 %714 %756
        %714 = OpLabel
        %716 = OpSLessThanEqual %bool %710 %uint_127
               OpSelectionMerge %744 None
               OpBranchConditional %716 %719 %744
        %719 = OpLabel
        %721 = OpSGreaterThanEqual %bool %710 %uint_4294967170
               OpSelectionMerge %733 None
               OpBranchConditional %721 %724 %733
        %724 = OpLabel
        %725 = OpShiftLeftLogical %uint %710 %uint_23
        %727 = OpIAdd %uint %725 %uint_1065353216
        %728 = OpBitwiseAnd %uint %709 %uint_8388607
        %729 = OpBitwiseOr %uint %727 %728
        %730 = OpBitwiseOr %uint %729 %596
        %731 = OpBitcast %float %730
               OpBranch %733
        %733 = OpLabel
        %734 = OpPhi %float %731 %724 %261 %719
        %735 = OpPhi %bool %false %724 %true %719
               OpSelectionMerge %741 None
               OpBranchConditional %735 %738 %741
        %738 = OpLabel
        %739 = OpBitcast %float %596
               OpBranch %741
        %741 = OpLabel
        %742 = OpPhi %float %739 %738 %734 %733
               OpBranch %744
        %744 = OpLabel
        %745 = OpPhi %float %742 %741 %261 %714
        %746 = OpPhi %bool %false %741 %true %714
               OpSelectionMerge %753 None
               OpBranchConditional %746 %749 %753
        %749 = OpLabel
        %750 = OpBitwiseOr %uint %596 %uint_2139095040
        %751 = OpBitcast %float %750
               OpBranch %753
        %753 = OpLabel
        %754 = OpPhi %float %751 %749 %745 %744
               OpBranch %756
        %756 = OpLabel
        %757 = OpPhi %float %754 %753 %float_0 %702
               OpBranch %759
        %759 = OpLabel
        %760 = OpPhi %float %757 %756 %289 %304
               OpBranch %762
        %762 = OpLabel
        %763 = OpPhi %float %760 %759 %261 %299
        %764 = OpPhi %bool %false %759 %true %299
               OpSelectionMerge %773 None
               OpBranchConditional %764 %767 %773
        %767 = OpLabel
        %769 = OpVectorShuffle %v2float %280 %768 1 4294967295
        %770 = OpFMul %v2float %280 %769
        %771 = OpCompositeExtract %float %770 0
               OpBranch %773
        %773 = OpLabel
        %774 = OpPhi %float %771 %767 %763 %762
               OpBranch %776
        %776 = OpLabel
        %777 = OpPhi %float %774 %773 %289 %259
               OpBranch %779
        %779 = OpLabel
        %780 = OpPhi %float %777 %776 %229 %254
               OpBranch %782
        %782 = OpLabel
        %783 = OpPhi %float %780 %779 %261 %249
               OpBranch %785
        %785 = OpLabel
        %786 = OpPhi %float %783 %782 %261 %244
        %787 = OpPhi %bool %250 %782 %true %244
               OpBranch %789
        %789 = OpLabel
        %790 = OpPhi %float %786 %785 %261 %239
        %791 = OpPhi %bool %787 %785 %240 %239
               OpBranch %793
        %793 = OpLabel
        %794 = OpPhi %float %790 %789 %261 %234
        %795 = OpPhi %bool %791 %789 %true %234
               OpSelectionMerge %801 None
               OpBranchConditional %795 %798 %801
        %798 = OpLabel
        %799 = OpFSub %float %228 %228
               OpBranch %801
        %801 = OpLabel
        %802 = OpPhi %float %799 %798 %794 %793
        %804 = OpIsNan %bool %float_7_54978942en08
        %805 = OpLogicalNot %bool %804
               OpSelectionMerge %1325 None
               OpBranchConditional %805 %808 %1325
        %808 = OpLabel
        %809 = OpIsNan %bool %802
        %810 = OpLogicalNot %bool %809
               OpSelectionMerge %1320 None
               OpBranchConditional %810 %813 %1320
        %813 = OpLabel
        %814 = OpIsInf %bool %204
        %815 = OpLogicalNot %bool %814
               OpSelectionMerge %1315 None
               OpBranchConditional %815 %818 %1315
        %818 = OpLabel
        %819 = OpIsInf %bool %float_7_54978942en08
        %820 = OpLogicalNot %bool %819
               OpSelectionMerge %1310 None
               OpBranchConditional %820 %823 %1310
        %823 = OpLabel
        %824 = OpIsInf %bool %802
        %825 = OpLogicalNot %bool %824
               OpSelectionMerge %1307 None
               OpBranchConditional %825 %828 %1307
        %828 = OpLabel
        %830 = OpCompositeInsert %v2float %204 %829 1
        %831 = OpBitcast %v2uint %830
        %832 = OpBitwiseAnd %v2uint %831 %267
        %833 = OpINotEqual %v2bool %832 %270
        %834 = OpBitwiseAnd %v2uint %831 %272
        %835 = OpIEqual %v2bool %834 %270
        %836 = OpLogicalOr %v2bool %835 %833
        %837 = OpBitwiseAnd %v2uint %831 %277
        %838 = OpBitcast %v2float %837
        %839 = OpSelect %v2float %836 %830 %838
        %840 = OpBitcast %uint %802
        %841 = OpBitwiseAnd %uint %840 %uint_2139095040
        %842 = OpINotEqual %bool %841 %uint_0
        %843 = OpBitwiseAnd %uint %840 %uint_8388607
        %844 = OpIEqual %bool %843 %uint_0
        %845 = OpLogicalOr %bool %844 %842
        %846 = OpBitwiseAnd %uint %840 %uint_2147483648
        %847 = OpBitcast %float %846
        %848 = OpSelect %float %845 %802 %847
        %849 = OpFOrdEqual %v2bool %839 %290
        %850 = OpVectorShuffle %v2bool %849 %292 1 4294967295
        %851 = OpLogicalOr %v2bool %850 %849
        %852 = OpCompositeExtract %bool %851 0
        %853 = OpLogicalNot %bool %852
               OpSelectionMerge %1304 None
               OpBranchConditional %853 %856 %1304
        %856 = OpLabel
        %857 = OpFUnordNotEqual %bool %848 %float_0
               OpSelectionMerge %1291 None
               OpBranchConditional %857 %860 %1291
        %860 = OpLabel
        %861 = OpBitcast %v2uint %839
        %862 = OpCompositeExtract %uint %861 1
        %863 = OpShiftRightLogical %uint %862 %uint_23
        %864 = OpBitwiseAnd %uint %863 %uint_255
        %865 = OpCompositeExtract %uint %861 0
        %866 = OpShiftRightLogical %uint %865 %uint_23
        %867 = OpBitwiseAnd %uint %866 %uint_255
        %868 = OpBitcast %uint %848
        %869 = OpShiftRightLogical %uint %868 %uint_23
        %870 = OpBitwiseAnd %uint %869 %uint_255
        %871 = OpIAdd %uint %870 %uint_4294967169
        %872 = OpBitwiseAnd %v2uint %861 %272
        %873 = OpBitwiseOr %v2uint %872 %319
        %874 = OpBitwiseAnd %uint %868 %uint_2147483648
        %875 = OpBitwiseXor %uint %865 %862
        %876 = OpBitwiseAnd %uint %875 %uint_2147483648
        %877 = OpCompositeExtract %uint %873 0
        %878 = OpCompositeExtract %uint %873 1
        %879 = OpUMulExtended %_struct_58 %878 %877
        %880 = OpCompositeExtract %uint %879 1
        %881 = OpIMul %uint %877 %878
        %882 = OpShiftLeftLogical %uint %880 %uint_14
        %883 = OpShiftRightLogical %uint %881 %uint_18
        %884 = OpBitwiseOr %uint %883 %882
        %885 = OpShiftLeftLogical %uint %881 %uint_14
        %886 = OpCompositeConstruct %v2uint %885 %884
        %887 = OpBitwiseOr %uint %884 %885
        %888 = OpIEqual %bool %887 %uint_0
        %889 = OpIAdd %uint %864 %uint_4294967042
        %890 = OpIAdd %uint %889 %867
        %891 = OpSelect %uint %888 %uint_0 %890
        %892 = OpBitwiseOr %uint %891 %887
        %893 = OpINotEqual %bool %892 %uint_0
               OpSelectionMerge %1288 None
               OpBranchConditional %893 %896 %1288
        %896 = OpLabel
        %897 = OpISub %uint %891 %871
        %898 = OpShiftLeftLogical %uint %868 %uint_5
        %899 = OpBitwiseAnd %uint %898 %uint_268435424
        %900 = OpBitwiseOr %uint %899 %uint_268435456
        %901 = OpCompositeInsert %v2uint %900 %355 1
        %902 = OpExtInst %uint %184 SAbs %897
        %903 = OpINotEqual %bool %902 %uint_0
               OpSelectionMerge %930 None
               OpBranchConditional %903 %906 %930
        %906 = OpLabel
        %907 = OpUGreaterThanEqual %bool %902 %uint_32
               OpSelectionMerge %915 None
               OpBranchConditional %907 %910 %915
        %910 = OpLabel
        %911 = OpBitwiseAnd %uint %902 %uint_31
        %912 = OpShiftLeftLogical %uint %uint_1 %911
        %913 = OpCompositeInsert %v2uint %912 %355 1
               OpBranch %915
        %915 = OpLabel
        %916 = OpPhi %v2uint %913 %910 %528 %906
        %917 = OpPhi %bool %false %910 %true %906
               OpSelectionMerge %927 None
               OpBranchConditional %917 %920 %927
        %920 = OpLabel
        %921 = OpISub %uint %uint_0 %902
        %922 = OpBitwiseAnd %uint %921 %uint_31
        %923 = OpShiftRightLogical %uint %uint_1 %922
        %924 = OpShiftLeftLogical %uint %uint_1 %902
        %925 = OpCompositeConstruct %v2uint %924 %923
               OpBranch %927
        %927 = OpLabel
        %928 = OpPhi %v2uint %925 %920 %916 %915
               OpBranch %930
        %930 = OpLabel
        %931 = OpPhi %v2uint %7106 %896 %928 %927
        %932 = OpCompositeExtract %uint %931 0
        %933 = OpShiftRightLogical %uint %932 %uint_1
        %934 = OpIAdd %uint %933 %uint_2147483647
        %935 = OpBitwiseAnd %uint %932 %uint_1
        %936 = OpIAdd %uint %934 %935
        %937 = OpShiftRightLogical %uint %936 %uint_31
        %938 = OpIAdd %uint %932 %uint_4294967295
        %939 = OpCompositeExtract %uint %931 1
        %940 = OpIAdd %uint %939 %uint_4294967295
        %941 = OpIAdd %uint %940 %937
        %942 = OpCompositeConstruct %v2uint %938 %941
        %943 = OpSLessThanEqual %bool %897 %uint_0
               OpSelectionMerge %995 None
               OpBranchConditional %943 %946 %995
        %946 = OpLabel
        %947 = OpSGreaterThanEqual %bool %897 %uint_4294967233
               OpSelectionMerge %990 None
               OpBranchConditional %947 %950 %990
        %950 = OpLabel
        %951 = OpISub %uint %uint_0 %897
        %952 = OpBitwiseAnd %v2uint %942 %886
        %953 = OpINotEqual %bool %891 %871
               OpSelectionMerge %985 None
               OpBranchConditional %953 %956 %985
        %956 = OpLabel
        %957 = OpUGreaterThanEqual %bool %951 %uint_32
               OpSelectionMerge %965 None
               OpBranchConditional %957 %960 %965
        %960 = OpLabel
        %961 = OpBitwiseAnd %uint %951 %uint_31
        %962 = OpShiftRightLogical %uint %884 %961
        %963 = OpCompositeInsert %v2uint %962 %420 0
               OpBranch %965
        %965 = OpLabel
        %966 = OpPhi %v2uint %901 %960 %528 %956
        %967 = OpPhi %v2uint %952 %960 %528 %956
        %968 = OpPhi %v2uint %963 %960 %528 %956
        %969 = OpPhi %bool %false %960 %true %956
               OpSelectionMerge %980 None
               OpBranchConditional %969 %972 %980
        %972 = OpLabel
        %973 = OpShiftRightLogical %uint %885 %951
        %974 = OpBitwiseAnd %uint %897 %uint_31
        %975 = OpShiftLeftLogical %uint %884 %974
        %976 = OpBitwiseOr %uint %975 %973
        %977 = OpShiftRightLogical %uint %884 %951
        %978 = OpCompositeConstruct %v2uint %976 %977
               OpBranch %980
        %980 = OpLabel
        %981 = OpPhi %v2uint %901 %972 %966 %965
        %982 = OpPhi %v2uint %952 %972 %967 %965
        %983 = OpPhi %v2uint %978 %972 %968 %965
               OpBranch %985
        %985 = OpLabel
        %986 = OpPhi %v2uint %981 %980 %901 %950
        %987 = OpPhi %v2uint %982 %980 %952 %950
        %988 = OpPhi %v2uint %983 %980 %886 %950
               OpBranch %990
        %990 = OpLabel
        %991 = OpPhi %v2uint %986 %985 %901 %946
        %992 = OpPhi %v2uint %987 %985 %886 %946
        %993 = OpPhi %v2uint %988 %985 %270 %946
               OpBranch %995
        %995 = OpLabel
        %996 = OpPhi %v2uint %991 %990 %528 %930
        %997 = OpPhi %v2uint %992 %990 %528 %930
        %998 = OpPhi %v2uint %993 %990 %528 %930
        %999 = OpPhi %bool %false %990 %true %930
               OpSelectionMerge %1041 None
               OpBranchConditional %999 %1002 %1041
       %1002 = OpLabel
       %1003 = OpULessThanEqual %bool %897 %uint_63
               OpSelectionMerge %1036 None
               OpBranchConditional %1003 %1006 %1036
       %1006 = OpLabel
       %1007 = OpBitwiseAnd %uint %941 %900
       %1008 = OpCompositeInsert %v2uint %1007 %355 1
       %1009 = OpUGreaterThanEqual %bool %897 %uint_32
               OpSelectionMerge %1017 None
               OpBranchConditional %1009 %1012 %1017
       %1012 = OpLabel
       %1013 = OpBitwiseAnd %uint %897 %uint_31
       %1014 = OpShiftRightLogical %uint %900 %1013
       %1015 = OpCompositeInsert %v2uint %1014 %420 0
               OpBranch %1017
       %1017 = OpLabel
       %1018 = OpPhi %v2uint %1015 %1012 %528 %1006
       %1019 = OpPhi %v2uint %1008 %1012 %528 %1006
       %1020 = OpPhi %v2uint %886 %1012 %528 %1006
       %1021 = OpPhi %bool %false %1012 %true %1006
               OpSelectionMerge %1031 None
               OpBranchConditional %1021 %1024 %1031
       %1024 = OpLabel
       %1025 = OpISub %uint %uint_0 %897
       %1026 = OpBitwiseAnd %uint %1025 %uint_31
       %1027 = OpShiftLeftLogical %uint %900 %1026
       %1028 = OpShiftRightLogical %uint %900 %897
       %1029 = OpCompositeConstruct %v2uint %1027 %1028
               OpBranch %1031
       %1031 = OpLabel
       %1032 = OpPhi %v2uint %1029 %1024 %1018 %1017
       %1033 = OpPhi %v2uint %1008 %1024 %1019 %1017
       %1034 = OpPhi %v2uint %886 %1024 %1020 %1017
               OpBranch %1036
       %1036 = OpLabel
       %1037 = OpPhi %v2uint %1032 %1031 %270 %1002
       %1038 = OpPhi %v2uint %1033 %1031 %901 %1002
       %1039 = OpPhi %v2uint %1034 %1031 %886 %1002
               OpBranch %1041
       %1041 = OpLabel
       %1042 = OpPhi %v2uint %998 %995 %1039 %1036
       %1043 = OpPhi %v2uint %997 %995 %1038 %1036
       %1044 = OpPhi %v2uint %996 %995 %1037 %1036
       %1045 = OpExtInst %uint %184 SMax %891 %871
       %1046 = OpINotEqual %bool %874 %876
               OpSelectionMerge %1093 None
               OpBranchConditional %1046 %1049 %1093
       %1049 = OpLabel
       %1050 = OpCompositeExtract %uint %1044 0
       %1051 = OpBitwiseXor %uint %1050 %uint_4294967295
       %1052 = OpCompositeExtract %uint %1044 1
       %1053 = OpBitwiseXor %uint %1052 %uint_4294967295
       %1054 = OpShiftRightLogical %uint %1051 %uint_1
       %1055 = OpBitwiseAnd %uint %1051 %uint_1
       %1056 = OpIAdd %uint %1054 %1055
       %1057 = OpShiftRightLogical %uint %1056 %uint_31
       %1058 = OpISub %uint %uint_0 %1050
       %1059 = OpCompositeExtract %uint %1042 0
       %1060 = OpShiftRightLogical %uint %1059 %uint_1
       %1061 = OpShiftRightLogical %uint %1058 %uint_1
       %1062 = OpIAdd %uint %1061 %1060
       %1063 = OpBitwiseAnd %uint %1059 %uint_1
       %1064 = OpBitwiseAnd %uint %1063 %1058
       %1065 = OpIAdd %uint %1062 %1064
       %1066 = OpShiftRightLogical %uint %1065 %uint_31
       %1067 = OpISub %uint %1059 %1050
       %1068 = OpCompositeExtract %uint %1042 1
       %1069 = OpVectorShuffle %v2uint %1043 %528 1 4294967295
       %1070 = OpBitwiseOr %v2uint %1069 %1043
       %1071 = OpCompositeExtract %uint %1070 0
       %1072 = OpINotEqual %bool %1071 %uint_0
       %1073 = OpSGreaterThan %bool %891 %871
       %1074 = OpSelect %bool %1072 %1073 %false
       %1075 = OpSelect %v2uint %1074 %536 %270
       %1076 = OpCompositeExtract %uint %1075 0
       %1077 = OpShiftRightLogical %uint %1067 %uint_1
       %1078 = OpShiftRightLogical %uint %1076 %uint_1
       %1079 = OpIAdd %uint %1078 %1077
       %1080 = OpBitwiseAnd %uint %1067 %uint_1
       %1081 = OpBitwiseAnd %uint %1080 %1076
       %1082 = OpIAdd %uint %1079 %1081
       %1083 = OpShiftRightLogical %uint %1082 %uint_31
       %1084 = OpIAdd %uint %1076 %1067
       %1085 = OpCompositeExtract %uint %1075 1
       %1086 = OpIAdd %uint %1068 %1053
       %1087 = OpIAdd %uint %1086 %1057
       %1088 = OpIAdd %uint %1087 %1066
       %1089 = OpIAdd %uint %1088 %1085
       %1090 = OpIAdd %uint %1089 %1083
       %1091 = OpCompositeConstruct %v2uint %1084 %1090
               OpBranch %1093
       %1093 = OpLabel
       %1094 = OpPhi %v2uint %1091 %1049 %528 %1041
       %1095 = OpPhi %bool %false %1049 %true %1041
               OpSelectionMerge %1114 None
               OpBranchConditional %1095 %1098 %1114
       %1098 = OpLabel
       %1099 = OpCompositeExtract %uint %1042 0
       %1100 = OpCompositeExtract %uint %1044 0
       %1101 = OpShiftRightLogical %uint %1099 %uint_1
       %1102 = OpShiftRightLogical %uint %1100 %uint_1
       %1103 = OpIAdd %uint %1102 %1101
       %1104 = OpBitwiseAnd %uint %1099 %uint_1
       %1105 = OpBitwiseAnd %uint %1104 %1100
       %1106 = OpIAdd %uint %1103 %1105
       %1107 = OpShiftRightLogical %uint %1106 %uint_31
       %1108 = OpIAdd %uint %1100 %1099
       %1109 = OpIAdd %v2uint %1044 %1042
       %1110 = OpCompositeExtract %uint %1109 1
       %1111 = OpIAdd %uint %1107 %1110
       %1112 = OpCompositeConstruct %v2uint %1108 %1111
               OpBranch %1114
       %1114 = OpLabel
       %1115 = OpPhi %v2uint %1112 %1098 %1094 %1093
       %1116 = OpCompositeExtract %uint %1115 1
       %1117 = OpSLessThan %bool %1116 %uint_0
               OpSelectionMerge %1133 None
               OpBranchConditional %1117 %1120 %1133
       %1120 = OpLabel
       %1121 = OpCompositeExtract %uint %1115 0
       %1122 = OpBitwiseXor %uint %1121 %uint_4294967295
       %1123 = OpBitwiseXor %uint %1116 %uint_4294967295
       %1124 = OpShiftRightLogical %uint %1122 %uint_1
       %1125 = OpBitwiseAnd %uint %1122 %uint_1
       %1126 = OpIAdd %uint %1124 %1125
       %1127 = OpShiftRightLogical %uint %1126 %uint_31
       %1128 = OpISub %uint %uint_0 %1121
       %1129 = OpIAdd %uint %1127 %1123
       %1130 = OpCompositeConstruct %v2uint %1128 %1129
       %1131 = OpBitwiseXor %uint %876 %uint_2147483648
               OpBranch %1133
       %1133 = OpLabel
       %1134 = OpPhi %uint %1131 %1120 %876 %1114
       %1135 = OpPhi %v2uint %1130 %1120 %1115 %1114
       %1136 = OpCompositeExtract %uint %1135 1
       %1137 = OpExtInst %uint %184 FindUMsb %1136
       %1138 = OpISub %uint %uint_31 %1137
       %1139 = OpIEqual %bool %1136 %uint_0
       %1140 = OpCompositeExtract %uint %1135 0
       %1141 = OpExtInst %uint %184 FindUMsb %1140
       %1142 = OpISub %uint %uint_31 %1141
       %1143 = OpIAdd %uint %1142 %uint_32
       %1144 = OpSelect %uint %1139 %1143 %1138
       %1145 = OpISub %uint %uint_3 %1144
       %1146 = OpIAdd %uint %1145 %1045
       %1147 = OpUGreaterThan %bool %1144 %uint_3
               OpSelectionMerge %1178 None
               OpBranchConditional %1147 %1150 %1178
       %1150 = OpLabel
       %1151 = OpIAdd %uint %1144 %uint_4294967293
       %1152 = OpUGreaterThanEqual %bool %1151 %uint_32
               OpSelectionMerge %1160 None
               OpBranchConditional %1152 %1155 %1160
       %1155 = OpLabel
       %1156 = OpBitwiseAnd %uint %1151 %uint_31
       %1157 = OpShiftLeftLogical %uint %1140 %1156
       %1158 = OpCompositeInsert %v2uint %1157 %355 1
               OpBranch %1160
       %1160 = OpLabel
       %1161 = OpPhi %uint %uint_0 %1155 %354 %1150
       %1162 = OpPhi %v2uint %1158 %1155 %528 %1150
       %1163 = OpPhi %bool %false %1155 %true %1150
               OpSelectionMerge %1174 None
               OpBranchConditional %1163 %1166 %1174
       %1166 = OpLabel
       %1167 = OpShiftLeftLogical %uint %1136 %1151
       %1168 = OpBitwiseAnd %uint %1145 %uint_31
       %1169 = OpShiftRightLogical %uint %1140 %1168
       %1170 = OpBitwiseOr %uint %1169 %1167
       %1171 = OpShiftLeftLogical %uint %1140 %1151
       %1172 = OpCompositeConstruct %v2uint %1171 %1170
               OpBranch %1174
       %1174 = OpLabel
       %1175 = OpPhi %uint %uint_0 %1166 %1161 %1160
       %1176 = OpPhi %v2uint %1172 %1166 %1162 %1160
               OpBranch %1178
       %1178 = OpLabel
       %1179 = OpPhi %v2uint %1135 %1133 %1176 %1174
       %1180 = OpPhi %uint %1145 %1133 %1175 %1174
       %1181 = OpIAdd %uint %1180 %uint_5
       %1182 = OpBitwiseAnd %uint %1181 %uint_31
       %1183 = OpShiftLeftLogical %uint %uint_1 %1182
       %1184 = OpCompositeInsert %v2uint %1183 %355 1
       %1185 = OpIAdd %uint %1183 %uint_4294967295
       %1186 = OpCompositeInsert %v2uint %1185 %650 1
       %1187 = OpBitwiseAnd %v2uint %1186 %1179
       %1188 = OpCompositeExtract %uint %1187 1
       %1189 = OpBitwiseAnd %v2uint %1184 %1179
       %1190 = OpIAdd %uint %1180 %uint_2
       %1191 = OpBitwiseAnd %uint %1190 %uint_31
       %1192 = OpShiftLeftLogical %uint %uint_4 %1191
       %1193 = OpUGreaterThan %bool %1188 %1192
       %1194 = OpLogicalNot %bool %1193
               OpSelectionMerge %1225 None
               OpBranchConditional %1194 %1197 %1225
       %1197 = OpLabel
       %1198 = OpCompositeExtract %uint %1187 0
       %1199 = OpVectorShuffle %v2uint %1043 %528 1 4294967295
       %1200 = OpBitwiseOr %v2uint %1199 %1043
       %1201 = OpCompositeExtract %uint %1200 0
       %1202 = OpINotEqual %bool %1201 %uint_0
       %1203 = OpSelect %uint %1202 %uint_1 %uint_0
       %1204 = OpBitwiseOr %uint %1198 %1203
       %1205 = OpIEqual %bool %1188 %1192
       %1206 = OpINotEqual %bool %1204 %uint_0
       %1207 = OpSelect %bool %1205 %1206 %false
       %1208 = OpLogicalNot %bool %1207
               OpSelectionMerge %1221 None
               OpBranchConditional %1208 %1211 %1221
       %1211 = OpLabel
       %1212 = OpINotEqual %bool %1188 %1192
       %1213 = OpLogicalOr %bool %1212 %1206
       %1214 = OpVectorShuffle %v2uint %1189 %528 1 4294967295
       %1215 = OpBitwiseOr %v2uint %1214 %1189
       %1216 = OpCompositeExtract %uint %1215 0
       %1217 = OpIEqual %bool %1216 %uint_0
       %1218 = OpSelect %bool %1213 %true %1217
       %1219 = OpLogicalNot %bool %1218
               OpBranch %1221
       %1221 = OpLabel
       %1222 = OpPhi %v2uint %1179 %1211 %528 %1197
       %1223 = OpPhi %bool %1219 %1211 %1207 %1197
               OpBranch %1225
       %1225 = OpLabel
       %1226 = OpPhi %v2uint %1222 %1221 %528 %1178
       %1227 = OpPhi %bool %1223 %1221 %1193 %1178
               OpSelectionMerge %1235 None
               OpBranchConditional %1227 %1230 %1235
       %1230 = OpLabel
       %1231 = OpCompositeExtract %uint %1179 1
       %1232 = OpIAdd %uint %1183 %1231
       %1233 = OpCompositeInsert %v2uint %1232 %1179 1
               OpBranch %1235
       %1235 = OpLabel
       %1236 = OpPhi %v2uint %1233 %1230 %1226 %1225
       %1237 = OpCompositeExtract %uint %1236 1
       %1238 = OpShiftRightLogical %uint %1237 %1182
       %1239 = OpUGreaterThan %bool %1238 %uint_16777215
       %1240 = OpSelect %uint %1239 %uint_1 %uint_0
       %1241 = OpShiftRightLogical %uint %1238 %1240
       %1242 = OpIAdd %uint %1146 %1240
       %1243 = OpINotEqual %bool %1241 %uint_0
               OpSelectionMerge %1285 None
               OpBranchConditional %1243 %1246 %1285
       %1246 = OpLabel
       %1247 = OpSLessThanEqual %bool %1242 %uint_127
               OpSelectionMerge %1273 None
               OpBranchConditional %1247 %1250 %1273
       %1250 = OpLabel
       %1251 = OpSGreaterThanEqual %bool %1242 %uint_4294967170
               OpSelectionMerge %1262 None
               OpBranchConditional %1251 %1254 %1262
       %1254 = OpLabel
       %1255 = OpShiftLeftLogical %uint %1242 %uint_23
       %1256 = OpIAdd %uint %1255 %uint_1065353216
       %1257 = OpBitwiseAnd %uint %1241 %uint_8388607
       %1258 = OpBitwiseOr %uint %1256 %1257
       %1259 = OpBitwiseOr %uint %1258 %1134
       %1260 = OpBitcast %float %1259
               OpBranch %1262
       %1262 = OpLabel
       %1263 = OpPhi %float %1260 %1254 %261 %1250
       %1264 = OpPhi %bool %false %1254 %true %1250
               OpSelectionMerge %1270 None
               OpBranchConditional %1264 %1267 %1270
       %1267 = OpLabel
       %1268 = OpBitcast %float %1134
               OpBranch %1270
       %1270 = OpLabel
       %1271 = OpPhi %float %1268 %1267 %1263 %1262
               OpBranch %1273
       %1273 = OpLabel
       %1274 = OpPhi %float %1271 %1270 %261 %1246
       %1275 = OpPhi %bool %false %1270 %true %1246
               OpSelectionMerge %1282 None
               OpBranchConditional %1275 %1278 %1282
       %1278 = OpLabel
       %1279 = OpBitwiseOr %uint %1134 %uint_2139095040
       %1280 = OpBitcast %float %1279
               OpBranch %1282
       %1282 = OpLabel
       %1283 = OpPhi %float %1280 %1278 %1274 %1273
               OpBranch %1285
       %1285 = OpLabel
       %1286 = OpPhi %float %1283 %1282 %float_0 %1235
               OpBranch %1288
       %1288 = OpLabel
       %1289 = OpPhi %float %1286 %1285 %848 %860
               OpBranch %1291
       %1291 = OpLabel
       %1292 = OpPhi %float %1289 %1288 %261 %856
       %1293 = OpPhi %bool %false %1288 %true %856
               OpSelectionMerge %1301 None
               OpBranchConditional %1293 %1296 %1301
       %1296 = OpLabel
       %1297 = OpVectorShuffle %v2float %839 %768 1 4294967295
       %1298 = OpFMul %v2float %839 %1297
       %1299 = OpCompositeExtract %float %1298 0
               OpBranch %1301
       %1301 = OpLabel
       %1302 = OpPhi %float %1299 %1296 %1292 %1291
               OpBranch %1304
       %1304 = OpLabel
       %1305 = OpPhi %float %1302 %1301 %848 %828
               OpBranch %1307
       %1307 = OpLabel
       %1308 = OpPhi %float %1305 %1304 %802 %823
               OpBranch %1310
       %1310 = OpLabel
       %1311 = OpPhi %float %261 %1307 %802 %818
       %1312 = OpPhi %float %1308 %1307 %261 %818
       %1313 = OpPhi %bool %false %1307 %true %818
               OpBranch %1315
       %1315 = OpLabel
       %1316 = OpPhi %float %1311 %1310 %802 %813
       %1317 = OpPhi %float %1312 %1310 %261 %813
       %1318 = OpPhi %bool %1313 %1310 %814 %813
               OpBranch %1320
       %1320 = OpLabel
       %1321 = OpPhi %float %1316 %1315 %802 %808
       %1322 = OpPhi %float %1317 %1315 %261 %808
       %1323 = OpPhi %bool %1318 %1315 %809 %808
               OpBranch %1325
       %1325 = OpLabel
       %1326 = OpPhi %float %1321 %1320 %802 %801
       %1327 = OpPhi %float %1322 %1320 %261 %801
       %1328 = OpPhi %bool %1323 %1320 %804 %801
               OpBranch %1330
       %1330 = OpLabel
       %1331 = OpPhi %float %1326 %1325 %261 %49
       %1332 = OpPhi %float %1327 %1325 %261 %49
       %1333 = OpPhi %bool %1328 %1325 %false %49
       %1334 = OpPhi %bool %false %1325 %true %49
               OpSelectionMerge %1340 None
               OpBranchConditional %1334 %1337 %1340
       %1337 = OpLabel
       %1338 = OpFSub %float %228 %228
               OpBranch %1340
       %1340 = OpLabel
       %1341 = OpPhi %float %1338 %1337 %1331 %1330
       %1342 = OpPhi %float %261 %1337 %1332 %1330
       %1343 = OpPhi %bool %true %1337 %1333 %1330
               OpSelectionMerge %1350 None
               OpBranchConditional %1343 %1346 %1350
       %1346 = OpLabel
       %1347 = OpFMul %float %204 %float_7_54978942en08
       %1348 = OpFAdd %float %1347 %1341
               OpBranch %1350
       %1350 = OpLabel
       %1351 = OpPhi %float %1348 %1346 %1342 %1340
       %1352 = OpIsNan %bool %226
       %1353 = OpLogicalNot %bool %1352
               OpSelectionMerge %1878 None
               OpBranchConditional %1353 %1356 %1878
       %1356 = OpLabel
       %1357 = OpIsNan %bool %float_1_57079625
       %1358 = OpLogicalNot %bool %1357
               OpSelectionMerge %1874 None
               OpBranchConditional %1358 %1361 %1874
       %1361 = OpLabel
       %1362 = OpIsNan %bool %1351
       %1363 = OpLogicalNot %bool %1362
               OpSelectionMerge %1870 None
               OpBranchConditional %1363 %1366 %1870
       %1366 = OpLabel
       %1367 = OpIsInf %bool %226
       %1368 = OpLogicalNot %bool %1367
               OpSelectionMerge %1866 None
               OpBranchConditional %1368 %1371 %1866
       %1371 = OpLabel
       %1372 = OpIsInf %bool %float_1_57079625
       %1373 = OpLogicalNot %bool %1372
               OpSelectionMerge %1862 None
               OpBranchConditional %1373 %1376 %1862
       %1376 = OpLabel
       %1377 = OpIsInf %bool %1351
       %1378 = OpLogicalNot %bool %1377
               OpSelectionMerge %1859 None
               OpBranchConditional %1378 %1381 %1859
       %1381 = OpLabel
       %1382 = OpCompositeInsert %v2float %226 %262 1
       %1383 = OpBitcast %v2uint %1382
       %1384 = OpBitwiseAnd %v2uint %1383 %267
       %1385 = OpINotEqual %v2bool %1384 %270
       %1386 = OpBitwiseAnd %v2uint %1383 %272
       %1387 = OpIEqual %v2bool %1386 %270
       %1388 = OpLogicalOr %v2bool %1387 %1385
       %1389 = OpBitwiseAnd %v2uint %1383 %277
       %1390 = OpBitcast %v2float %1389
       %1391 = OpSelect %v2float %1388 %1382 %1390
       %1392 = OpBitcast %uint %1351
       %1393 = OpBitwiseAnd %uint %1392 %uint_2139095040
       %1394 = OpINotEqual %bool %1393 %uint_0
       %1395 = OpBitwiseAnd %uint %1392 %uint_8388607
       %1396 = OpIEqual %bool %1395 %uint_0
       %1397 = OpLogicalOr %bool %1396 %1394
       %1398 = OpBitwiseAnd %uint %1392 %uint_2147483648
       %1399 = OpBitcast %float %1398
       %1400 = OpSelect %float %1397 %1351 %1399
       %1401 = OpFOrdEqual %v2bool %1391 %290
       %1402 = OpVectorShuffle %v2bool %1401 %292 1 4294967295
       %1403 = OpLogicalOr %v2bool %1402 %1401
       %1404 = OpCompositeExtract %bool %1403 0
       %1405 = OpLogicalNot %bool %1404
               OpSelectionMerge %1856 None
               OpBranchConditional %1405 %1408 %1856
       %1408 = OpLabel
       %1409 = OpFUnordNotEqual %bool %1400 %float_0
               OpSelectionMerge %1843 None
               OpBranchConditional %1409 %1412 %1843
       %1412 = OpLabel
       %1413 = OpBitcast %v2uint %1391
       %1414 = OpCompositeExtract %uint %1413 1
       %1415 = OpShiftRightLogical %uint %1414 %uint_23
       %1416 = OpBitwiseAnd %uint %1415 %uint_255
       %1417 = OpCompositeExtract %uint %1413 0
       %1418 = OpShiftRightLogical %uint %1417 %uint_23
       %1419 = OpBitwiseAnd %uint %1418 %uint_255
       %1420 = OpBitcast %uint %1400
       %1421 = OpShiftRightLogical %uint %1420 %uint_23
       %1422 = OpBitwiseAnd %uint %1421 %uint_255
       %1423 = OpIAdd %uint %1422 %uint_4294967169
       %1424 = OpBitwiseAnd %v2uint %1413 %272
       %1425 = OpBitwiseOr %v2uint %1424 %319
       %1426 = OpBitwiseAnd %uint %1420 %uint_2147483648
       %1427 = OpBitwiseXor %uint %1417 %1414
       %1428 = OpBitwiseAnd %uint %1427 %uint_2147483648
       %1429 = OpCompositeExtract %uint %1425 0
       %1430 = OpCompositeExtract %uint %1425 1
       %1431 = OpUMulExtended %_struct_58 %1430 %1429
       %1432 = OpCompositeExtract %uint %1431 1
       %1433 = OpIMul %uint %1429 %1430
       %1434 = OpShiftLeftLogical %uint %1432 %uint_14
       %1435 = OpShiftRightLogical %uint %1433 %uint_18
       %1436 = OpBitwiseOr %uint %1435 %1434
       %1437 = OpShiftLeftLogical %uint %1433 %uint_14
       %1438 = OpCompositeConstruct %v2uint %1437 %1436
       %1439 = OpBitwiseOr %uint %1436 %1437
       %1440 = OpIEqual %bool %1439 %uint_0
       %1441 = OpIAdd %uint %1416 %uint_4294967042
       %1442 = OpIAdd %uint %1441 %1419
       %1443 = OpSelect %uint %1440 %uint_0 %1442
       %1444 = OpBitwiseOr %uint %1443 %1439
       %1445 = OpINotEqual %bool %1444 %uint_0
               OpSelectionMerge %1840 None
               OpBranchConditional %1445 %1448 %1840
       %1448 = OpLabel
       %1449 = OpISub %uint %1443 %1423
       %1450 = OpShiftLeftLogical %uint %1420 %uint_5
       %1451 = OpBitwiseAnd %uint %1450 %uint_268435424
       %1452 = OpBitwiseOr %uint %1451 %uint_268435456
       %1453 = OpCompositeInsert %v2uint %1452 %355 1
       %1454 = OpExtInst %uint %184 SAbs %1449
       %1455 = OpINotEqual %bool %1454 %uint_0
               OpSelectionMerge %1482 None
               OpBranchConditional %1455 %1458 %1482
       %1458 = OpLabel
       %1459 = OpUGreaterThanEqual %bool %1454 %uint_32
               OpSelectionMerge %1467 None
               OpBranchConditional %1459 %1462 %1467
       %1462 = OpLabel
       %1463 = OpBitwiseAnd %uint %1454 %uint_31
       %1464 = OpShiftLeftLogical %uint %uint_1 %1463
       %1465 = OpCompositeInsert %v2uint %1464 %355 1
               OpBranch %1467
       %1467 = OpLabel
       %1468 = OpPhi %v2uint %1465 %1462 %528 %1458
       %1469 = OpPhi %bool %false %1462 %true %1458
               OpSelectionMerge %1479 None
               OpBranchConditional %1469 %1472 %1479
       %1472 = OpLabel
       %1473 = OpISub %uint %uint_0 %1454
       %1474 = OpBitwiseAnd %uint %1473 %uint_31
       %1475 = OpShiftRightLogical %uint %uint_1 %1474
       %1476 = OpShiftLeftLogical %uint %uint_1 %1454
       %1477 = OpCompositeConstruct %v2uint %1476 %1475
               OpBranch %1479
       %1479 = OpLabel
       %1480 = OpPhi %v2uint %1477 %1472 %1468 %1467
               OpBranch %1482
       %1482 = OpLabel
       %1483 = OpPhi %v2uint %7106 %1448 %1480 %1479
       %1484 = OpCompositeExtract %uint %1483 0
       %1485 = OpShiftRightLogical %uint %1484 %uint_1
       %1486 = OpIAdd %uint %1485 %uint_2147483647
       %1487 = OpBitwiseAnd %uint %1484 %uint_1
       %1488 = OpIAdd %uint %1486 %1487
       %1489 = OpShiftRightLogical %uint %1488 %uint_31
       %1490 = OpIAdd %uint %1484 %uint_4294967295
       %1491 = OpCompositeExtract %uint %1483 1
       %1492 = OpIAdd %uint %1491 %uint_4294967295
       %1493 = OpIAdd %uint %1492 %1489
       %1494 = OpCompositeConstruct %v2uint %1490 %1493
       %1495 = OpSLessThanEqual %bool %1449 %uint_0
               OpSelectionMerge %1547 None
               OpBranchConditional %1495 %1498 %1547
       %1498 = OpLabel
       %1499 = OpSGreaterThanEqual %bool %1449 %uint_4294967233
               OpSelectionMerge %1542 None
               OpBranchConditional %1499 %1502 %1542
       %1502 = OpLabel
       %1503 = OpISub %uint %uint_0 %1449
       %1504 = OpBitwiseAnd %v2uint %1494 %1438
       %1505 = OpINotEqual %bool %1443 %1423
               OpSelectionMerge %1537 None
               OpBranchConditional %1505 %1508 %1537
       %1508 = OpLabel
       %1509 = OpUGreaterThanEqual %bool %1503 %uint_32
               OpSelectionMerge %1517 None
               OpBranchConditional %1509 %1512 %1517
       %1512 = OpLabel
       %1513 = OpBitwiseAnd %uint %1503 %uint_31
       %1514 = OpShiftRightLogical %uint %1436 %1513
       %1515 = OpCompositeInsert %v2uint %1514 %420 0
               OpBranch %1517
       %1517 = OpLabel
       %1518 = OpPhi %v2uint %1453 %1512 %528 %1508
       %1519 = OpPhi %v2uint %1504 %1512 %528 %1508
       %1520 = OpPhi %v2uint %1515 %1512 %528 %1508
       %1521 = OpPhi %bool %false %1512 %true %1508
               OpSelectionMerge %1532 None
               OpBranchConditional %1521 %1524 %1532
       %1524 = OpLabel
       %1525 = OpShiftRightLogical %uint %1437 %1503
       %1526 = OpBitwiseAnd %uint %1449 %uint_31
       %1527 = OpShiftLeftLogical %uint %1436 %1526
       %1528 = OpBitwiseOr %uint %1527 %1525
       %1529 = OpShiftRightLogical %uint %1436 %1503
       %1530 = OpCompositeConstruct %v2uint %1528 %1529
               OpBranch %1532
       %1532 = OpLabel
       %1533 = OpPhi %v2uint %1453 %1524 %1518 %1517
       %1534 = OpPhi %v2uint %1504 %1524 %1519 %1517
       %1535 = OpPhi %v2uint %1530 %1524 %1520 %1517
               OpBranch %1537
       %1537 = OpLabel
       %1538 = OpPhi %v2uint %1533 %1532 %1453 %1502
       %1539 = OpPhi %v2uint %1534 %1532 %1504 %1502
       %1540 = OpPhi %v2uint %1535 %1532 %1438 %1502
               OpBranch %1542
       %1542 = OpLabel
       %1543 = OpPhi %v2uint %1538 %1537 %1453 %1498
       %1544 = OpPhi %v2uint %1539 %1537 %1438 %1498
       %1545 = OpPhi %v2uint %1540 %1537 %270 %1498
               OpBranch %1547
       %1547 = OpLabel
       %1548 = OpPhi %v2uint %1543 %1542 %528 %1482
       %1549 = OpPhi %v2uint %1544 %1542 %528 %1482
       %1550 = OpPhi %v2uint %1545 %1542 %528 %1482
       %1551 = OpPhi %bool %false %1542 %true %1482
               OpSelectionMerge %1593 None
               OpBranchConditional %1551 %1554 %1593
       %1554 = OpLabel
       %1555 = OpULessThanEqual %bool %1449 %uint_63
               OpSelectionMerge %1588 None
               OpBranchConditional %1555 %1558 %1588
       %1558 = OpLabel
       %1559 = OpBitwiseAnd %uint %1493 %1452
       %1560 = OpCompositeInsert %v2uint %1559 %355 1
       %1561 = OpUGreaterThanEqual %bool %1449 %uint_32
               OpSelectionMerge %1569 None
               OpBranchConditional %1561 %1564 %1569
       %1564 = OpLabel
       %1565 = OpBitwiseAnd %uint %1449 %uint_31
       %1566 = OpShiftRightLogical %uint %1452 %1565
       %1567 = OpCompositeInsert %v2uint %1566 %420 0
               OpBranch %1569
       %1569 = OpLabel
       %1570 = OpPhi %v2uint %1567 %1564 %528 %1558
       %1571 = OpPhi %v2uint %1560 %1564 %528 %1558
       %1572 = OpPhi %v2uint %1438 %1564 %528 %1558
       %1573 = OpPhi %bool %false %1564 %true %1558
               OpSelectionMerge %1583 None
               OpBranchConditional %1573 %1576 %1583
       %1576 = OpLabel
       %1577 = OpISub %uint %uint_0 %1449
       %1578 = OpBitwiseAnd %uint %1577 %uint_31
       %1579 = OpShiftLeftLogical %uint %1452 %1578
       %1580 = OpShiftRightLogical %uint %1452 %1449
       %1581 = OpCompositeConstruct %v2uint %1579 %1580
               OpBranch %1583
       %1583 = OpLabel
       %1584 = OpPhi %v2uint %1581 %1576 %1570 %1569
       %1585 = OpPhi %v2uint %1560 %1576 %1571 %1569
       %1586 = OpPhi %v2uint %1438 %1576 %1572 %1569
               OpBranch %1588
       %1588 = OpLabel
       %1589 = OpPhi %v2uint %1584 %1583 %270 %1554
       %1590 = OpPhi %v2uint %1585 %1583 %1453 %1554
       %1591 = OpPhi %v2uint %1586 %1583 %1438 %1554
               OpBranch %1593
       %1593 = OpLabel
       %1594 = OpPhi %v2uint %1550 %1547 %1591 %1588
       %1595 = OpPhi %v2uint %1549 %1547 %1590 %1588
       %1596 = OpPhi %v2uint %1548 %1547 %1589 %1588
       %1597 = OpExtInst %uint %184 SMax %1443 %1423
       %1598 = OpINotEqual %bool %1426 %1428
               OpSelectionMerge %1645 None
               OpBranchConditional %1598 %1601 %1645
       %1601 = OpLabel
       %1602 = OpCompositeExtract %uint %1596 0
       %1603 = OpBitwiseXor %uint %1602 %uint_4294967295
       %1604 = OpCompositeExtract %uint %1596 1
       %1605 = OpBitwiseXor %uint %1604 %uint_4294967295
       %1606 = OpShiftRightLogical %uint %1603 %uint_1
       %1607 = OpBitwiseAnd %uint %1603 %uint_1
       %1608 = OpIAdd %uint %1606 %1607
       %1609 = OpShiftRightLogical %uint %1608 %uint_31
       %1610 = OpISub %uint %uint_0 %1602
       %1611 = OpCompositeExtract %uint %1594 0
       %1612 = OpShiftRightLogical %uint %1611 %uint_1
       %1613 = OpShiftRightLogical %uint %1610 %uint_1
       %1614 = OpIAdd %uint %1613 %1612
       %1615 = OpBitwiseAnd %uint %1611 %uint_1
       %1616 = OpBitwiseAnd %uint %1615 %1610
       %1617 = OpIAdd %uint %1614 %1616
       %1618 = OpShiftRightLogical %uint %1617 %uint_31
       %1619 = OpISub %uint %1611 %1602
       %1620 = OpCompositeExtract %uint %1594 1
       %1621 = OpVectorShuffle %v2uint %1595 %528 1 4294967295
       %1622 = OpBitwiseOr %v2uint %1621 %1595
       %1623 = OpCompositeExtract %uint %1622 0
       %1624 = OpINotEqual %bool %1623 %uint_0
       %1625 = OpSGreaterThan %bool %1443 %1423
       %1626 = OpSelect %bool %1624 %1625 %false
       %1627 = OpSelect %v2uint %1626 %536 %270
       %1628 = OpCompositeExtract %uint %1627 0
       %1629 = OpShiftRightLogical %uint %1619 %uint_1
       %1630 = OpShiftRightLogical %uint %1628 %uint_1
       %1631 = OpIAdd %uint %1630 %1629
       %1632 = OpBitwiseAnd %uint %1619 %uint_1
       %1633 = OpBitwiseAnd %uint %1632 %1628
       %1634 = OpIAdd %uint %1631 %1633
       %1635 = OpShiftRightLogical %uint %1634 %uint_31
       %1636 = OpIAdd %uint %1628 %1619
       %1637 = OpCompositeExtract %uint %1627 1
       %1638 = OpIAdd %uint %1620 %1605
       %1639 = OpIAdd %uint %1638 %1609
       %1640 = OpIAdd %uint %1639 %1618
       %1641 = OpIAdd %uint %1640 %1637
       %1642 = OpIAdd %uint %1641 %1635
       %1643 = OpCompositeConstruct %v2uint %1636 %1642
               OpBranch %1645
       %1645 = OpLabel
       %1646 = OpPhi %v2uint %1643 %1601 %528 %1593
       %1647 = OpPhi %bool %false %1601 %true %1593
               OpSelectionMerge %1666 None
               OpBranchConditional %1647 %1650 %1666
       %1650 = OpLabel
       %1651 = OpCompositeExtract %uint %1594 0
       %1652 = OpCompositeExtract %uint %1596 0
       %1653 = OpShiftRightLogical %uint %1651 %uint_1
       %1654 = OpShiftRightLogical %uint %1652 %uint_1
       %1655 = OpIAdd %uint %1654 %1653
       %1656 = OpBitwiseAnd %uint %1651 %uint_1
       %1657 = OpBitwiseAnd %uint %1656 %1652
       %1658 = OpIAdd %uint %1655 %1657
       %1659 = OpShiftRightLogical %uint %1658 %uint_31
       %1660 = OpIAdd %uint %1652 %1651
       %1661 = OpIAdd %v2uint %1596 %1594
       %1662 = OpCompositeExtract %uint %1661 1
       %1663 = OpIAdd %uint %1659 %1662
       %1664 = OpCompositeConstruct %v2uint %1660 %1663
               OpBranch %1666
       %1666 = OpLabel
       %1667 = OpPhi %v2uint %1664 %1650 %1646 %1645
       %1668 = OpCompositeExtract %uint %1667 1
       %1669 = OpSLessThan %bool %1668 %uint_0
               OpSelectionMerge %1685 None
               OpBranchConditional %1669 %1672 %1685
       %1672 = OpLabel
       %1673 = OpCompositeExtract %uint %1667 0
       %1674 = OpBitwiseXor %uint %1673 %uint_4294967295
       %1675 = OpBitwiseXor %uint %1668 %uint_4294967295
       %1676 = OpShiftRightLogical %uint %1674 %uint_1
       %1677 = OpBitwiseAnd %uint %1674 %uint_1
       %1678 = OpIAdd %uint %1676 %1677
       %1679 = OpShiftRightLogical %uint %1678 %uint_31
       %1680 = OpISub %uint %uint_0 %1673
       %1681 = OpIAdd %uint %1679 %1675
       %1682 = OpCompositeConstruct %v2uint %1680 %1681
       %1683 = OpBitwiseXor %uint %1428 %uint_2147483648
               OpBranch %1685
       %1685 = OpLabel
       %1686 = OpPhi %uint %1683 %1672 %1428 %1666
       %1687 = OpPhi %v2uint %1682 %1672 %1667 %1666
       %1688 = OpCompositeExtract %uint %1687 1
       %1689 = OpExtInst %uint %184 FindUMsb %1688
       %1690 = OpISub %uint %uint_31 %1689
       %1691 = OpIEqual %bool %1688 %uint_0
       %1692 = OpCompositeExtract %uint %1687 0
       %1693 = OpExtInst %uint %184 FindUMsb %1692
       %1694 = OpISub %uint %uint_31 %1693
       %1695 = OpIAdd %uint %1694 %uint_32
       %1696 = OpSelect %uint %1691 %1695 %1690
       %1697 = OpISub %uint %uint_3 %1696
       %1698 = OpIAdd %uint %1697 %1597
       %1699 = OpUGreaterThan %bool %1696 %uint_3
               OpSelectionMerge %1730 None
               OpBranchConditional %1699 %1702 %1730
       %1702 = OpLabel
       %1703 = OpIAdd %uint %1696 %uint_4294967293
       %1704 = OpUGreaterThanEqual %bool %1703 %uint_32
               OpSelectionMerge %1712 None
               OpBranchConditional %1704 %1707 %1712
       %1707 = OpLabel
       %1708 = OpBitwiseAnd %uint %1703 %uint_31
       %1709 = OpShiftLeftLogical %uint %1692 %1708
       %1710 = OpCompositeInsert %v2uint %1709 %355 1
               OpBranch %1712
       %1712 = OpLabel
       %1713 = OpPhi %uint %uint_0 %1707 %354 %1702
       %1714 = OpPhi %v2uint %1710 %1707 %528 %1702
       %1715 = OpPhi %bool %false %1707 %true %1702
               OpSelectionMerge %1726 None
               OpBranchConditional %1715 %1718 %1726
       %1718 = OpLabel
       %1719 = OpShiftLeftLogical %uint %1688 %1703
       %1720 = OpBitwiseAnd %uint %1697 %uint_31
       %1721 = OpShiftRightLogical %uint %1692 %1720
       %1722 = OpBitwiseOr %uint %1721 %1719
       %1723 = OpShiftLeftLogical %uint %1692 %1703
       %1724 = OpCompositeConstruct %v2uint %1723 %1722
               OpBranch %1726
       %1726 = OpLabel
       %1727 = OpPhi %uint %uint_0 %1718 %1713 %1712
       %1728 = OpPhi %v2uint %1724 %1718 %1714 %1712
               OpBranch %1730
       %1730 = OpLabel
       %1731 = OpPhi %v2uint %1687 %1685 %1728 %1726
       %1732 = OpPhi %uint %1697 %1685 %1727 %1726
       %1733 = OpIAdd %uint %1732 %uint_5
       %1734 = OpBitwiseAnd %uint %1733 %uint_31
       %1735 = OpShiftLeftLogical %uint %uint_1 %1734
       %1736 = OpCompositeInsert %v2uint %1735 %355 1
       %1737 = OpIAdd %uint %1735 %uint_4294967295
       %1738 = OpCompositeInsert %v2uint %1737 %650 1
       %1739 = OpBitwiseAnd %v2uint %1738 %1731
       %1740 = OpCompositeExtract %uint %1739 1
       %1741 = OpBitwiseAnd %v2uint %1736 %1731
       %1742 = OpIAdd %uint %1732 %uint_2
       %1743 = OpBitwiseAnd %uint %1742 %uint_31
       %1744 = OpShiftLeftLogical %uint %uint_4 %1743
       %1745 = OpUGreaterThan %bool %1740 %1744
       %1746 = OpLogicalNot %bool %1745
               OpSelectionMerge %1777 None
               OpBranchConditional %1746 %1749 %1777
       %1749 = OpLabel
       %1750 = OpCompositeExtract %uint %1739 0
       %1751 = OpVectorShuffle %v2uint %1595 %528 1 4294967295
       %1752 = OpBitwiseOr %v2uint %1751 %1595
       %1753 = OpCompositeExtract %uint %1752 0
       %1754 = OpINotEqual %bool %1753 %uint_0
       %1755 = OpSelect %uint %1754 %uint_1 %uint_0
       %1756 = OpBitwiseOr %uint %1750 %1755
       %1757 = OpIEqual %bool %1740 %1744
       %1758 = OpINotEqual %bool %1756 %uint_0
       %1759 = OpSelect %bool %1757 %1758 %false
       %1760 = OpLogicalNot %bool %1759
               OpSelectionMerge %1773 None
               OpBranchConditional %1760 %1763 %1773
       %1763 = OpLabel
       %1764 = OpINotEqual %bool %1740 %1744
       %1765 = OpLogicalOr %bool %1764 %1758
       %1766 = OpVectorShuffle %v2uint %1741 %528 1 4294967295
       %1767 = OpBitwiseOr %v2uint %1766 %1741
       %1768 = OpCompositeExtract %uint %1767 0
       %1769 = OpIEqual %bool %1768 %uint_0
       %1770 = OpSelect %bool %1765 %true %1769
       %1771 = OpLogicalNot %bool %1770
               OpBranch %1773
       %1773 = OpLabel
       %1774 = OpPhi %v2uint %1731 %1763 %528 %1749
       %1775 = OpPhi %bool %1771 %1763 %1759 %1749
               OpBranch %1777
       %1777 = OpLabel
       %1778 = OpPhi %v2uint %1774 %1773 %528 %1730
       %1779 = OpPhi %bool %1775 %1773 %1745 %1730
               OpSelectionMerge %1787 None
               OpBranchConditional %1779 %1782 %1787
       %1782 = OpLabel
       %1783 = OpCompositeExtract %uint %1731 1
       %1784 = OpIAdd %uint %1735 %1783
       %1785 = OpCompositeInsert %v2uint %1784 %1731 1
               OpBranch %1787
       %1787 = OpLabel
       %1788 = OpPhi %v2uint %1785 %1782 %1778 %1777
       %1789 = OpCompositeExtract %uint %1788 1
       %1790 = OpShiftRightLogical %uint %1789 %1734
       %1791 = OpUGreaterThan %bool %1790 %uint_16777215
       %1792 = OpSelect %uint %1791 %uint_1 %uint_0
       %1793 = OpShiftRightLogical %uint %1790 %1792
       %1794 = OpIAdd %uint %1698 %1792
       %1795 = OpINotEqual %bool %1793 %uint_0
               OpSelectionMerge %1837 None
               OpBranchConditional %1795 %1798 %1837
       %1798 = OpLabel
       %1799 = OpSLessThanEqual %bool %1794 %uint_127
               OpSelectionMerge %1825 None
               OpBranchConditional %1799 %1802 %1825
       %1802 = OpLabel
       %1803 = OpSGreaterThanEqual %bool %1794 %uint_4294967170
               OpSelectionMerge %1814 None
               OpBranchConditional %1803 %1806 %1814
       %1806 = OpLabel
       %1807 = OpShiftLeftLogical %uint %1794 %uint_23
       %1808 = OpIAdd %uint %1807 %uint_1065353216
       %1809 = OpBitwiseAnd %uint %1793 %uint_8388607
       %1810 = OpBitwiseOr %uint %1808 %1809
       %1811 = OpBitwiseOr %uint %1810 %1686
       %1812 = OpBitcast %float %1811
               OpBranch %1814
       %1814 = OpLabel
       %1815 = OpPhi %float %1812 %1806 %261 %1802
       %1816 = OpPhi %bool %false %1806 %true %1802
               OpSelectionMerge %1822 None
               OpBranchConditional %1816 %1819 %1822
       %1819 = OpLabel
       %1820 = OpBitcast %float %1686
               OpBranch %1822
       %1822 = OpLabel
       %1823 = OpPhi %float %1820 %1819 %1815 %1814
               OpBranch %1825
       %1825 = OpLabel
       %1826 = OpPhi %float %1823 %1822 %261 %1798
       %1827 = OpPhi %bool %false %1822 %true %1798
               OpSelectionMerge %1834 None
               OpBranchConditional %1827 %1830 %1834
       %1830 = OpLabel
       %1831 = OpBitwiseOr %uint %1686 %uint_2139095040
       %1832 = OpBitcast %float %1831
               OpBranch %1834
       %1834 = OpLabel
       %1835 = OpPhi %float %1832 %1830 %1826 %1825
               OpBranch %1837
       %1837 = OpLabel
       %1838 = OpPhi %float %1835 %1834 %float_0 %1787
               OpBranch %1840
       %1840 = OpLabel
       %1841 = OpPhi %float %1838 %1837 %1400 %1412
               OpBranch %1843
       %1843 = OpLabel
       %1844 = OpPhi %float %1841 %1840 %261 %1408
       %1845 = OpPhi %bool %false %1840 %true %1408
               OpSelectionMerge %1853 None
               OpBranchConditional %1845 %1848 %1853
       %1848 = OpLabel
       %1849 = OpVectorShuffle %v2float %1391 %768 1 4294967295
       %1850 = OpFMul %v2float %1391 %1849
       %1851 = OpCompositeExtract %float %1850 0
               OpBranch %1853
       %1853 = OpLabel
       %1854 = OpPhi %float %1851 %1848 %1844 %1843
               OpBranch %1856
       %1856 = OpLabel
       %1857 = OpPhi %float %1854 %1853 %1400 %1381
               OpBranch %1859
       %1859 = OpLabel
       %1860 = OpPhi %float %1857 %1856 %1351 %1376
               OpBranch %1862
       %1862 = OpLabel
       %1863 = OpPhi %float %1860 %1859 %261 %1371
       %1864 = OpPhi %bool %false %1859 %true %1371
               OpBranch %1866
       %1866 = OpLabel
       %1867 = OpPhi %float %1863 %1862 %261 %1366
       %1868 = OpPhi %bool %1864 %1862 %1367 %1366
               OpBranch %1870
       %1870 = OpLabel
       %1871 = OpPhi %float %1867 %1866 %261 %1361
       %1872 = OpPhi %bool %1868 %1866 %1362 %1361
               OpBranch %1874
       %1874 = OpLabel
       %1875 = OpPhi %float %1871 %1870 %261 %1356
       %1876 = OpPhi %bool %1872 %1870 %1357 %1356
               OpBranch %1878
       %1878 = OpLabel
       %1879 = OpPhi %float %1875 %1874 %261 %1350
       %1880 = OpPhi %bool %1876 %1874 %1352 %1350
               OpSelectionMerge %1887 None
               OpBranchConditional %1880 %1883 %1887
       %1883 = OpLabel
       %1884 = OpFMul %float %226 %float_1_57079625
       %1885 = OpFAdd %float %1884 %1351
               OpBranch %1887
       %1887 = OpLabel
       %1888 = OpPhi %float %1885 %1883 %1879 %1878
       %1889 = OpFAdd %float %228 %1888
       %1890 = OpFSub %float %1889 %228
       %1891 = OpFSub %float %1888 %1890
       %1892 = OpShiftRightLogical %uint %162 %uint_30
       %1893 = OpIAdd %uint %178 %1892
               OpBranch %1895
       %1895 = OpLabel
       %1896 = OpPhi %uint %1893 %1887 %354 %36
       %1897 = OpPhi %float %1889 %1887 %261 %36
       %1898 = OpPhi %float %1891 %1887 %261 %36
       %1899 = OpPhi %bool %false %1887 %true %36
               OpSelectionMerge %3537 None
               OpBranchConditional %1899 %1902 %3537
       %1902 = OpLabel
       %1904 = OpFMul %float %42 %float_0_636619747
       %1906 = OpFAdd %float %1904 %float_0_5
       %1907 = OpExtInst %float %184 Trunc %1906
       %1908 = OpFMul %float %1907 %float_1_57079625
       %1909 = OpFNegate %float %1908
       %1910 = OpIsNan %bool %1907
       %1911 = OpLogicalNot %bool %1910
               OpSelectionMerge %2436 None
               OpBranchConditional %1911 %1914 %2436
       %1914 = OpLabel
       %1915 = OpIsNan %bool %float_1_57079625
       %1916 = OpLogicalNot %bool %1915
               OpSelectionMerge %2432 None
               OpBranchConditional %1916 %1919 %2432
       %1919 = OpLabel
       %1920 = OpIsNan %bool %1909
       %1921 = OpLogicalNot %bool %1920
               OpSelectionMerge %2428 None
               OpBranchConditional %1921 %1924 %2428
       %1924 = OpLabel
       %1925 = OpIsInf %bool %1907
       %1926 = OpLogicalNot %bool %1925
               OpSelectionMerge %2424 None
               OpBranchConditional %1926 %1929 %2424
       %1929 = OpLabel
       %1930 = OpIsInf %bool %float_1_57079625
       %1931 = OpLogicalNot %bool %1930
               OpSelectionMerge %2420 None
               OpBranchConditional %1931 %1934 %2420
       %1934 = OpLabel
       %1935 = OpIsInf %bool %1909
       %1936 = OpLogicalNot %bool %1935
               OpSelectionMerge %2417 None
               OpBranchConditional %1936 %1939 %2417
       %1939 = OpLabel
       %1940 = OpCompositeInsert %v2float %1907 %262 1
       %1941 = OpBitcast %v2uint %1940
       %1942 = OpBitwiseAnd %v2uint %1941 %267
       %1943 = OpINotEqual %v2bool %1942 %270
       %1944 = OpBitwiseAnd %v2uint %1941 %272
       %1945 = OpIEqual %v2bool %1944 %270
       %1946 = OpLogicalOr %v2bool %1945 %1943
       %1947 = OpBitwiseAnd %v2uint %1941 %277
       %1948 = OpBitcast %v2float %1947
       %1949 = OpSelect %v2float %1946 %1940 %1948
       %1950 = OpBitcast %uint %1909
       %1951 = OpBitwiseAnd %uint %1950 %uint_2139095040
       %1952 = OpINotEqual %bool %1951 %uint_0
       %1953 = OpBitwiseAnd %uint %1950 %uint_8388607
       %1954 = OpIEqual %bool %1953 %uint_0
       %1955 = OpLogicalOr %bool %1954 %1952
       %1956 = OpBitwiseAnd %uint %1950 %uint_2147483648
       %1957 = OpBitcast %float %1956
       %1958 = OpSelect %float %1955 %1909 %1957
       %1959 = OpFOrdEqual %v2bool %1949 %290
       %1960 = OpVectorShuffle %v2bool %1959 %292 1 4294967295
       %1961 = OpLogicalOr %v2bool %1960 %1959
       %1962 = OpCompositeExtract %bool %1961 0
       %1963 = OpLogicalNot %bool %1962
               OpSelectionMerge %2414 None
               OpBranchConditional %1963 %1966 %2414
       %1966 = OpLabel
       %1967 = OpFUnordNotEqual %bool %1958 %float_0
               OpSelectionMerge %2401 None
               OpBranchConditional %1967 %1970 %2401
       %1970 = OpLabel
       %1971 = OpBitcast %v2uint %1949
       %1972 = OpCompositeExtract %uint %1971 1
       %1973 = OpShiftRightLogical %uint %1972 %uint_23
       %1974 = OpBitwiseAnd %uint %1973 %uint_255
       %1975 = OpCompositeExtract %uint %1971 0
       %1976 = OpShiftRightLogical %uint %1975 %uint_23
       %1977 = OpBitwiseAnd %uint %1976 %uint_255
       %1978 = OpBitcast %uint %1958
       %1979 = OpShiftRightLogical %uint %1978 %uint_23
       %1980 = OpBitwiseAnd %uint %1979 %uint_255
       %1981 = OpIAdd %uint %1980 %uint_4294967169
       %1982 = OpBitwiseAnd %v2uint %1971 %272
       %1983 = OpBitwiseOr %v2uint %1982 %319
       %1984 = OpBitwiseAnd %uint %1978 %uint_2147483648
       %1985 = OpBitwiseXor %uint %1975 %1972
       %1986 = OpBitwiseAnd %uint %1985 %uint_2147483648
       %1987 = OpCompositeExtract %uint %1983 0
       %1988 = OpCompositeExtract %uint %1983 1
       %1989 = OpUMulExtended %_struct_58 %1988 %1987
       %1990 = OpCompositeExtract %uint %1989 1
       %1991 = OpIMul %uint %1987 %1988
       %1992 = OpShiftLeftLogical %uint %1990 %uint_14
       %1993 = OpShiftRightLogical %uint %1991 %uint_18
       %1994 = OpBitwiseOr %uint %1993 %1992
       %1995 = OpShiftLeftLogical %uint %1991 %uint_14
       %1996 = OpCompositeConstruct %v2uint %1995 %1994
       %1997 = OpBitwiseOr %uint %1994 %1995
       %1998 = OpIEqual %bool %1997 %uint_0
       %1999 = OpIAdd %uint %1974 %uint_4294967042
       %2000 = OpIAdd %uint %1999 %1977
       %2001 = OpSelect %uint %1998 %uint_0 %2000
       %2002 = OpBitwiseOr %uint %2001 %1997
       %2003 = OpINotEqual %bool %2002 %uint_0
               OpSelectionMerge %2398 None
               OpBranchConditional %2003 %2006 %2398
       %2006 = OpLabel
       %2007 = OpISub %uint %2001 %1981
       %2008 = OpShiftLeftLogical %uint %1978 %uint_5
       %2009 = OpBitwiseAnd %uint %2008 %uint_268435424
       %2010 = OpBitwiseOr %uint %2009 %uint_268435456
       %2011 = OpCompositeInsert %v2uint %2010 %355 1
       %2012 = OpExtInst %uint %184 SAbs %2007
       %2013 = OpINotEqual %bool %2012 %uint_0
               OpSelectionMerge %2040 None
               OpBranchConditional %2013 %2016 %2040
       %2016 = OpLabel
       %2017 = OpUGreaterThanEqual %bool %2012 %uint_32
               OpSelectionMerge %2025 None
               OpBranchConditional %2017 %2020 %2025
       %2020 = OpLabel
       %2021 = OpBitwiseAnd %uint %2012 %uint_31
       %2022 = OpShiftLeftLogical %uint %uint_1 %2021
       %2023 = OpCompositeInsert %v2uint %2022 %355 1
               OpBranch %2025
       %2025 = OpLabel
       %2026 = OpPhi %v2uint %2023 %2020 %528 %2016
       %2027 = OpPhi %bool %false %2020 %true %2016
               OpSelectionMerge %2037 None
               OpBranchConditional %2027 %2030 %2037
       %2030 = OpLabel
       %2031 = OpISub %uint %uint_0 %2012
       %2032 = OpBitwiseAnd %uint %2031 %uint_31
       %2033 = OpShiftRightLogical %uint %uint_1 %2032
       %2034 = OpShiftLeftLogical %uint %uint_1 %2012
       %2035 = OpCompositeConstruct %v2uint %2034 %2033
               OpBranch %2037
       %2037 = OpLabel
       %2038 = OpPhi %v2uint %2035 %2030 %2026 %2025
               OpBranch %2040
       %2040 = OpLabel
       %2041 = OpPhi %v2uint %7106 %2006 %2038 %2037
       %2042 = OpCompositeExtract %uint %2041 0
       %2043 = OpShiftRightLogical %uint %2042 %uint_1
       %2044 = OpIAdd %uint %2043 %uint_2147483647
       %2045 = OpBitwiseAnd %uint %2042 %uint_1
       %2046 = OpIAdd %uint %2044 %2045
       %2047 = OpShiftRightLogical %uint %2046 %uint_31
       %2048 = OpIAdd %uint %2042 %uint_4294967295
       %2049 = OpCompositeExtract %uint %2041 1
       %2050 = OpIAdd %uint %2049 %uint_4294967295
       %2051 = OpIAdd %uint %2050 %2047
       %2052 = OpCompositeConstruct %v2uint %2048 %2051
       %2053 = OpSLessThanEqual %bool %2007 %uint_0
               OpSelectionMerge %2105 None
               OpBranchConditional %2053 %2056 %2105
       %2056 = OpLabel
       %2057 = OpSGreaterThanEqual %bool %2007 %uint_4294967233
               OpSelectionMerge %2100 None
               OpBranchConditional %2057 %2060 %2100
       %2060 = OpLabel
       %2061 = OpISub %uint %uint_0 %2007
       %2062 = OpBitwiseAnd %v2uint %2052 %1996
       %2063 = OpINotEqual %bool %2001 %1981
               OpSelectionMerge %2095 None
               OpBranchConditional %2063 %2066 %2095
       %2066 = OpLabel
       %2067 = OpUGreaterThanEqual %bool %2061 %uint_32
               OpSelectionMerge %2075 None
               OpBranchConditional %2067 %2070 %2075
       %2070 = OpLabel
       %2071 = OpBitwiseAnd %uint %2061 %uint_31
       %2072 = OpShiftRightLogical %uint %1994 %2071
       %2073 = OpCompositeInsert %v2uint %2072 %420 0
               OpBranch %2075
       %2075 = OpLabel
       %2076 = OpPhi %v2uint %2011 %2070 %528 %2066
       %2077 = OpPhi %v2uint %2062 %2070 %528 %2066
       %2078 = OpPhi %v2uint %2073 %2070 %528 %2066
       %2079 = OpPhi %bool %false %2070 %true %2066
               OpSelectionMerge %2090 None
               OpBranchConditional %2079 %2082 %2090
       %2082 = OpLabel
       %2083 = OpShiftRightLogical %uint %1995 %2061
       %2084 = OpBitwiseAnd %uint %2007 %uint_31
       %2085 = OpShiftLeftLogical %uint %1994 %2084
       %2086 = OpBitwiseOr %uint %2085 %2083
       %2087 = OpShiftRightLogical %uint %1994 %2061
       %2088 = OpCompositeConstruct %v2uint %2086 %2087
               OpBranch %2090
       %2090 = OpLabel
       %2091 = OpPhi %v2uint %2011 %2082 %2076 %2075
       %2092 = OpPhi %v2uint %2062 %2082 %2077 %2075
       %2093 = OpPhi %v2uint %2088 %2082 %2078 %2075
               OpBranch %2095
       %2095 = OpLabel
       %2096 = OpPhi %v2uint %2091 %2090 %2011 %2060
       %2097 = OpPhi %v2uint %2092 %2090 %2062 %2060
       %2098 = OpPhi %v2uint %2093 %2090 %1996 %2060
               OpBranch %2100
       %2100 = OpLabel
       %2101 = OpPhi %v2uint %2096 %2095 %2011 %2056
       %2102 = OpPhi %v2uint %2097 %2095 %1996 %2056
       %2103 = OpPhi %v2uint %2098 %2095 %270 %2056
               OpBranch %2105
       %2105 = OpLabel
       %2106 = OpPhi %v2uint %2101 %2100 %528 %2040
       %2107 = OpPhi %v2uint %2102 %2100 %528 %2040
       %2108 = OpPhi %v2uint %2103 %2100 %528 %2040
       %2109 = OpPhi %bool %false %2100 %true %2040
               OpSelectionMerge %2151 None
               OpBranchConditional %2109 %2112 %2151
       %2112 = OpLabel
       %2113 = OpULessThanEqual %bool %2007 %uint_63
               OpSelectionMerge %2146 None
               OpBranchConditional %2113 %2116 %2146
       %2116 = OpLabel
       %2117 = OpBitwiseAnd %uint %2051 %2010
       %2118 = OpCompositeInsert %v2uint %2117 %355 1
       %2119 = OpUGreaterThanEqual %bool %2007 %uint_32
               OpSelectionMerge %2127 None
               OpBranchConditional %2119 %2122 %2127
       %2122 = OpLabel
       %2123 = OpBitwiseAnd %uint %2007 %uint_31
       %2124 = OpShiftRightLogical %uint %2010 %2123
       %2125 = OpCompositeInsert %v2uint %2124 %420 0
               OpBranch %2127
       %2127 = OpLabel
       %2128 = OpPhi %v2uint %2125 %2122 %528 %2116
       %2129 = OpPhi %v2uint %2118 %2122 %528 %2116
       %2130 = OpPhi %v2uint %1996 %2122 %528 %2116
       %2131 = OpPhi %bool %false %2122 %true %2116
               OpSelectionMerge %2141 None
               OpBranchConditional %2131 %2134 %2141
       %2134 = OpLabel
       %2135 = OpISub %uint %uint_0 %2007
       %2136 = OpBitwiseAnd %uint %2135 %uint_31
       %2137 = OpShiftLeftLogical %uint %2010 %2136
       %2138 = OpShiftRightLogical %uint %2010 %2007
       %2139 = OpCompositeConstruct %v2uint %2137 %2138
               OpBranch %2141
       %2141 = OpLabel
       %2142 = OpPhi %v2uint %2139 %2134 %2128 %2127
       %2143 = OpPhi %v2uint %2118 %2134 %2129 %2127
       %2144 = OpPhi %v2uint %1996 %2134 %2130 %2127
               OpBranch %2146
       %2146 = OpLabel
       %2147 = OpPhi %v2uint %2142 %2141 %270 %2112
       %2148 = OpPhi %v2uint %2143 %2141 %2011 %2112
       %2149 = OpPhi %v2uint %2144 %2141 %1996 %2112
               OpBranch %2151
       %2151 = OpLabel
       %2152 = OpPhi %v2uint %2108 %2105 %2149 %2146
       %2153 = OpPhi %v2uint %2107 %2105 %2148 %2146
       %2154 = OpPhi %v2uint %2106 %2105 %2147 %2146
       %2155 = OpExtInst %uint %184 SMax %2001 %1981
       %2156 = OpINotEqual %bool %1984 %1986
               OpSelectionMerge %2203 None
               OpBranchConditional %2156 %2159 %2203
       %2159 = OpLabel
       %2160 = OpCompositeExtract %uint %2154 0
       %2161 = OpBitwiseXor %uint %2160 %uint_4294967295
       %2162 = OpCompositeExtract %uint %2154 1
       %2163 = OpBitwiseXor %uint %2162 %uint_4294967295
       %2164 = OpShiftRightLogical %uint %2161 %uint_1
       %2165 = OpBitwiseAnd %uint %2161 %uint_1
       %2166 = OpIAdd %uint %2164 %2165
       %2167 = OpShiftRightLogical %uint %2166 %uint_31
       %2168 = OpISub %uint %uint_0 %2160
       %2169 = OpCompositeExtract %uint %2152 0
       %2170 = OpShiftRightLogical %uint %2169 %uint_1
       %2171 = OpShiftRightLogical %uint %2168 %uint_1
       %2172 = OpIAdd %uint %2171 %2170
       %2173 = OpBitwiseAnd %uint %2169 %uint_1
       %2174 = OpBitwiseAnd %uint %2173 %2168
       %2175 = OpIAdd %uint %2172 %2174
       %2176 = OpShiftRightLogical %uint %2175 %uint_31
       %2177 = OpISub %uint %2169 %2160
       %2178 = OpCompositeExtract %uint %2152 1
       %2179 = OpVectorShuffle %v2uint %2153 %528 1 4294967295
       %2180 = OpBitwiseOr %v2uint %2179 %2153
       %2181 = OpCompositeExtract %uint %2180 0
       %2182 = OpINotEqual %bool %2181 %uint_0
       %2183 = OpSGreaterThan %bool %2001 %1981
       %2184 = OpSelect %bool %2182 %2183 %false
       %2185 = OpSelect %v2uint %2184 %536 %270
       %2186 = OpCompositeExtract %uint %2185 0
       %2187 = OpShiftRightLogical %uint %2177 %uint_1
       %2188 = OpShiftRightLogical %uint %2186 %uint_1
       %2189 = OpIAdd %uint %2188 %2187
       %2190 = OpBitwiseAnd %uint %2177 %uint_1
       %2191 = OpBitwiseAnd %uint %2190 %2186
       %2192 = OpIAdd %uint %2189 %2191
       %2193 = OpShiftRightLogical %uint %2192 %uint_31
       %2194 = OpIAdd %uint %2186 %2177
       %2195 = OpCompositeExtract %uint %2185 1
       %2196 = OpIAdd %uint %2178 %2163
       %2197 = OpIAdd %uint %2196 %2167
       %2198 = OpIAdd %uint %2197 %2176
       %2199 = OpIAdd %uint %2198 %2195
       %2200 = OpIAdd %uint %2199 %2193
       %2201 = OpCompositeConstruct %v2uint %2194 %2200
               OpBranch %2203
       %2203 = OpLabel
       %2204 = OpPhi %v2uint %2201 %2159 %528 %2151
       %2205 = OpPhi %bool %false %2159 %true %2151
               OpSelectionMerge %2224 None
               OpBranchConditional %2205 %2208 %2224
       %2208 = OpLabel
       %2209 = OpCompositeExtract %uint %2152 0
       %2210 = OpCompositeExtract %uint %2154 0
       %2211 = OpShiftRightLogical %uint %2209 %uint_1
       %2212 = OpShiftRightLogical %uint %2210 %uint_1
       %2213 = OpIAdd %uint %2212 %2211
       %2214 = OpBitwiseAnd %uint %2209 %uint_1
       %2215 = OpBitwiseAnd %uint %2214 %2210
       %2216 = OpIAdd %uint %2213 %2215
       %2217 = OpShiftRightLogical %uint %2216 %uint_31
       %2218 = OpIAdd %uint %2210 %2209
       %2219 = OpIAdd %v2uint %2154 %2152
       %2220 = OpCompositeExtract %uint %2219 1
       %2221 = OpIAdd %uint %2217 %2220
       %2222 = OpCompositeConstruct %v2uint %2218 %2221
               OpBranch %2224
       %2224 = OpLabel
       %2225 = OpPhi %v2uint %2222 %2208 %2204 %2203
       %2226 = OpCompositeExtract %uint %2225 1
       %2227 = OpSLessThan %bool %2226 %uint_0
               OpSelectionMerge %2243 None
               OpBranchConditional %2227 %2230 %2243
       %2230 = OpLabel
       %2231 = OpCompositeExtract %uint %2225 0
       %2232 = OpBitwiseXor %uint %2231 %uint_4294967295
       %2233 = OpBitwiseXor %uint %2226 %uint_4294967295
       %2234 = OpShiftRightLogical %uint %2232 %uint_1
       %2235 = OpBitwiseAnd %uint %2232 %uint_1
       %2236 = OpIAdd %uint %2234 %2235
       %2237 = OpShiftRightLogical %uint %2236 %uint_31
       %2238 = OpISub %uint %uint_0 %2231
       %2239 = OpIAdd %uint %2237 %2233
       %2240 = OpCompositeConstruct %v2uint %2238 %2239
       %2241 = OpBitwiseXor %uint %1986 %uint_2147483648
               OpBranch %2243
       %2243 = OpLabel
       %2244 = OpPhi %uint %2241 %2230 %1986 %2224
       %2245 = OpPhi %v2uint %2240 %2230 %2225 %2224
       %2246 = OpCompositeExtract %uint %2245 1
       %2247 = OpExtInst %uint %184 FindUMsb %2246
       %2248 = OpISub %uint %uint_31 %2247
       %2249 = OpIEqual %bool %2246 %uint_0
       %2250 = OpCompositeExtract %uint %2245 0
       %2251 = OpExtInst %uint %184 FindUMsb %2250
       %2252 = OpISub %uint %uint_31 %2251
       %2253 = OpIAdd %uint %2252 %uint_32
       %2254 = OpSelect %uint %2249 %2253 %2248
       %2255 = OpISub %uint %uint_3 %2254
       %2256 = OpIAdd %uint %2255 %2155
       %2257 = OpUGreaterThan %bool %2254 %uint_3
               OpSelectionMerge %2288 None
               OpBranchConditional %2257 %2260 %2288
       %2260 = OpLabel
       %2261 = OpIAdd %uint %2254 %uint_4294967293
       %2262 = OpUGreaterThanEqual %bool %2261 %uint_32
               OpSelectionMerge %2270 None
               OpBranchConditional %2262 %2265 %2270
       %2265 = OpLabel
       %2266 = OpBitwiseAnd %uint %2261 %uint_31
       %2267 = OpShiftLeftLogical %uint %2250 %2266
       %2268 = OpCompositeInsert %v2uint %2267 %355 1
               OpBranch %2270
       %2270 = OpLabel
       %2271 = OpPhi %uint %uint_0 %2265 %354 %2260
       %2272 = OpPhi %v2uint %2268 %2265 %528 %2260
       %2273 = OpPhi %bool %false %2265 %true %2260
               OpSelectionMerge %2284 None
               OpBranchConditional %2273 %2276 %2284
       %2276 = OpLabel
       %2277 = OpShiftLeftLogical %uint %2246 %2261
       %2278 = OpBitwiseAnd %uint %2255 %uint_31
       %2279 = OpShiftRightLogical %uint %2250 %2278
       %2280 = OpBitwiseOr %uint %2279 %2277
       %2281 = OpShiftLeftLogical %uint %2250 %2261
       %2282 = OpCompositeConstruct %v2uint %2281 %2280
               OpBranch %2284
       %2284 = OpLabel
       %2285 = OpPhi %uint %uint_0 %2276 %2271 %2270
       %2286 = OpPhi %v2uint %2282 %2276 %2272 %2270
               OpBranch %2288
       %2288 = OpLabel
       %2289 = OpPhi %v2uint %2245 %2243 %2286 %2284
       %2290 = OpPhi %uint %2255 %2243 %2285 %2284
       %2291 = OpIAdd %uint %2290 %uint_5
       %2292 = OpBitwiseAnd %uint %2291 %uint_31
       %2293 = OpShiftLeftLogical %uint %uint_1 %2292
       %2294 = OpCompositeInsert %v2uint %2293 %355 1
       %2295 = OpIAdd %uint %2293 %uint_4294967295
       %2296 = OpCompositeInsert %v2uint %2295 %650 1
       %2297 = OpBitwiseAnd %v2uint %2296 %2289
       %2298 = OpCompositeExtract %uint %2297 1
       %2299 = OpBitwiseAnd %v2uint %2294 %2289
       %2300 = OpIAdd %uint %2290 %uint_2
       %2301 = OpBitwiseAnd %uint %2300 %uint_31
       %2302 = OpShiftLeftLogical %uint %uint_4 %2301
       %2303 = OpUGreaterThan %bool %2298 %2302
       %2304 = OpLogicalNot %bool %2303
               OpSelectionMerge %2335 None
               OpBranchConditional %2304 %2307 %2335
       %2307 = OpLabel
       %2308 = OpCompositeExtract %uint %2297 0
       %2309 = OpVectorShuffle %v2uint %2153 %528 1 4294967295
       %2310 = OpBitwiseOr %v2uint %2309 %2153
       %2311 = OpCompositeExtract %uint %2310 0
       %2312 = OpINotEqual %bool %2311 %uint_0
       %2313 = OpSelect %uint %2312 %uint_1 %uint_0
       %2314 = OpBitwiseOr %uint %2308 %2313
       %2315 = OpIEqual %bool %2298 %2302
       %2316 = OpINotEqual %bool %2314 %uint_0
       %2317 = OpSelect %bool %2315 %2316 %false
       %2318 = OpLogicalNot %bool %2317
               OpSelectionMerge %2331 None
               OpBranchConditional %2318 %2321 %2331
       %2321 = OpLabel
       %2322 = OpINotEqual %bool %2298 %2302
       %2323 = OpLogicalOr %bool %2322 %2316
       %2324 = OpVectorShuffle %v2uint %2299 %528 1 4294967295
       %2325 = OpBitwiseOr %v2uint %2324 %2299
       %2326 = OpCompositeExtract %uint %2325 0
       %2327 = OpIEqual %bool %2326 %uint_0
       %2328 = OpSelect %bool %2323 %true %2327
       %2329 = OpLogicalNot %bool %2328
               OpBranch %2331
       %2331 = OpLabel
       %2332 = OpPhi %v2uint %2289 %2321 %528 %2307
       %2333 = OpPhi %bool %2329 %2321 %2317 %2307
               OpBranch %2335
       %2335 = OpLabel
       %2336 = OpPhi %v2uint %2332 %2331 %528 %2288
       %2337 = OpPhi %bool %2333 %2331 %2303 %2288
               OpSelectionMerge %2345 None
               OpBranchConditional %2337 %2340 %2345
       %2340 = OpLabel
       %2341 = OpCompositeExtract %uint %2289 1
       %2342 = OpIAdd %uint %2293 %2341
       %2343 = OpCompositeInsert %v2uint %2342 %2289 1
               OpBranch %2345
       %2345 = OpLabel
       %2346 = OpPhi %v2uint %2343 %2340 %2336 %2335
       %2347 = OpCompositeExtract %uint %2346 1
       %2348 = OpShiftRightLogical %uint %2347 %2292
       %2349 = OpUGreaterThan %bool %2348 %uint_16777215
       %2350 = OpSelect %uint %2349 %uint_1 %uint_0
       %2351 = OpShiftRightLogical %uint %2348 %2350
       %2352 = OpIAdd %uint %2256 %2350
       %2353 = OpINotEqual %bool %2351 %uint_0
               OpSelectionMerge %2395 None
               OpBranchConditional %2353 %2356 %2395
       %2356 = OpLabel
       %2357 = OpSLessThanEqual %bool %2352 %uint_127
               OpSelectionMerge %2383 None
               OpBranchConditional %2357 %2360 %2383
       %2360 = OpLabel
       %2361 = OpSGreaterThanEqual %bool %2352 %uint_4294967170
               OpSelectionMerge %2372 None
               OpBranchConditional %2361 %2364 %2372
       %2364 = OpLabel
       %2365 = OpShiftLeftLogical %uint %2352 %uint_23
       %2366 = OpIAdd %uint %2365 %uint_1065353216
       %2367 = OpBitwiseAnd %uint %2351 %uint_8388607
       %2368 = OpBitwiseOr %uint %2366 %2367
       %2369 = OpBitwiseOr %uint %2368 %2244
       %2370 = OpBitcast %float %2369
               OpBranch %2372
       %2372 = OpLabel
       %2373 = OpPhi %float %2370 %2364 %261 %2360
       %2374 = OpPhi %bool %false %2364 %true %2360
               OpSelectionMerge %2380 None
               OpBranchConditional %2374 %2377 %2380
       %2377 = OpLabel
       %2378 = OpBitcast %float %2244
               OpBranch %2380
       %2380 = OpLabel
       %2381 = OpPhi %float %2378 %2377 %2373 %2372
               OpBranch %2383
       %2383 = OpLabel
       %2384 = OpPhi %float %2381 %2380 %261 %2356
       %2385 = OpPhi %bool %false %2380 %true %2356
               OpSelectionMerge %2392 None
               OpBranchConditional %2385 %2388 %2392
       %2388 = OpLabel
       %2389 = OpBitwiseOr %uint %2244 %uint_2139095040
       %2390 = OpBitcast %float %2389
               OpBranch %2392
       %2392 = OpLabel
       %2393 = OpPhi %float %2390 %2388 %2384 %2383
               OpBranch %2395
       %2395 = OpLabel
       %2396 = OpPhi %float %2393 %2392 %float_0 %2345
               OpBranch %2398
       %2398 = OpLabel
       %2399 = OpPhi %float %2396 %2395 %1958 %1970
               OpBranch %2401
       %2401 = OpLabel
       %2402 = OpPhi %float %2399 %2398 %261 %1966
       %2403 = OpPhi %bool %false %2398 %true %1966
               OpSelectionMerge %2411 None
               OpBranchConditional %2403 %2406 %2411
       %2406 = OpLabel
       %2407 = OpVectorShuffle %v2float %1949 %768 1 4294967295
       %2408 = OpFMul %v2float %1949 %2407
       %2409 = OpCompositeExtract %float %2408 0
               OpBranch %2411
       %2411 = OpLabel
       %2412 = OpPhi %float %2409 %2406 %2402 %2401
               OpBranch %2414
       %2414 = OpLabel
       %2415 = OpPhi %float %2412 %2411 %1958 %1939
               OpBranch %2417
       %2417 = OpLabel
       %2418 = OpPhi %float %2415 %2414 %1909 %1934
               OpBranch %2420
       %2420 = OpLabel
       %2421 = OpPhi %float %2418 %2417 %261 %1929
       %2422 = OpPhi %bool %false %2417 %true %1929
               OpBranch %2424
       %2424 = OpLabel
       %2425 = OpPhi %float %2421 %2420 %261 %1924
       %2426 = OpPhi %bool %2422 %2420 %1925 %1924
               OpBranch %2428
       %2428 = OpLabel
       %2429 = OpPhi %float %2425 %2424 %261 %1919
       %2430 = OpPhi %bool %2426 %2424 %1920 %1919
               OpBranch %2432
       %2432 = OpLabel
       %2433 = OpPhi %float %2429 %2428 %261 %1914
       %2434 = OpPhi %bool %2430 %2428 %1915 %1914
               OpBranch %2436
       %2436 = OpLabel
       %2437 = OpPhi %float %2433 %2432 %261 %1902
       %2438 = OpPhi %bool %2434 %2432 %1910 %1902
               OpSelectionMerge %2444 None
               OpBranchConditional %2438 %2441 %2444
       %2441 = OpLabel
       %2442 = OpFSub %float %1908 %1908
               OpBranch %2444
       %2444 = OpLabel
       %2445 = OpPhi %float %2442 %2441 %2437 %2436
       %2446 = OpFSub %float %42 %1908
       %2447 = OpFSub %float %42 %2446
       %2448 = OpFSub %float %2447 %1908
       %2449 = OpFSub %float %2448 %2445
       %2450 = OpFAdd %float %2446 %2449
       %2451 = OpFMul %float %1907 %float_7_54978942en08
       %2452 = OpFNegate %float %2451
               OpSelectionMerge %2977 None
               OpBranchConditional %1911 %2455 %2977
       %2455 = OpLabel
       %2456 = OpIsNan %bool %float_7_54978942en08
       %2457 = OpLogicalNot %bool %2456
               OpSelectionMerge %2973 None
               OpBranchConditional %2457 %2460 %2973
       %2460 = OpLabel
       %2461 = OpIsNan %bool %2452
       %2462 = OpLogicalNot %bool %2461
               OpSelectionMerge %2969 None
               OpBranchConditional %2462 %2465 %2969
       %2465 = OpLabel
       %2466 = OpIsInf %bool %1907
       %2467 = OpLogicalNot %bool %2466
               OpSelectionMerge %2965 None
               OpBranchConditional %2467 %2470 %2965
       %2470 = OpLabel
       %2471 = OpIsInf %bool %float_7_54978942en08
       %2472 = OpLogicalNot %bool %2471
               OpSelectionMerge %2961 None
               OpBranchConditional %2472 %2475 %2961
       %2475 = OpLabel
       %2476 = OpIsInf %bool %2452
       %2477 = OpLogicalNot %bool %2476
               OpSelectionMerge %2958 None
               OpBranchConditional %2477 %2480 %2958
       %2480 = OpLabel
       %2481 = OpCompositeInsert %v2float %1907 %829 1
       %2482 = OpBitcast %v2uint %2481
       %2483 = OpBitwiseAnd %v2uint %2482 %267
       %2484 = OpINotEqual %v2bool %2483 %270
       %2485 = OpBitwiseAnd %v2uint %2482 %272
       %2486 = OpIEqual %v2bool %2485 %270
       %2487 = OpLogicalOr %v2bool %2486 %2484
       %2488 = OpBitwiseAnd %v2uint %2482 %277
       %2489 = OpBitcast %v2float %2488
       %2490 = OpSelect %v2float %2487 %2481 %2489
       %2491 = OpBitcast %uint %2452
       %2492 = OpBitwiseAnd %uint %2491 %uint_2139095040
       %2493 = OpINotEqual %bool %2492 %uint_0
       %2494 = OpBitwiseAnd %uint %2491 %uint_8388607
       %2495 = OpIEqual %bool %2494 %uint_0
       %2496 = OpLogicalOr %bool %2495 %2493
       %2497 = OpBitwiseAnd %uint %2491 %uint_2147483648
       %2498 = OpBitcast %float %2497
       %2499 = OpSelect %float %2496 %2452 %2498
       %2500 = OpFOrdEqual %v2bool %2490 %290
       %2501 = OpVectorShuffle %v2bool %2500 %292 1 4294967295
       %2502 = OpLogicalOr %v2bool %2501 %2500
       %2503 = OpCompositeExtract %bool %2502 0
       %2504 = OpLogicalNot %bool %2503
               OpSelectionMerge %2955 None
               OpBranchConditional %2504 %2507 %2955
       %2507 = OpLabel
       %2508 = OpFUnordNotEqual %bool %2499 %float_0
               OpSelectionMerge %2942 None
               OpBranchConditional %2508 %2511 %2942
       %2511 = OpLabel
       %2512 = OpBitcast %v2uint %2490
       %2513 = OpCompositeExtract %uint %2512 1
       %2514 = OpShiftRightLogical %uint %2513 %uint_23
       %2515 = OpBitwiseAnd %uint %2514 %uint_255
       %2516 = OpCompositeExtract %uint %2512 0
       %2517 = OpShiftRightLogical %uint %2516 %uint_23
       %2518 = OpBitwiseAnd %uint %2517 %uint_255
       %2519 = OpBitcast %uint %2499
       %2520 = OpShiftRightLogical %uint %2519 %uint_23
       %2521 = OpBitwiseAnd %uint %2520 %uint_255
       %2522 = OpIAdd %uint %2521 %uint_4294967169
       %2523 = OpBitwiseAnd %v2uint %2512 %272
       %2524 = OpBitwiseOr %v2uint %2523 %319
       %2525 = OpBitwiseAnd %uint %2519 %uint_2147483648
       %2526 = OpBitwiseXor %uint %2516 %2513
       %2527 = OpBitwiseAnd %uint %2526 %uint_2147483648
       %2528 = OpCompositeExtract %uint %2524 0
       %2529 = OpCompositeExtract %uint %2524 1
       %2530 = OpUMulExtended %_struct_58 %2529 %2528
       %2531 = OpCompositeExtract %uint %2530 1
       %2532 = OpIMul %uint %2528 %2529
       %2533 = OpShiftLeftLogical %uint %2531 %uint_14
       %2534 = OpShiftRightLogical %uint %2532 %uint_18
       %2535 = OpBitwiseOr %uint %2534 %2533
       %2536 = OpShiftLeftLogical %uint %2532 %uint_14
       %2537 = OpCompositeConstruct %v2uint %2536 %2535
       %2538 = OpBitwiseOr %uint %2535 %2536
       %2539 = OpIEqual %bool %2538 %uint_0
       %2540 = OpIAdd %uint %2515 %uint_4294967042
       %2541 = OpIAdd %uint %2540 %2518
       %2542 = OpSelect %uint %2539 %uint_0 %2541
       %2543 = OpBitwiseOr %uint %2542 %2538
       %2544 = OpINotEqual %bool %2543 %uint_0
               OpSelectionMerge %2939 None
               OpBranchConditional %2544 %2547 %2939
       %2547 = OpLabel
       %2548 = OpISub %uint %2542 %2522
       %2549 = OpShiftLeftLogical %uint %2519 %uint_5
       %2550 = OpBitwiseAnd %uint %2549 %uint_268435424
       %2551 = OpBitwiseOr %uint %2550 %uint_268435456
       %2552 = OpCompositeInsert %v2uint %2551 %355 1
       %2553 = OpExtInst %uint %184 SAbs %2548
       %2554 = OpINotEqual %bool %2553 %uint_0
               OpSelectionMerge %2581 None
               OpBranchConditional %2554 %2557 %2581
       %2557 = OpLabel
       %2558 = OpUGreaterThanEqual %bool %2553 %uint_32
               OpSelectionMerge %2566 None
               OpBranchConditional %2558 %2561 %2566
       %2561 = OpLabel
       %2562 = OpBitwiseAnd %uint %2553 %uint_31
       %2563 = OpShiftLeftLogical %uint %uint_1 %2562
       %2564 = OpCompositeInsert %v2uint %2563 %355 1
               OpBranch %2566
       %2566 = OpLabel
       %2567 = OpPhi %v2uint %2564 %2561 %528 %2557
       %2568 = OpPhi %bool %false %2561 %true %2557
               OpSelectionMerge %2578 None
               OpBranchConditional %2568 %2571 %2578
       %2571 = OpLabel
       %2572 = OpISub %uint %uint_0 %2553
       %2573 = OpBitwiseAnd %uint %2572 %uint_31
       %2574 = OpShiftRightLogical %uint %uint_1 %2573
       %2575 = OpShiftLeftLogical %uint %uint_1 %2553
       %2576 = OpCompositeConstruct %v2uint %2575 %2574
               OpBranch %2578
       %2578 = OpLabel
       %2579 = OpPhi %v2uint %2576 %2571 %2567 %2566
               OpBranch %2581
       %2581 = OpLabel
       %2582 = OpPhi %v2uint %7106 %2547 %2579 %2578
       %2583 = OpCompositeExtract %uint %2582 0
       %2584 = OpShiftRightLogical %uint %2583 %uint_1
       %2585 = OpIAdd %uint %2584 %uint_2147483647
       %2586 = OpBitwiseAnd %uint %2583 %uint_1
       %2587 = OpIAdd %uint %2585 %2586
       %2588 = OpShiftRightLogical %uint %2587 %uint_31
       %2589 = OpIAdd %uint %2583 %uint_4294967295
       %2590 = OpCompositeExtract %uint %2582 1
       %2591 = OpIAdd %uint %2590 %uint_4294967295
       %2592 = OpIAdd %uint %2591 %2588
       %2593 = OpCompositeConstruct %v2uint %2589 %2592
       %2594 = OpSLessThanEqual %bool %2548 %uint_0
               OpSelectionMerge %2646 None
               OpBranchConditional %2594 %2597 %2646
       %2597 = OpLabel
       %2598 = OpSGreaterThanEqual %bool %2548 %uint_4294967233
               OpSelectionMerge %2641 None
               OpBranchConditional %2598 %2601 %2641
       %2601 = OpLabel
       %2602 = OpISub %uint %uint_0 %2548
       %2603 = OpBitwiseAnd %v2uint %2593 %2537
       %2604 = OpINotEqual %bool %2542 %2522
               OpSelectionMerge %2636 None
               OpBranchConditional %2604 %2607 %2636
       %2607 = OpLabel
       %2608 = OpUGreaterThanEqual %bool %2602 %uint_32
               OpSelectionMerge %2616 None
               OpBranchConditional %2608 %2611 %2616
       %2611 = OpLabel
       %2612 = OpBitwiseAnd %uint %2602 %uint_31
       %2613 = OpShiftRightLogical %uint %2535 %2612
       %2614 = OpCompositeInsert %v2uint %2613 %420 0
               OpBranch %2616
       %2616 = OpLabel
       %2617 = OpPhi %v2uint %2552 %2611 %528 %2607
       %2618 = OpPhi %v2uint %2603 %2611 %528 %2607
       %2619 = OpPhi %v2uint %2614 %2611 %528 %2607
       %2620 = OpPhi %bool %false %2611 %true %2607
               OpSelectionMerge %2631 None
               OpBranchConditional %2620 %2623 %2631
       %2623 = OpLabel
       %2624 = OpShiftRightLogical %uint %2536 %2602
       %2625 = OpBitwiseAnd %uint %2548 %uint_31
       %2626 = OpShiftLeftLogical %uint %2535 %2625
       %2627 = OpBitwiseOr %uint %2626 %2624
       %2628 = OpShiftRightLogical %uint %2535 %2602
       %2629 = OpCompositeConstruct %v2uint %2627 %2628
               OpBranch %2631
       %2631 = OpLabel
       %2632 = OpPhi %v2uint %2552 %2623 %2617 %2616
       %2633 = OpPhi %v2uint %2603 %2623 %2618 %2616
       %2634 = OpPhi %v2uint %2629 %2623 %2619 %2616
               OpBranch %2636
       %2636 = OpLabel
       %2637 = OpPhi %v2uint %2632 %2631 %2552 %2601
       %2638 = OpPhi %v2uint %2633 %2631 %2603 %2601
       %2639 = OpPhi %v2uint %2634 %2631 %2537 %2601
               OpBranch %2641
       %2641 = OpLabel
       %2642 = OpPhi %v2uint %2637 %2636 %2552 %2597
       %2643 = OpPhi %v2uint %2638 %2636 %2537 %2597
       %2644 = OpPhi %v2uint %2639 %2636 %270 %2597
               OpBranch %2646
       %2646 = OpLabel
       %2647 = OpPhi %v2uint %2642 %2641 %528 %2581
       %2648 = OpPhi %v2uint %2643 %2641 %528 %2581
       %2649 = OpPhi %v2uint %2644 %2641 %528 %2581
       %2650 = OpPhi %bool %false %2641 %true %2581
               OpSelectionMerge %2692 None
               OpBranchConditional %2650 %2653 %2692
       %2653 = OpLabel
       %2654 = OpULessThanEqual %bool %2548 %uint_63
               OpSelectionMerge %2687 None
               OpBranchConditional %2654 %2657 %2687
       %2657 = OpLabel
       %2658 = OpBitwiseAnd %uint %2592 %2551
       %2659 = OpCompositeInsert %v2uint %2658 %355 1
       %2660 = OpUGreaterThanEqual %bool %2548 %uint_32
               OpSelectionMerge %2668 None
               OpBranchConditional %2660 %2663 %2668
       %2663 = OpLabel
       %2664 = OpBitwiseAnd %uint %2548 %uint_31
       %2665 = OpShiftRightLogical %uint %2551 %2664
       %2666 = OpCompositeInsert %v2uint %2665 %420 0
               OpBranch %2668
       %2668 = OpLabel
       %2669 = OpPhi %v2uint %2666 %2663 %528 %2657
       %2670 = OpPhi %v2uint %2659 %2663 %528 %2657
       %2671 = OpPhi %v2uint %2537 %2663 %528 %2657
       %2672 = OpPhi %bool %false %2663 %true %2657
               OpSelectionMerge %2682 None
               OpBranchConditional %2672 %2675 %2682
       %2675 = OpLabel
       %2676 = OpISub %uint %uint_0 %2548
       %2677 = OpBitwiseAnd %uint %2676 %uint_31
       %2678 = OpShiftLeftLogical %uint %2551 %2677
       %2679 = OpShiftRightLogical %uint %2551 %2548
       %2680 = OpCompositeConstruct %v2uint %2678 %2679
               OpBranch %2682
       %2682 = OpLabel
       %2683 = OpPhi %v2uint %2680 %2675 %2669 %2668
       %2684 = OpPhi %v2uint %2659 %2675 %2670 %2668
       %2685 = OpPhi %v2uint %2537 %2675 %2671 %2668
               OpBranch %2687
       %2687 = OpLabel
       %2688 = OpPhi %v2uint %2683 %2682 %270 %2653
       %2689 = OpPhi %v2uint %2684 %2682 %2552 %2653
       %2690 = OpPhi %v2uint %2685 %2682 %2537 %2653
               OpBranch %2692
       %2692 = OpLabel
       %2693 = OpPhi %v2uint %2649 %2646 %2690 %2687
       %2694 = OpPhi %v2uint %2648 %2646 %2689 %2687
       %2695 = OpPhi %v2uint %2647 %2646 %2688 %2687
       %2696 = OpExtInst %uint %184 SMax %2542 %2522
       %2697 = OpINotEqual %bool %2525 %2527
               OpSelectionMerge %2744 None
               OpBranchConditional %2697 %2700 %2744
       %2700 = OpLabel
       %2701 = OpCompositeExtract %uint %2695 0
       %2702 = OpBitwiseXor %uint %2701 %uint_4294967295
       %2703 = OpCompositeExtract %uint %2695 1
       %2704 = OpBitwiseXor %uint %2703 %uint_4294967295
       %2705 = OpShiftRightLogical %uint %2702 %uint_1
       %2706 = OpBitwiseAnd %uint %2702 %uint_1
       %2707 = OpIAdd %uint %2705 %2706
       %2708 = OpShiftRightLogical %uint %2707 %uint_31
       %2709 = OpISub %uint %uint_0 %2701
       %2710 = OpCompositeExtract %uint %2693 0
       %2711 = OpShiftRightLogical %uint %2710 %uint_1
       %2712 = OpShiftRightLogical %uint %2709 %uint_1
       %2713 = OpIAdd %uint %2712 %2711
       %2714 = OpBitwiseAnd %uint %2710 %uint_1
       %2715 = OpBitwiseAnd %uint %2714 %2709
       %2716 = OpIAdd %uint %2713 %2715
       %2717 = OpShiftRightLogical %uint %2716 %uint_31
       %2718 = OpISub %uint %2710 %2701
       %2719 = OpCompositeExtract %uint %2693 1
       %2720 = OpVectorShuffle %v2uint %2694 %528 1 4294967295
       %2721 = OpBitwiseOr %v2uint %2720 %2694
       %2722 = OpCompositeExtract %uint %2721 0
       %2723 = OpINotEqual %bool %2722 %uint_0
       %2724 = OpSGreaterThan %bool %2542 %2522
       %2725 = OpSelect %bool %2723 %2724 %false
       %2726 = OpSelect %v2uint %2725 %536 %270
       %2727 = OpCompositeExtract %uint %2726 0
       %2728 = OpShiftRightLogical %uint %2718 %uint_1
       %2729 = OpShiftRightLogical %uint %2727 %uint_1
       %2730 = OpIAdd %uint %2729 %2728
       %2731 = OpBitwiseAnd %uint %2718 %uint_1
       %2732 = OpBitwiseAnd %uint %2731 %2727
       %2733 = OpIAdd %uint %2730 %2732
       %2734 = OpShiftRightLogical %uint %2733 %uint_31
       %2735 = OpIAdd %uint %2727 %2718
       %2736 = OpCompositeExtract %uint %2726 1
       %2737 = OpIAdd %uint %2719 %2704
       %2738 = OpIAdd %uint %2737 %2708
       %2739 = OpIAdd %uint %2738 %2717
       %2740 = OpIAdd %uint %2739 %2736
       %2741 = OpIAdd %uint %2740 %2734
       %2742 = OpCompositeConstruct %v2uint %2735 %2741
               OpBranch %2744
       %2744 = OpLabel
       %2745 = OpPhi %v2uint %2742 %2700 %528 %2692
       %2746 = OpPhi %bool %false %2700 %true %2692
               OpSelectionMerge %2765 None
               OpBranchConditional %2746 %2749 %2765
       %2749 = OpLabel
       %2750 = OpCompositeExtract %uint %2693 0
       %2751 = OpCompositeExtract %uint %2695 0
       %2752 = OpShiftRightLogical %uint %2750 %uint_1
       %2753 = OpShiftRightLogical %uint %2751 %uint_1
       %2754 = OpIAdd %uint %2753 %2752
       %2755 = OpBitwiseAnd %uint %2750 %uint_1
       %2756 = OpBitwiseAnd %uint %2755 %2751
       %2757 = OpIAdd %uint %2754 %2756
       %2758 = OpShiftRightLogical %uint %2757 %uint_31
       %2759 = OpIAdd %uint %2751 %2750
       %2760 = OpIAdd %v2uint %2695 %2693
       %2761 = OpCompositeExtract %uint %2760 1
       %2762 = OpIAdd %uint %2758 %2761
       %2763 = OpCompositeConstruct %v2uint %2759 %2762
               OpBranch %2765
       %2765 = OpLabel
       %2766 = OpPhi %v2uint %2763 %2749 %2745 %2744
       %2767 = OpCompositeExtract %uint %2766 1
       %2768 = OpSLessThan %bool %2767 %uint_0
               OpSelectionMerge %2784 None
               OpBranchConditional %2768 %2771 %2784
       %2771 = OpLabel
       %2772 = OpCompositeExtract %uint %2766 0
       %2773 = OpBitwiseXor %uint %2772 %uint_4294967295
       %2774 = OpBitwiseXor %uint %2767 %uint_4294967295
       %2775 = OpShiftRightLogical %uint %2773 %uint_1
       %2776 = OpBitwiseAnd %uint %2773 %uint_1
       %2777 = OpIAdd %uint %2775 %2776
       %2778 = OpShiftRightLogical %uint %2777 %uint_31
       %2779 = OpISub %uint %uint_0 %2772
       %2780 = OpIAdd %uint %2778 %2774
       %2781 = OpCompositeConstruct %v2uint %2779 %2780
       %2782 = OpBitwiseXor %uint %2527 %uint_2147483648
               OpBranch %2784
       %2784 = OpLabel
       %2785 = OpPhi %uint %2782 %2771 %2527 %2765
       %2786 = OpPhi %v2uint %2781 %2771 %2766 %2765
       %2787 = OpCompositeExtract %uint %2786 1
       %2788 = OpExtInst %uint %184 FindUMsb %2787
       %2789 = OpISub %uint %uint_31 %2788
       %2790 = OpIEqual %bool %2787 %uint_0
       %2791 = OpCompositeExtract %uint %2786 0
       %2792 = OpExtInst %uint %184 FindUMsb %2791
       %2793 = OpISub %uint %uint_31 %2792
       %2794 = OpIAdd %uint %2793 %uint_32
       %2795 = OpSelect %uint %2790 %2794 %2789
       %2796 = OpISub %uint %uint_3 %2795
       %2797 = OpIAdd %uint %2796 %2696
       %2798 = OpUGreaterThan %bool %2795 %uint_3
               OpSelectionMerge %2829 None
               OpBranchConditional %2798 %2801 %2829
       %2801 = OpLabel
       %2802 = OpIAdd %uint %2795 %uint_4294967293
       %2803 = OpUGreaterThanEqual %bool %2802 %uint_32
               OpSelectionMerge %2811 None
               OpBranchConditional %2803 %2806 %2811
       %2806 = OpLabel
       %2807 = OpBitwiseAnd %uint %2802 %uint_31
       %2808 = OpShiftLeftLogical %uint %2791 %2807
       %2809 = OpCompositeInsert %v2uint %2808 %355 1
               OpBranch %2811
       %2811 = OpLabel
       %2812 = OpPhi %uint %uint_0 %2806 %354 %2801
       %2813 = OpPhi %v2uint %2809 %2806 %528 %2801
       %2814 = OpPhi %bool %false %2806 %true %2801
               OpSelectionMerge %2825 None
               OpBranchConditional %2814 %2817 %2825
       %2817 = OpLabel
       %2818 = OpShiftLeftLogical %uint %2787 %2802
       %2819 = OpBitwiseAnd %uint %2796 %uint_31
       %2820 = OpShiftRightLogical %uint %2791 %2819
       %2821 = OpBitwiseOr %uint %2820 %2818
       %2822 = OpShiftLeftLogical %uint %2791 %2802
       %2823 = OpCompositeConstruct %v2uint %2822 %2821
               OpBranch %2825
       %2825 = OpLabel
       %2826 = OpPhi %uint %uint_0 %2817 %2812 %2811
       %2827 = OpPhi %v2uint %2823 %2817 %2813 %2811
               OpBranch %2829
       %2829 = OpLabel
       %2830 = OpPhi %v2uint %2786 %2784 %2827 %2825
       %2831 = OpPhi %uint %2796 %2784 %2826 %2825
       %2832 = OpIAdd %uint %2831 %uint_5
       %2833 = OpBitwiseAnd %uint %2832 %uint_31
       %2834 = OpShiftLeftLogical %uint %uint_1 %2833
       %2835 = OpCompositeInsert %v2uint %2834 %355 1
       %2836 = OpIAdd %uint %2834 %uint_4294967295
       %2837 = OpCompositeInsert %v2uint %2836 %650 1
       %2838 = OpBitwiseAnd %v2uint %2837 %2830
       %2839 = OpCompositeExtract %uint %2838 1
       %2840 = OpBitwiseAnd %v2uint %2835 %2830
       %2841 = OpIAdd %uint %2831 %uint_2
       %2842 = OpBitwiseAnd %uint %2841 %uint_31
       %2843 = OpShiftLeftLogical %uint %uint_4 %2842
       %2844 = OpUGreaterThan %bool %2839 %2843
       %2845 = OpLogicalNot %bool %2844
               OpSelectionMerge %2876 None
               OpBranchConditional %2845 %2848 %2876
       %2848 = OpLabel
       %2849 = OpCompositeExtract %uint %2838 0
       %2850 = OpVectorShuffle %v2uint %2694 %528 1 4294967295
       %2851 = OpBitwiseOr %v2uint %2850 %2694
       %2852 = OpCompositeExtract %uint %2851 0
       %2853 = OpINotEqual %bool %2852 %uint_0
       %2854 = OpSelect %uint %2853 %uint_1 %uint_0
       %2855 = OpBitwiseOr %uint %2849 %2854
       %2856 = OpIEqual %bool %2839 %2843
       %2857 = OpINotEqual %bool %2855 %uint_0
       %2858 = OpSelect %bool %2856 %2857 %false
       %2859 = OpLogicalNot %bool %2858
               OpSelectionMerge %2872 None
               OpBranchConditional %2859 %2862 %2872
       %2862 = OpLabel
       %2863 = OpINotEqual %bool %2839 %2843
       %2864 = OpLogicalOr %bool %2863 %2857
       %2865 = OpVectorShuffle %v2uint %2840 %528 1 4294967295
       %2866 = OpBitwiseOr %v2uint %2865 %2840
       %2867 = OpCompositeExtract %uint %2866 0
       %2868 = OpIEqual %bool %2867 %uint_0
       %2869 = OpSelect %bool %2864 %true %2868
       %2870 = OpLogicalNot %bool %2869
               OpBranch %2872
       %2872 = OpLabel
       %2873 = OpPhi %v2uint %2830 %2862 %528 %2848
       %2874 = OpPhi %bool %2870 %2862 %2858 %2848
               OpBranch %2876
       %2876 = OpLabel
       %2877 = OpPhi %v2uint %2873 %2872 %528 %2829
       %2878 = OpPhi %bool %2874 %2872 %2844 %2829
               OpSelectionMerge %2886 None
               OpBranchConditional %2878 %2881 %2886
       %2881 = OpLabel
       %2882 = OpCompositeExtract %uint %2830 1
       %2883 = OpIAdd %uint %2834 %2882
       %2884 = OpCompositeInsert %v2uint %2883 %2830 1
               OpBranch %2886
       %2886 = OpLabel
       %2887 = OpPhi %v2uint %2884 %2881 %2877 %2876
       %2888 = OpCompositeExtract %uint %2887 1
       %2889 = OpShiftRightLogical %uint %2888 %2833
       %2890 = OpUGreaterThan %bool %2889 %uint_16777215
       %2891 = OpSelect %uint %2890 %uint_1 %uint_0
       %2892 = OpShiftRightLogical %uint %2889 %2891
       %2893 = OpIAdd %uint %2797 %2891
       %2894 = OpINotEqual %bool %2892 %uint_0
               OpSelectionMerge %2936 None
               OpBranchConditional %2894 %2897 %2936
       %2897 = OpLabel
       %2898 = OpSLessThanEqual %bool %2893 %uint_127
               OpSelectionMerge %2924 None
               OpBranchConditional %2898 %2901 %2924
       %2901 = OpLabel
       %2902 = OpSGreaterThanEqual %bool %2893 %uint_4294967170
               OpSelectionMerge %2913 None
               OpBranchConditional %2902 %2905 %2913
       %2905 = OpLabel
       %2906 = OpShiftLeftLogical %uint %2893 %uint_23
       %2907 = OpIAdd %uint %2906 %uint_1065353216
       %2908 = OpBitwiseAnd %uint %2892 %uint_8388607
       %2909 = OpBitwiseOr %uint %2907 %2908
       %2910 = OpBitwiseOr %uint %2909 %2785
       %2911 = OpBitcast %float %2910
               OpBranch %2913
       %2913 = OpLabel
       %2914 = OpPhi %float %2911 %2905 %261 %2901
       %2915 = OpPhi %bool %false %2905 %true %2901
               OpSelectionMerge %2921 None
               OpBranchConditional %2915 %2918 %2921
       %2918 = OpLabel
       %2919 = OpBitcast %float %2785
               OpBranch %2921
       %2921 = OpLabel
       %2922 = OpPhi %float %2919 %2918 %2914 %2913
               OpBranch %2924
       %2924 = OpLabel
       %2925 = OpPhi %float %2922 %2921 %261 %2897
       %2926 = OpPhi %bool %false %2921 %true %2897
               OpSelectionMerge %2933 None
               OpBranchConditional %2926 %2929 %2933
       %2929 = OpLabel
       %2930 = OpBitwiseOr %uint %2785 %uint_2139095040
       %2931 = OpBitcast %float %2930
               OpBranch %2933
       %2933 = OpLabel
       %2934 = OpPhi %float %2931 %2929 %2925 %2924
               OpBranch %2936
       %2936 = OpLabel
       %2937 = OpPhi %float %2934 %2933 %float_0 %2886
               OpBranch %2939
       %2939 = OpLabel
       %2940 = OpPhi %float %2937 %2936 %2499 %2511
               OpBranch %2942
       %2942 = OpLabel
       %2943 = OpPhi %float %2940 %2939 %261 %2507
       %2944 = OpPhi %bool %false %2939 %true %2507
               OpSelectionMerge %2952 None
               OpBranchConditional %2944 %2947 %2952
       %2947 = OpLabel
       %2948 = OpVectorShuffle %v2float %2490 %768 1 4294967295
       %2949 = OpFMul %v2float %2490 %2948
       %2950 = OpCompositeExtract %float %2949 0
               OpBranch %2952
       %2952 = OpLabel
       %2953 = OpPhi %float %2950 %2947 %2943 %2942
               OpBranch %2955
       %2955 = OpLabel
       %2956 = OpPhi %float %2953 %2952 %2499 %2480
               OpBranch %2958
       %2958 = OpLabel
       %2959 = OpPhi %float %2956 %2955 %2452 %2475
               OpBranch %2961
       %2961 = OpLabel
       %2962 = OpPhi %float %2959 %2958 %261 %2470
       %2963 = OpPhi %bool %false %2958 %true %2470
               OpBranch %2965
       %2965 = OpLabel
       %2966 = OpPhi %float %2962 %2961 %261 %2465
       %2967 = OpPhi %bool %2963 %2961 %2466 %2465
               OpBranch %2969
       %2969 = OpLabel
       %2970 = OpPhi %float %2966 %2965 %261 %2460
       %2971 = OpPhi %bool %2967 %2965 %2461 %2460
               OpBranch %2973
       %2973 = OpLabel
       %2974 = OpPhi %float %2970 %2969 %261 %2455
       %2975 = OpPhi %bool %2971 %2969 %2456 %2455
               OpBranch %2977
       %2977 = OpLabel
       %2978 = OpPhi %float %2974 %2973 %261 %2444
       %2979 = OpPhi %bool %2975 %2973 %1910 %2444
               OpSelectionMerge %2985 None
               OpBranchConditional %2979 %2982 %2985
       %2982 = OpLabel
       %2983 = OpFSub %float %2451 %2451
               OpBranch %2985
       %2985 = OpLabel
       %2986 = OpPhi %float %2983 %2982 %2978 %2977
       %2987 = OpFSub %float %2450 %2451
       %2988 = OpFSub %float %2450 %2987
       %2989 = OpFSub %float %2988 %2451
       %2990 = OpFSub %float %2989 %2986
       %2991 = OpFAdd %float %2987 %2990
       %2993 = OpFMul %float %1907 %float_5_39030253en15
       %2994 = OpFNegate %float %2993
               OpSelectionMerge %3520 None
               OpBranchConditional %1911 %2997 %3520
       %2997 = OpLabel
       %2998 = OpIsNan %bool %float_5_39030253en15
       %2999 = OpLogicalNot %bool %2998
               OpSelectionMerge %3516 None
               OpBranchConditional %2999 %3002 %3516
       %3002 = OpLabel
       %3003 = OpIsNan %bool %2994
       %3004 = OpLogicalNot %bool %3003
               OpSelectionMerge %3512 None
               OpBranchConditional %3004 %3007 %3512
       %3007 = OpLabel
       %3008 = OpIsInf %bool %1907
       %3009 = OpLogicalNot %bool %3008
               OpSelectionMerge %3508 None
               OpBranchConditional %3009 %3012 %3508
       %3012 = OpLabel
       %3013 = OpIsInf %bool %float_5_39030253en15
       %3014 = OpLogicalNot %bool %3013
               OpSelectionMerge %3504 None
               OpBranchConditional %3014 %3017 %3504
       %3017 = OpLabel
       %3018 = OpIsInf %bool %2994
       %3019 = OpLogicalNot %bool %3018
               OpSelectionMerge %3501 None
               OpBranchConditional %3019 %3022 %3501
       %3022 = OpLabel
       %3024 = OpCompositeInsert %v2float %1907 %3023 1
       %3025 = OpBitcast %v2uint %3024
       %3026 = OpBitwiseAnd %v2uint %3025 %267
       %3027 = OpINotEqual %v2bool %3026 %270
       %3028 = OpBitwiseAnd %v2uint %3025 %272
       %3029 = OpIEqual %v2bool %3028 %270
       %3030 = OpLogicalOr %v2bool %3029 %3027
       %3031 = OpBitwiseAnd %v2uint %3025 %277
       %3032 = OpBitcast %v2float %3031
       %3033 = OpSelect %v2float %3030 %3024 %3032
       %3034 = OpBitcast %uint %2994
       %3035 = OpBitwiseAnd %uint %3034 %uint_2139095040
       %3036 = OpINotEqual %bool %3035 %uint_0
       %3037 = OpBitwiseAnd %uint %3034 %uint_8388607
       %3038 = OpIEqual %bool %3037 %uint_0
       %3039 = OpLogicalOr %bool %3038 %3036
       %3040 = OpBitwiseAnd %uint %3034 %uint_2147483648
       %3041 = OpBitcast %float %3040
       %3042 = OpSelect %float %3039 %2994 %3041
       %3043 = OpFOrdEqual %v2bool %3033 %290
       %3044 = OpVectorShuffle %v2bool %3043 %292 1 4294967295
       %3045 = OpLogicalOr %v2bool %3044 %3043
       %3046 = OpCompositeExtract %bool %3045 0
       %3047 = OpLogicalNot %bool %3046
               OpSelectionMerge %3498 None
               OpBranchConditional %3047 %3050 %3498
       %3050 = OpLabel
       %3051 = OpFUnordNotEqual %bool %3042 %float_0
               OpSelectionMerge %3485 None
               OpBranchConditional %3051 %3054 %3485
       %3054 = OpLabel
       %3055 = OpBitcast %v2uint %3033
       %3056 = OpCompositeExtract %uint %3055 1
       %3057 = OpShiftRightLogical %uint %3056 %uint_23
       %3058 = OpBitwiseAnd %uint %3057 %uint_255
       %3059 = OpCompositeExtract %uint %3055 0
       %3060 = OpShiftRightLogical %uint %3059 %uint_23
       %3061 = OpBitwiseAnd %uint %3060 %uint_255
       %3062 = OpBitcast %uint %3042
       %3063 = OpShiftRightLogical %uint %3062 %uint_23
       %3064 = OpBitwiseAnd %uint %3063 %uint_255
       %3065 = OpIAdd %uint %3064 %uint_4294967169
       %3066 = OpBitwiseAnd %v2uint %3055 %272
       %3067 = OpBitwiseOr %v2uint %3066 %319
       %3068 = OpBitwiseAnd %uint %3062 %uint_2147483648
       %3069 = OpBitwiseXor %uint %3059 %3056
       %3070 = OpBitwiseAnd %uint %3069 %uint_2147483648
       %3071 = OpCompositeExtract %uint %3067 0
       %3072 = OpCompositeExtract %uint %3067 1
       %3073 = OpUMulExtended %_struct_58 %3072 %3071
       %3074 = OpCompositeExtract %uint %3073 1
       %3075 = OpIMul %uint %3071 %3072
       %3076 = OpShiftLeftLogical %uint %3074 %uint_14
       %3077 = OpShiftRightLogical %uint %3075 %uint_18
       %3078 = OpBitwiseOr %uint %3077 %3076
       %3079 = OpShiftLeftLogical %uint %3075 %uint_14
       %3080 = OpCompositeConstruct %v2uint %3079 %3078
       %3081 = OpBitwiseOr %uint %3078 %3079
       %3082 = OpIEqual %bool %3081 %uint_0
       %3083 = OpIAdd %uint %3058 %uint_4294967042
       %3084 = OpIAdd %uint %3083 %3061
       %3085 = OpSelect %uint %3082 %uint_0 %3084
       %3086 = OpBitwiseOr %uint %3085 %3081
       %3087 = OpINotEqual %bool %3086 %uint_0
               OpSelectionMerge %3482 None
               OpBranchConditional %3087 %3090 %3482
       %3090 = OpLabel
       %3091 = OpISub %uint %3085 %3065
       %3092 = OpShiftLeftLogical %uint %3062 %uint_5
       %3093 = OpBitwiseAnd %uint %3092 %uint_268435424
       %3094 = OpBitwiseOr %uint %3093 %uint_268435456
       %3095 = OpCompositeInsert %v2uint %3094 %355 1
       %3096 = OpExtInst %uint %184 SAbs %3091
       %3097 = OpINotEqual %bool %3096 %uint_0
               OpSelectionMerge %3124 None
               OpBranchConditional %3097 %3100 %3124
       %3100 = OpLabel
       %3101 = OpUGreaterThanEqual %bool %3096 %uint_32
               OpSelectionMerge %3109 None
               OpBranchConditional %3101 %3104 %3109
       %3104 = OpLabel
       %3105 = OpBitwiseAnd %uint %3096 %uint_31
       %3106 = OpShiftLeftLogical %uint %uint_1 %3105
       %3107 = OpCompositeInsert %v2uint %3106 %355 1
               OpBranch %3109
       %3109 = OpLabel
       %3110 = OpPhi %v2uint %3107 %3104 %528 %3100
       %3111 = OpPhi %bool %false %3104 %true %3100
               OpSelectionMerge %3121 None
               OpBranchConditional %3111 %3114 %3121
       %3114 = OpLabel
       %3115 = OpISub %uint %uint_0 %3096
       %3116 = OpBitwiseAnd %uint %3115 %uint_31
       %3117 = OpShiftRightLogical %uint %uint_1 %3116
       %3118 = OpShiftLeftLogical %uint %uint_1 %3096
       %3119 = OpCompositeConstruct %v2uint %3118 %3117
               OpBranch %3121
       %3121 = OpLabel
       %3122 = OpPhi %v2uint %3119 %3114 %3110 %3109
               OpBranch %3124
       %3124 = OpLabel
       %3125 = OpPhi %v2uint %7106 %3090 %3122 %3121
       %3126 = OpCompositeExtract %uint %3125 0
       %3127 = OpShiftRightLogical %uint %3126 %uint_1
       %3128 = OpIAdd %uint %3127 %uint_2147483647
       %3129 = OpBitwiseAnd %uint %3126 %uint_1
       %3130 = OpIAdd %uint %3128 %3129
       %3131 = OpShiftRightLogical %uint %3130 %uint_31
       %3132 = OpIAdd %uint %3126 %uint_4294967295
       %3133 = OpCompositeExtract %uint %3125 1
       %3134 = OpIAdd %uint %3133 %uint_4294967295
       %3135 = OpIAdd %uint %3134 %3131
       %3136 = OpCompositeConstruct %v2uint %3132 %3135
       %3137 = OpSLessThanEqual %bool %3091 %uint_0
               OpSelectionMerge %3189 None
               OpBranchConditional %3137 %3140 %3189
       %3140 = OpLabel
       %3141 = OpSGreaterThanEqual %bool %3091 %uint_4294967233
               OpSelectionMerge %3184 None
               OpBranchConditional %3141 %3144 %3184
       %3144 = OpLabel
       %3145 = OpISub %uint %uint_0 %3091
       %3146 = OpBitwiseAnd %v2uint %3136 %3080
       %3147 = OpINotEqual %bool %3085 %3065
               OpSelectionMerge %3179 None
               OpBranchConditional %3147 %3150 %3179
       %3150 = OpLabel
       %3151 = OpUGreaterThanEqual %bool %3145 %uint_32
               OpSelectionMerge %3159 None
               OpBranchConditional %3151 %3154 %3159
       %3154 = OpLabel
       %3155 = OpBitwiseAnd %uint %3145 %uint_31
       %3156 = OpShiftRightLogical %uint %3078 %3155
       %3157 = OpCompositeInsert %v2uint %3156 %420 0
               OpBranch %3159
       %3159 = OpLabel
       %3160 = OpPhi %v2uint %3095 %3154 %528 %3150
       %3161 = OpPhi %v2uint %3146 %3154 %528 %3150
       %3162 = OpPhi %v2uint %3157 %3154 %528 %3150
       %3163 = OpPhi %bool %false %3154 %true %3150
               OpSelectionMerge %3174 None
               OpBranchConditional %3163 %3166 %3174
       %3166 = OpLabel
       %3167 = OpShiftRightLogical %uint %3079 %3145
       %3168 = OpBitwiseAnd %uint %3091 %uint_31
       %3169 = OpShiftLeftLogical %uint %3078 %3168
       %3170 = OpBitwiseOr %uint %3169 %3167
       %3171 = OpShiftRightLogical %uint %3078 %3145
       %3172 = OpCompositeConstruct %v2uint %3170 %3171
               OpBranch %3174
       %3174 = OpLabel
       %3175 = OpPhi %v2uint %3095 %3166 %3160 %3159
       %3176 = OpPhi %v2uint %3146 %3166 %3161 %3159
       %3177 = OpPhi %v2uint %3172 %3166 %3162 %3159
               OpBranch %3179
       %3179 = OpLabel
       %3180 = OpPhi %v2uint %3175 %3174 %3095 %3144
       %3181 = OpPhi %v2uint %3176 %3174 %3146 %3144
       %3182 = OpPhi %v2uint %3177 %3174 %3080 %3144
               OpBranch %3184
       %3184 = OpLabel
       %3185 = OpPhi %v2uint %3180 %3179 %3095 %3140
       %3186 = OpPhi %v2uint %3181 %3179 %3080 %3140
       %3187 = OpPhi %v2uint %3182 %3179 %270 %3140
               OpBranch %3189
       %3189 = OpLabel
       %3190 = OpPhi %v2uint %3185 %3184 %528 %3124
       %3191 = OpPhi %v2uint %3186 %3184 %528 %3124
       %3192 = OpPhi %v2uint %3187 %3184 %528 %3124
       %3193 = OpPhi %bool %false %3184 %true %3124
               OpSelectionMerge %3235 None
               OpBranchConditional %3193 %3196 %3235
       %3196 = OpLabel
       %3197 = OpULessThanEqual %bool %3091 %uint_63
               OpSelectionMerge %3230 None
               OpBranchConditional %3197 %3200 %3230
       %3200 = OpLabel
       %3201 = OpBitwiseAnd %uint %3135 %3094
       %3202 = OpCompositeInsert %v2uint %3201 %355 1
       %3203 = OpUGreaterThanEqual %bool %3091 %uint_32
               OpSelectionMerge %3211 None
               OpBranchConditional %3203 %3206 %3211
       %3206 = OpLabel
       %3207 = OpBitwiseAnd %uint %3091 %uint_31
       %3208 = OpShiftRightLogical %uint %3094 %3207
       %3209 = OpCompositeInsert %v2uint %3208 %420 0
               OpBranch %3211
       %3211 = OpLabel
       %3212 = OpPhi %v2uint %3209 %3206 %528 %3200
       %3213 = OpPhi %v2uint %3202 %3206 %528 %3200
       %3214 = OpPhi %v2uint %3080 %3206 %528 %3200
       %3215 = OpPhi %bool %false %3206 %true %3200
               OpSelectionMerge %3225 None
               OpBranchConditional %3215 %3218 %3225
       %3218 = OpLabel
       %3219 = OpISub %uint %uint_0 %3091
       %3220 = OpBitwiseAnd %uint %3219 %uint_31
       %3221 = OpShiftLeftLogical %uint %3094 %3220
       %3222 = OpShiftRightLogical %uint %3094 %3091
       %3223 = OpCompositeConstruct %v2uint %3221 %3222
               OpBranch %3225
       %3225 = OpLabel
       %3226 = OpPhi %v2uint %3223 %3218 %3212 %3211
       %3227 = OpPhi %v2uint %3202 %3218 %3213 %3211
       %3228 = OpPhi %v2uint %3080 %3218 %3214 %3211
               OpBranch %3230
       %3230 = OpLabel
       %3231 = OpPhi %v2uint %3226 %3225 %270 %3196
       %3232 = OpPhi %v2uint %3227 %3225 %3095 %3196
       %3233 = OpPhi %v2uint %3228 %3225 %3080 %3196
               OpBranch %3235
       %3235 = OpLabel
       %3236 = OpPhi %v2uint %3192 %3189 %3233 %3230
       %3237 = OpPhi %v2uint %3191 %3189 %3232 %3230
       %3238 = OpPhi %v2uint %3190 %3189 %3231 %3230
       %3239 = OpExtInst %uint %184 SMax %3085 %3065
       %3240 = OpINotEqual %bool %3068 %3070
               OpSelectionMerge %3287 None
               OpBranchConditional %3240 %3243 %3287
       %3243 = OpLabel
       %3244 = OpCompositeExtract %uint %3238 0
       %3245 = OpBitwiseXor %uint %3244 %uint_4294967295
       %3246 = OpCompositeExtract %uint %3238 1
       %3247 = OpBitwiseXor %uint %3246 %uint_4294967295
       %3248 = OpShiftRightLogical %uint %3245 %uint_1
       %3249 = OpBitwiseAnd %uint %3245 %uint_1
       %3250 = OpIAdd %uint %3248 %3249
       %3251 = OpShiftRightLogical %uint %3250 %uint_31
       %3252 = OpISub %uint %uint_0 %3244
       %3253 = OpCompositeExtract %uint %3236 0
       %3254 = OpShiftRightLogical %uint %3253 %uint_1
       %3255 = OpShiftRightLogical %uint %3252 %uint_1
       %3256 = OpIAdd %uint %3255 %3254
       %3257 = OpBitwiseAnd %uint %3253 %uint_1
       %3258 = OpBitwiseAnd %uint %3257 %3252
       %3259 = OpIAdd %uint %3256 %3258
       %3260 = OpShiftRightLogical %uint %3259 %uint_31
       %3261 = OpISub %uint %3253 %3244
       %3262 = OpCompositeExtract %uint %3236 1
       %3263 = OpVectorShuffle %v2uint %3237 %528 1 4294967295
       %3264 = OpBitwiseOr %v2uint %3263 %3237
       %3265 = OpCompositeExtract %uint %3264 0
       %3266 = OpINotEqual %bool %3265 %uint_0
       %3267 = OpSGreaterThan %bool %3085 %3065
       %3268 = OpSelect %bool %3266 %3267 %false
       %3269 = OpSelect %v2uint %3268 %536 %270
       %3270 = OpCompositeExtract %uint %3269 0
       %3271 = OpShiftRightLogical %uint %3261 %uint_1
       %3272 = OpShiftRightLogical %uint %3270 %uint_1
       %3273 = OpIAdd %uint %3272 %3271
       %3274 = OpBitwiseAnd %uint %3261 %uint_1
       %3275 = OpBitwiseAnd %uint %3274 %3270
       %3276 = OpIAdd %uint %3273 %3275
       %3277 = OpShiftRightLogical %uint %3276 %uint_31
       %3278 = OpIAdd %uint %3270 %3261
       %3279 = OpCompositeExtract %uint %3269 1
       %3280 = OpIAdd %uint %3262 %3247
       %3281 = OpIAdd %uint %3280 %3251
       %3282 = OpIAdd %uint %3281 %3260
       %3283 = OpIAdd %uint %3282 %3279
       %3284 = OpIAdd %uint %3283 %3277
       %3285 = OpCompositeConstruct %v2uint %3278 %3284
               OpBranch %3287
       %3287 = OpLabel
       %3288 = OpPhi %v2uint %3285 %3243 %528 %3235
       %3289 = OpPhi %bool %false %3243 %true %3235
               OpSelectionMerge %3308 None
               OpBranchConditional %3289 %3292 %3308
       %3292 = OpLabel
       %3293 = OpCompositeExtract %uint %3236 0
       %3294 = OpCompositeExtract %uint %3238 0
       %3295 = OpShiftRightLogical %uint %3293 %uint_1
       %3296 = OpShiftRightLogical %uint %3294 %uint_1
       %3297 = OpIAdd %uint %3296 %3295
       %3298 = OpBitwiseAnd %uint %3293 %uint_1
       %3299 = OpBitwiseAnd %uint %3298 %3294
       %3300 = OpIAdd %uint %3297 %3299
       %3301 = OpShiftRightLogical %uint %3300 %uint_31
       %3302 = OpIAdd %uint %3294 %3293
       %3303 = OpIAdd %v2uint %3238 %3236
       %3304 = OpCompositeExtract %uint %3303 1
       %3305 = OpIAdd %uint %3301 %3304
       %3306 = OpCompositeConstruct %v2uint %3302 %3305
               OpBranch %3308
       %3308 = OpLabel
       %3309 = OpPhi %v2uint %3306 %3292 %3288 %3287
       %3310 = OpCompositeExtract %uint %3309 1
       %3311 = OpSLessThan %bool %3310 %uint_0
               OpSelectionMerge %3327 None
               OpBranchConditional %3311 %3314 %3327
       %3314 = OpLabel
       %3315 = OpCompositeExtract %uint %3309 0
       %3316 = OpBitwiseXor %uint %3315 %uint_4294967295
       %3317 = OpBitwiseXor %uint %3310 %uint_4294967295
       %3318 = OpShiftRightLogical %uint %3316 %uint_1
       %3319 = OpBitwiseAnd %uint %3316 %uint_1
       %3320 = OpIAdd %uint %3318 %3319
       %3321 = OpShiftRightLogical %uint %3320 %uint_31
       %3322 = OpISub %uint %uint_0 %3315
       %3323 = OpIAdd %uint %3321 %3317
       %3324 = OpCompositeConstruct %v2uint %3322 %3323
       %3325 = OpBitwiseXor %uint %3070 %uint_2147483648
               OpBranch %3327
       %3327 = OpLabel
       %3328 = OpPhi %uint %3325 %3314 %3070 %3308
       %3329 = OpPhi %v2uint %3324 %3314 %3309 %3308
       %3330 = OpCompositeExtract %uint %3329 1
       %3331 = OpExtInst %uint %184 FindUMsb %3330
       %3332 = OpISub %uint %uint_31 %3331
       %3333 = OpIEqual %bool %3330 %uint_0
       %3334 = OpCompositeExtract %uint %3329 0
       %3335 = OpExtInst %uint %184 FindUMsb %3334
       %3336 = OpISub %uint %uint_31 %3335
       %3337 = OpIAdd %uint %3336 %uint_32
       %3338 = OpSelect %uint %3333 %3337 %3332
       %3339 = OpISub %uint %uint_3 %3338
       %3340 = OpIAdd %uint %3339 %3239
       %3341 = OpUGreaterThan %bool %3338 %uint_3
               OpSelectionMerge %3372 None
               OpBranchConditional %3341 %3344 %3372
       %3344 = OpLabel
       %3345 = OpIAdd %uint %3338 %uint_4294967293
       %3346 = OpUGreaterThanEqual %bool %3345 %uint_32
               OpSelectionMerge %3354 None
               OpBranchConditional %3346 %3349 %3354
       %3349 = OpLabel
       %3350 = OpBitwiseAnd %uint %3345 %uint_31
       %3351 = OpShiftLeftLogical %uint %3334 %3350
       %3352 = OpCompositeInsert %v2uint %3351 %355 1
               OpBranch %3354
       %3354 = OpLabel
       %3355 = OpPhi %uint %uint_0 %3349 %354 %3344
       %3356 = OpPhi %v2uint %3352 %3349 %528 %3344
       %3357 = OpPhi %bool %false %3349 %true %3344
               OpSelectionMerge %3368 None
               OpBranchConditional %3357 %3360 %3368
       %3360 = OpLabel
       %3361 = OpShiftLeftLogical %uint %3330 %3345
       %3362 = OpBitwiseAnd %uint %3339 %uint_31
       %3363 = OpShiftRightLogical %uint %3334 %3362
       %3364 = OpBitwiseOr %uint %3363 %3361
       %3365 = OpShiftLeftLogical %uint %3334 %3345
       %3366 = OpCompositeConstruct %v2uint %3365 %3364
               OpBranch %3368
       %3368 = OpLabel
       %3369 = OpPhi %uint %uint_0 %3360 %3355 %3354
       %3370 = OpPhi %v2uint %3366 %3360 %3356 %3354
               OpBranch %3372
       %3372 = OpLabel
       %3373 = OpPhi %v2uint %3329 %3327 %3370 %3368
       %3374 = OpPhi %uint %3339 %3327 %3369 %3368
       %3375 = OpIAdd %uint %3374 %uint_5
       %3376 = OpBitwiseAnd %uint %3375 %uint_31
       %3377 = OpShiftLeftLogical %uint %uint_1 %3376
       %3378 = OpCompositeInsert %v2uint %3377 %355 1
       %3379 = OpIAdd %uint %3377 %uint_4294967295
       %3380 = OpCompositeInsert %v2uint %3379 %650 1
       %3381 = OpBitwiseAnd %v2uint %3380 %3373
       %3382 = OpCompositeExtract %uint %3381 1
       %3383 = OpBitwiseAnd %v2uint %3378 %3373
       %3384 = OpIAdd %uint %3374 %uint_2
       %3385 = OpBitwiseAnd %uint %3384 %uint_31
       %3386 = OpShiftLeftLogical %uint %uint_4 %3385
       %3387 = OpUGreaterThan %bool %3382 %3386
       %3388 = OpLogicalNot %bool %3387
               OpSelectionMerge %3419 None
               OpBranchConditional %3388 %3391 %3419
       %3391 = OpLabel
       %3392 = OpCompositeExtract %uint %3381 0
       %3393 = OpVectorShuffle %v2uint %3237 %528 1 4294967295
       %3394 = OpBitwiseOr %v2uint %3393 %3237
       %3395 = OpCompositeExtract %uint %3394 0
       %3396 = OpINotEqual %bool %3395 %uint_0
       %3397 = OpSelect %uint %3396 %uint_1 %uint_0
       %3398 = OpBitwiseOr %uint %3392 %3397
       %3399 = OpIEqual %bool %3382 %3386
       %3400 = OpINotEqual %bool %3398 %uint_0
       %3401 = OpSelect %bool %3399 %3400 %false
       %3402 = OpLogicalNot %bool %3401
               OpSelectionMerge %3415 None
               OpBranchConditional %3402 %3405 %3415
       %3405 = OpLabel
       %3406 = OpINotEqual %bool %3382 %3386
       %3407 = OpLogicalOr %bool %3406 %3400
       %3408 = OpVectorShuffle %v2uint %3383 %528 1 4294967295
       %3409 = OpBitwiseOr %v2uint %3408 %3383
       %3410 = OpCompositeExtract %uint %3409 0
       %3411 = OpIEqual %bool %3410 %uint_0
       %3412 = OpSelect %bool %3407 %true %3411
       %3413 = OpLogicalNot %bool %3412
               OpBranch %3415
       %3415 = OpLabel
       %3416 = OpPhi %v2uint %3373 %3405 %528 %3391
       %3417 = OpPhi %bool %3413 %3405 %3401 %3391
               OpBranch %3419
       %3419 = OpLabel
       %3420 = OpPhi %v2uint %3416 %3415 %528 %3372
       %3421 = OpPhi %bool %3417 %3415 %3387 %3372
               OpSelectionMerge %3429 None
               OpBranchConditional %3421 %3424 %3429
       %3424 = OpLabel
       %3425 = OpCompositeExtract %uint %3373 1
       %3426 = OpIAdd %uint %3377 %3425
       %3427 = OpCompositeInsert %v2uint %3426 %3373 1
               OpBranch %3429
       %3429 = OpLabel
       %3430 = OpPhi %v2uint %3427 %3424 %3420 %3419
       %3431 = OpCompositeExtract %uint %3430 1
       %3432 = OpShiftRightLogical %uint %3431 %3376
       %3433 = OpUGreaterThan %bool %3432 %uint_16777215
       %3434 = OpSelect %uint %3433 %uint_1 %uint_0
       %3435 = OpShiftRightLogical %uint %3432 %3434
       %3436 = OpIAdd %uint %3340 %3434
       %3437 = OpINotEqual %bool %3435 %uint_0
               OpSelectionMerge %3479 None
               OpBranchConditional %3437 %3440 %3479
       %3440 = OpLabel
       %3441 = OpSLessThanEqual %bool %3436 %uint_127
               OpSelectionMerge %3467 None
               OpBranchConditional %3441 %3444 %3467
       %3444 = OpLabel
       %3445 = OpSGreaterThanEqual %bool %3436 %uint_4294967170
               OpSelectionMerge %3456 None
               OpBranchConditional %3445 %3448 %3456
       %3448 = OpLabel
       %3449 = OpShiftLeftLogical %uint %3436 %uint_23
       %3450 = OpIAdd %uint %3449 %uint_1065353216
       %3451 = OpBitwiseAnd %uint %3435 %uint_8388607
       %3452 = OpBitwiseOr %uint %3450 %3451
       %3453 = OpBitwiseOr %uint %3452 %3328
       %3454 = OpBitcast %float %3453
               OpBranch %3456
       %3456 = OpLabel
       %3457 = OpPhi %float %3454 %3448 %261 %3444
       %3458 = OpPhi %bool %false %3448 %true %3444
               OpSelectionMerge %3464 None
               OpBranchConditional %3458 %3461 %3464
       %3461 = OpLabel
       %3462 = OpBitcast %float %3328
               OpBranch %3464
       %3464 = OpLabel
       %3465 = OpPhi %float %3462 %3461 %3457 %3456
               OpBranch %3467
       %3467 = OpLabel
       %3468 = OpPhi %float %3465 %3464 %261 %3440
       %3469 = OpPhi %bool %false %3464 %true %3440
               OpSelectionMerge %3476 None
               OpBranchConditional %3469 %3472 %3476
       %3472 = OpLabel
       %3473 = OpBitwiseOr %uint %3328 %uint_2139095040
       %3474 = OpBitcast %float %3473
               OpBranch %3476
       %3476 = OpLabel
       %3477 = OpPhi %float %3474 %3472 %3468 %3467
               OpBranch %3479
       %3479 = OpLabel
       %3480 = OpPhi %float %3477 %3476 %float_0 %3429
               OpBranch %3482
       %3482 = OpLabel
       %3483 = OpPhi %float %3480 %3479 %3042 %3054
               OpBranch %3485
       %3485 = OpLabel
       %3486 = OpPhi %float %3483 %3482 %261 %3050
       %3487 = OpPhi %bool %false %3482 %true %3050
               OpSelectionMerge %3495 None
               OpBranchConditional %3487 %3490 %3495
       %3490 = OpLabel
       %3491 = OpVectorShuffle %v2float %3033 %768 1 4294967295
       %3492 = OpFMul %v2float %3033 %3491
       %3493 = OpCompositeExtract %float %3492 0
               OpBranch %3495
       %3495 = OpLabel
       %3496 = OpPhi %float %3493 %3490 %3486 %3485
               OpBranch %3498
       %3498 = OpLabel
       %3499 = OpPhi %float %3496 %3495 %3042 %3022
               OpBranch %3501
       %3501 = OpLabel
       %3502 = OpPhi %float %3499 %3498 %2994 %3017
               OpBranch %3504
       %3504 = OpLabel
       %3505 = OpPhi %float %3502 %3501 %261 %3012
       %3506 = OpPhi %bool %false %3501 %true %3012
               OpBranch %3508
       %3508 = OpLabel
       %3509 = OpPhi %float %3505 %3504 %261 %3007
       %3510 = OpPhi %bool %3506 %3504 %3008 %3007
               OpBranch %3512
       %3512 = OpLabel
       %3513 = OpPhi %float %3509 %3508 %261 %3002
       %3514 = OpPhi %bool %3510 %3508 %3003 %3002
               OpBranch %3516
       %3516 = OpLabel
       %3517 = OpPhi %float %3513 %3512 %261 %2997
       %3518 = OpPhi %bool %3514 %3512 %2998 %2997
               OpBranch %3520
       %3520 = OpLabel
       %3521 = OpPhi %float %3517 %3516 %261 %2985
       %3522 = OpPhi %bool %3518 %3516 %1910 %2985
               OpSelectionMerge %3528 None
               OpBranchConditional %3522 %3525 %3528
       %3525 = OpLabel
       %3526 = OpFSub %float %2993 %2993
               OpBranch %3528
       %3528 = OpLabel
       %3529 = OpPhi %float %3526 %3525 %3521 %3520
       %3530 = OpFSub %float %2991 %2993
       %3531 = OpFSub %float %2991 %3530
       %3532 = OpFSub %float %3531 %2993
       %3533 = OpFAdd %float %3530 %3532
       %3534 = OpFNegate %float %3529
       %3535 = OpConvertFToS %uint %1907
               OpBranch %3537
       %3537 = OpLabel
       %3538 = OpPhi %uint %3535 %3528 %1896 %1895
       %3539 = OpPhi %float %3533 %3528 %1897 %1895
       %3540 = OpPhi %float %3534 %3528 %1898 %1895
               OpBranch %3542
       %3542 = OpLabel
       %3543 = OpFMul %float %3539 %3539
       %3544 = OpFMul %float %3539 %3543
       %3546 = OpFMul %float %3543 %float_1_58969102en10
       %3548 = OpFAdd %float %3546 %float_n2_50507597en08
       %3549 = OpFMul %float %3543 %3548
       %3551 = OpFAdd %float %3549 %float_2_72500006en06
       %3552 = OpFMul %float %3543 %3551
       %3554 = OpFAdd %float %3552 %float_n0_00019840087
       %3555 = OpFMul %float %3543 %3554
       %3557 = OpFAdd %float %3555 %float_0_00833333191
       %3558 = OpFMul %float %3540 %float_0_5
       %3559 = OpFMul %float %3544 %3557
       %3560 = OpFSub %float %3558 %3559
       %3561 = OpFMul %float %3543 %3560
       %3562 = OpFSub %float %3561 %3540
       %3564 = OpFMul %float %3544 %float_0_166666672
       %3565 = OpFAdd %float %3564 %3562
       %3566 = OpFSub %float %3539 %3565
       %3567 = OpFNegate %float %3566
       %3569 = OpFMul %float %3543 %float_1_13596476en11
       %3571 = OpFSub %float %float_2_08757234en09 %3569
       %3572 = OpFMul %float %3543 %3571
       %3574 = OpFAdd %float %3572 %float_n2_7301013en07
       %3575 = OpFMul %float %3543 %3574
       %3577 = OpFAdd %float %3575 %float_2_48005999en05
       %3578 = OpFMul %float %3543 %3577
       %3580 = OpFAdd %float %3578 %float_n0_00138888881
       %3581 = OpFMul %float %3543 %3580
       %3583 = OpFAdd %float %3581 %float_0_0416666679
       %3584 = OpFMul %float %3543 %3583
       %3585 = OpBitcast %uint %3539
       %3586 = OpBitwiseAnd %uint %3585 %uint_2147483647
       %3587 = OpBitcast %float %3586
       %3588 = OpBitcast %uint %3587
       %3590 = OpIAdd %uint %3588 %uint_4278190080
       %3591 = OpBitcast %float %3590
       %3593 = OpIAdd %uint %3588 %uint_3244713574
       %3595 = OpULessThan %bool %3593 %uint_11429479
       %3596 = OpSelect %float %3595 %3591 %float_0
       %3598 = OpUGreaterThan %bool %3588 %uint_1061683200
       %3600 = OpSelect %float %3598 %float_0_28125 %3596
       %3601 = OpFMul %float %3543 %float_0_5
       %3602 = OpFSub %float %3601 %3600
       %3604 = OpFSub %float %float_1 %3600
       %3605 = OpFMul %float %3543 %3584
       %3606 = OpFMul %float %3540 %3539
       %3607 = OpFSub %float %3605 %3606
       %3608 = OpFSub %float %3607 %3602
       %3609 = OpFAdd %float %3604 %3608
       %3610 = OpBitwiseAnd %uint %3538 %uint_1
       %3611 = OpIEqual %bool %3610 %uint_0
       %3612 = OpSelect %float %3611 %3609 %3567
       %3613 = OpBitcast %uint %3612
       %3614 = OpShiftLeftLogical %uint %3538 %uint_30
       %3615 = OpBitwiseAnd %uint %3614 %uint_2147483648
       %3616 = OpBitwiseXor %uint %3615 %3613
       %3617 = OpBitcast %float %3616
       %3619 = OpUGreaterThan %bool %43 %uint_2139095039
       %3621 = OpSelect %float %3619 %float_0x1_8p_128 %3617
               OpStore %38 %3621
               OpSelectionMerge %5401 None
               OpBranchConditional %46 %3624 %5401
       %3624 = OpLabel
       %3625 = OpShiftRightLogical %uint %43 %uint_23
       %3626 = OpBitwiseAnd %uint %43 %uint_8388607
       %3627 = OpBitwiseOr %uint %3626 %uint_8388608
       %3628 = OpIMul %uint %3627 %uint_4266746795
       %3629 = OpUMulExtended %_struct_58 %3627 %uint_4266746795
       %3630 = OpCompositeExtract %uint %3629 1
       %3631 = OpIMul %uint %3627 %uint_1011060801
       %3632 = OpIAdd %uint %3630 %3631
       %3633 = OpUMulExtended %_struct_58 %3627 %uint_1011060801
       %3634 = OpCompositeExtract %uint %3633 1
       %3635 = OpULessThan %bool %3632 %3630
       %3636 = OpSelect %uint %3635 %uint_1 %uint_0
       %3637 = OpIAdd %uint %3634 %3636
       %3638 = OpIMul %uint %3627 %uint_3680671129
       %3639 = OpIAdd %uint %3637 %3638
       %3640 = OpUMulExtended %_struct_58 %3627 %uint_3680671129
       %3641 = OpCompositeExtract %uint %3640 1
       %3642 = OpULessThan %bool %3639 %3637
       %3643 = OpSelect %uint %3642 %uint_1 %uint_0
       %3644 = OpIAdd %uint %3641 %3643
       %3645 = OpIMul %uint %3627 %uint_4113882560
       %3646 = OpIAdd %uint %3644 %3645
       %3647 = OpUMulExtended %_struct_58 %3627 %uint_4113882560
       %3648 = OpCompositeExtract %uint %3647 1
       %3649 = OpULessThan %bool %3646 %3644
       %3650 = OpSelect %uint %3649 %uint_1 %uint_0
       %3651 = OpIAdd %uint %3648 %3650
       %3652 = OpIMul %uint %3627 %uint_4230436817
       %3653 = OpIAdd %uint %3651 %3652
       %3654 = OpUMulExtended %_struct_58 %3627 %uint_4230436817
       %3655 = OpCompositeExtract %uint %3654 1
       %3656 = OpULessThan %bool %3653 %3651
       %3657 = OpSelect %uint %3656 %uint_1 %uint_0
       %3658 = OpIAdd %uint %3655 %3657
       %3659 = OpIMul %uint %3627 %uint_1313084713
       %3660 = OpIAdd %uint %3658 %3659
       %3661 = OpUMulExtended %_struct_58 %3627 %uint_1313084713
       %3662 = OpCompositeExtract %uint %3661 1
       %3663 = OpULessThan %bool %3660 %3658
       %3664 = OpSelect %uint %3663 %uint_1 %uint_0
       %3665 = OpIAdd %uint %3662 %3664
       %3666 = OpIMul %uint %3627 %uint_2734261102
       %3667 = OpIAdd %uint %3665 %3666
       %3668 = OpUMulExtended %_struct_58 %3627 %uint_2734261102
       %3669 = OpCompositeExtract %uint %3668 1
       %3670 = OpULessThan %bool %3667 %3665
       %3671 = OpSelect %uint %3670 %uint_1 %uint_0
       %3672 = OpIAdd %uint %3669 %3671
       %3673 = OpIAdd %uint %3625 %uint_4294967176
       %3674 = OpUGreaterThan %bool %3673 %uint_31
       %3675 = OpSelect %uint %3674 %3667 %3672
       %3676 = OpSelect %uint %3674 %3660 %3667
       %3677 = OpSelect %uint %3674 %3653 %3660
       %3678 = OpSelect %uint %3674 %3646 %3653
       %3679 = OpSelect %uint %3674 %3639 %3646
       %3680 = OpSelect %uint %3674 %3632 %3639
       %3681 = OpSelect %uint %3674 %3628 %3632
       %3682 = OpSelect %uint %3674 %uint_4294967264 %uint_0
       %3683 = OpIAdd %uint %3682 %3673
       %3684 = OpUGreaterThan %bool %3683 %uint_31
       %3685 = OpSelect %uint %3684 %3676 %3675
       %3686 = OpSelect %uint %3684 %3677 %3676
       %3687 = OpSelect %uint %3684 %3678 %3677
       %3688 = OpSelect %uint %3684 %3679 %3678
       %3689 = OpSelect %uint %3684 %3680 %3679
       %3690 = OpSelect %uint %3684 %3681 %3680
       %3691 = OpSelect %uint %3684 %uint_4294967264 %uint_0
       %3692 = OpIAdd %uint %3691 %3683
       %3693 = OpUGreaterThan %bool %3692 %uint_31
       %3694 = OpSelect %uint %3693 %3686 %3685
       %3695 = OpSelect %uint %3693 %3687 %3686
       %3696 = OpSelect %uint %3693 %3688 %3687
       %3697 = OpSelect %uint %3693 %3689 %3688
       %3698 = OpSelect %uint %3693 %3690 %3689
       %3699 = OpSelect %uint %3693 %uint_4294967264 %uint_0
       %3700 = OpIAdd %uint %3699 %3692
       %3701 = OpUGreaterThan %bool %3700 %uint_31
       %3702 = OpSelect %uint %3701 %3695 %3694
       %3703 = OpSelect %uint %3701 %3696 %3695
       %3704 = OpSelect %uint %3701 %3697 %3696
       %3705 = OpSelect %uint %3701 %3698 %3697
       %3706 = OpSelect %uint %3701 %uint_4294967264 %uint_0
       %3707 = OpISub %uint %uint_0 %3700
       %3708 = OpIEqual %bool %3706 %3707
       %3709 = OpISub %uint %uint_24 %3625
       %3710 = OpBitwiseAnd %uint %3673 %uint_31
       %3711 = OpShiftLeftLogical %uint %3702 %3710
       %3712 = OpBitwiseAnd %uint %3709 %uint_31
       %3713 = OpShiftRightLogical %uint %3703 %3712
       %3714 = OpBitwiseOr %uint %3711 %3713
       %3715 = OpShiftLeftLogical %uint %3703 %3710
       %3716 = OpShiftRightLogical %uint %3704 %3712
       %3717 = OpBitwiseOr %uint %3715 %3716
       %3718 = OpShiftLeftLogical %uint %3704 %3710
       %3719 = OpShiftRightLogical %uint %3705 %3712
       %3720 = OpBitwiseOr %uint %3718 %3719
       %3721 = OpSelect %uint %3708 %3702 %3714
       %3722 = OpSelect %uint %3708 %3703 %3717
       %3723 = OpSelect %uint %3708 %3704 %3720
       %3724 = OpShiftRightLogical %uint %3721 %uint_29
       %3725 = OpShiftLeftLogical %uint %3721 %uint_2
       %3726 = OpShiftRightLogical %uint %3722 %uint_30
       %3727 = OpBitwiseOr %uint %3726 %3725
       %3728 = OpShiftLeftLogical %uint %3722 %uint_2
       %3729 = OpShiftRightLogical %uint %3723 %uint_30
       %3730 = OpBitwiseOr %uint %3729 %3728
       %3731 = OpShiftLeftLogical %uint %3723 %uint_2
       %3732 = OpShiftRightLogical %uint %3705 %uint_30
       %3733 = OpBitwiseOr %uint %3732 %3731
       %3734 = OpBitwiseAnd %uint %3724 %uint_1
       %3735 = OpISub %uint %uint_0 %3734
       %3736 = OpShiftLeftLogical %uint %3724 %uint_31
       %3737 = OpBitwiseXor %uint %3727 %3735
       %3738 = OpBitwiseXor %uint %3730 %3735
       %3739 = OpBitwiseXor %uint %3733 %3735
       %3740 = OpExtInst %uint %184 FindUMsb %3737
       %3741 = OpISub %uint %uint_31 %3740
       %3742 = OpIAdd %uint %3741 %uint_1
       %3743 = OpISub %uint %uint_31 %3741
       %3744 = OpBitwiseAnd %uint %3742 %uint_31
       %3745 = OpShiftLeftLogical %uint %3737 %3744
       %3746 = OpBitwiseAnd %uint %3743 %uint_31
       %3747 = OpShiftRightLogical %uint %3738 %3746
       %3748 = OpBitwiseOr %uint %3745 %3747
       %3749 = OpShiftLeftLogical %uint %3738 %3744
       %3750 = OpShiftRightLogical %uint %3739 %3746
       %3751 = OpBitwiseOr %uint %3749 %3750
       %3752 = OpShiftRightLogical %uint %3748 %uint_9
       %3753 = OpShiftLeftLogical %uint %3741 %uint_23
       %3754 = OpISub %uint %3752 %3753
       %3755 = OpIAdd %uint %3754 %uint_1056964608
       %3756 = OpBitwiseOr %uint %3755 %3736
       %3757 = OpBitcast %float %3756
       %3758 = OpShiftLeftLogical %uint %3748 %uint_23
       %3759 = OpShiftRightLogical %uint %3751 %uint_9
       %3760 = OpBitwiseOr %uint %3759 %3758
       %3761 = OpExtInst %uint %184 FindUMsb %3760
       %3762 = OpISub %uint %uint_31 %3761
       %3763 = OpBitwiseXor %uint %3762 %uint_4294967295
       %3764 = OpIAdd %uint %3762 %uint_1
       %3765 = OpISub %uint %uint_31 %3762
       %3766 = OpBitwiseAnd %uint %3764 %uint_31
       %3767 = OpShiftLeftLogical %uint %3760 %3766
       %3768 = OpBitwiseAnd %uint %3765 %uint_31
       %3769 = OpShiftRightLogical %uint %3751 %3768
       %3770 = OpBitwiseOr %uint %3767 %3769
       %3771 = OpISub %uint %3763 %3741
       %3772 = OpShiftLeftLogical %uint %3771 %uint_23
       %3773 = OpShiftRightLogical %uint %3770 %uint_9
       %3774 = OpIAdd %uint %3772 %uint_864026624
       %3775 = OpBitwiseOr %uint %3773 %3774
       %3776 = OpBitwiseOr %uint %3775 %3736
       %3777 = OpBitcast %float %3776
       %3778 = OpFMul %float %3757 %float_1_57079625
       %3779 = OpFNegate %float %3778
       %3780 = OpIsNan %bool %3757
       %3781 = OpLogicalNot %bool %3780
               OpSelectionMerge %4836 None
               OpBranchConditional %3781 %3784 %4836
       %3784 = OpLabel
       %3785 = OpIsNan %bool %float_1_57079625
       %3786 = OpLogicalNot %bool %3785
               OpSelectionMerge %4301 None
               OpBranchConditional %3786 %3789 %4301
       %3789 = OpLabel
       %3790 = OpIsNan %bool %3779
       %3791 = OpLogicalNot %bool %3790
               OpSelectionMerge %4297 None
               OpBranchConditional %3791 %3794 %4297
       %3794 = OpLabel
       %3795 = OpIsInf %bool %3757
       %3796 = OpLogicalNot %bool %3795
               OpSelectionMerge %4293 None
               OpBranchConditional %3796 %3799 %4293
       %3799 = OpLabel
       %3800 = OpIsInf %bool %float_1_57079625
       %3801 = OpLogicalNot %bool %3800
               OpSelectionMerge %4290 None
               OpBranchConditional %3801 %3804 %4290
       %3804 = OpLabel
       %3805 = OpIsInf %bool %3779
       %3806 = OpLogicalNot %bool %3805
               OpSelectionMerge %4287 None
               OpBranchConditional %3806 %3809 %4287
       %3809 = OpLabel
       %3810 = OpCompositeInsert %v2float %3757 %262 1
       %3811 = OpBitcast %v2uint %3810
       %3812 = OpBitwiseAnd %v2uint %3811 %267
       %3813 = OpINotEqual %v2bool %3812 %270
       %3814 = OpBitwiseAnd %v2uint %3811 %272
       %3815 = OpIEqual %v2bool %3814 %270
       %3816 = OpLogicalOr %v2bool %3815 %3813
       %3817 = OpBitwiseAnd %v2uint %3811 %277
       %3818 = OpBitcast %v2float %3817
       %3819 = OpSelect %v2float %3816 %3810 %3818
       %3820 = OpBitcast %uint %3779
       %3821 = OpBitwiseAnd %uint %3820 %uint_2139095040
       %3822 = OpINotEqual %bool %3821 %uint_0
       %3823 = OpBitwiseAnd %uint %3820 %uint_8388607
       %3824 = OpIEqual %bool %3823 %uint_0
       %3825 = OpLogicalOr %bool %3824 %3822
       %3826 = OpBitwiseAnd %uint %3820 %uint_2147483648
       %3827 = OpBitcast %float %3826
       %3828 = OpSelect %float %3825 %3779 %3827
       %3829 = OpFOrdEqual %v2bool %3819 %290
       %3830 = OpVectorShuffle %v2bool %3829 %292 1 4294967295
       %3831 = OpLogicalOr %v2bool %3830 %3829
       %3832 = OpCompositeExtract %bool %3831 0
       %3833 = OpLogicalNot %bool %3832
               OpSelectionMerge %4284 None
               OpBranchConditional %3833 %3836 %4284
       %3836 = OpLabel
       %3837 = OpFUnordNotEqual %bool %3828 %float_0
               OpSelectionMerge %4271 None
               OpBranchConditional %3837 %3840 %4271
       %3840 = OpLabel
       %3841 = OpBitcast %v2uint %3819
       %3842 = OpCompositeExtract %uint %3841 1
       %3843 = OpShiftRightLogical %uint %3842 %uint_23
       %3844 = OpBitwiseAnd %uint %3843 %uint_255
       %3845 = OpCompositeExtract %uint %3841 0
       %3846 = OpShiftRightLogical %uint %3845 %uint_23
       %3847 = OpBitwiseAnd %uint %3846 %uint_255
       %3848 = OpBitcast %uint %3828
       %3849 = OpShiftRightLogical %uint %3848 %uint_23
       %3850 = OpBitwiseAnd %uint %3849 %uint_255
       %3851 = OpIAdd %uint %3850 %uint_4294967169
       %3852 = OpBitwiseAnd %v2uint %3841 %272
       %3853 = OpBitwiseOr %v2uint %3852 %319
       %3854 = OpBitwiseAnd %uint %3848 %uint_2147483648
       %3855 = OpBitwiseXor %uint %3845 %3842
       %3856 = OpBitwiseAnd %uint %3855 %uint_2147483648
       %3857 = OpCompositeExtract %uint %3853 0
       %3858 = OpCompositeExtract %uint %3853 1
       %3859 = OpUMulExtended %_struct_58 %3858 %3857
       %3860 = OpCompositeExtract %uint %3859 1
       %3861 = OpIMul %uint %3857 %3858
       %3862 = OpShiftLeftLogical %uint %3860 %uint_14
       %3863 = OpShiftRightLogical %uint %3861 %uint_18
       %3864 = OpBitwiseOr %uint %3863 %3862
       %3865 = OpShiftLeftLogical %uint %3861 %uint_14
       %3866 = OpCompositeConstruct %v2uint %3865 %3864
       %3867 = OpBitwiseOr %uint %3864 %3865
       %3868 = OpIEqual %bool %3867 %uint_0
       %3869 = OpIAdd %uint %3844 %uint_4294967042
       %3870 = OpIAdd %uint %3869 %3847
       %3871 = OpSelect %uint %3868 %uint_0 %3870
       %3872 = OpBitwiseOr %uint %3871 %3867
       %3873 = OpINotEqual %bool %3872 %uint_0
               OpSelectionMerge %4268 None
               OpBranchConditional %3873 %3876 %4268
       %3876 = OpLabel
       %3877 = OpISub %uint %3871 %3851
       %3878 = OpShiftLeftLogical %uint %3848 %uint_5
       %3879 = OpBitwiseAnd %uint %3878 %uint_268435424
       %3880 = OpBitwiseOr %uint %3879 %uint_268435456
       %3881 = OpCompositeInsert %v2uint %3880 %355 1
       %3882 = OpExtInst %uint %184 SAbs %3877
       %3883 = OpINotEqual %bool %3882 %uint_0
               OpSelectionMerge %3910 None
               OpBranchConditional %3883 %3886 %3910
       %3886 = OpLabel
       %3887 = OpUGreaterThanEqual %bool %3882 %uint_32
               OpSelectionMerge %3895 None
               OpBranchConditional %3887 %3890 %3895
       %3890 = OpLabel
       %3891 = OpBitwiseAnd %uint %3882 %uint_31
       %3892 = OpShiftLeftLogical %uint %uint_1 %3891
       %3893 = OpCompositeInsert %v2uint %3892 %355 1
               OpBranch %3895
       %3895 = OpLabel
       %3896 = OpPhi %v2uint %3893 %3890 %528 %3886
       %3897 = OpPhi %bool %false %3890 %true %3886
               OpSelectionMerge %3907 None
               OpBranchConditional %3897 %3900 %3907
       %3900 = OpLabel
       %3901 = OpISub %uint %uint_0 %3882
       %3902 = OpBitwiseAnd %uint %3901 %uint_31
       %3903 = OpShiftRightLogical %uint %uint_1 %3902
       %3904 = OpShiftLeftLogical %uint %uint_1 %3882
       %3905 = OpCompositeConstruct %v2uint %3904 %3903
               OpBranch %3907
       %3907 = OpLabel
       %3908 = OpPhi %v2uint %3905 %3900 %3896 %3895
               OpBranch %3910
       %3910 = OpLabel
       %3911 = OpPhi %v2uint %7106 %3876 %3908 %3907
       %3912 = OpCompositeExtract %uint %3911 0
       %3913 = OpShiftRightLogical %uint %3912 %uint_1
       %3914 = OpIAdd %uint %3913 %uint_2147483647
       %3915 = OpBitwiseAnd %uint %3912 %uint_1
       %3916 = OpIAdd %uint %3914 %3915
       %3917 = OpShiftRightLogical %uint %3916 %uint_31
       %3918 = OpIAdd %uint %3912 %uint_4294967295
       %3919 = OpCompositeExtract %uint %3911 1
       %3920 = OpIAdd %uint %3919 %uint_4294967295
       %3921 = OpIAdd %uint %3920 %3917
       %3922 = OpCompositeConstruct %v2uint %3918 %3921
       %3923 = OpSLessThanEqual %bool %3877 %uint_0
               OpSelectionMerge %3975 None
               OpBranchConditional %3923 %3926 %3975
       %3926 = OpLabel
       %3927 = OpSGreaterThanEqual %bool %3877 %uint_4294967233
               OpSelectionMerge %3970 None
               OpBranchConditional %3927 %3930 %3970
       %3930 = OpLabel
       %3931 = OpISub %uint %uint_0 %3877
       %3932 = OpBitwiseAnd %v2uint %3922 %3866
       %3933 = OpINotEqual %bool %3871 %3851
               OpSelectionMerge %3965 None
               OpBranchConditional %3933 %3936 %3965
       %3936 = OpLabel
       %3937 = OpUGreaterThanEqual %bool %3931 %uint_32
               OpSelectionMerge %3945 None
               OpBranchConditional %3937 %3940 %3945
       %3940 = OpLabel
       %3941 = OpBitwiseAnd %uint %3931 %uint_31
       %3942 = OpShiftRightLogical %uint %3864 %3941
       %3943 = OpCompositeInsert %v2uint %3942 %420 0
               OpBranch %3945
       %3945 = OpLabel
       %3946 = OpPhi %v2uint %3881 %3940 %528 %3936
       %3947 = OpPhi %v2uint %3932 %3940 %528 %3936
       %3948 = OpPhi %v2uint %3943 %3940 %528 %3936
       %3949 = OpPhi %bool %false %3940 %true %3936
               OpSelectionMerge %3960 None
               OpBranchConditional %3949 %3952 %3960
       %3952 = OpLabel
       %3953 = OpShiftRightLogical %uint %3865 %3931
       %3954 = OpBitwiseAnd %uint %3877 %uint_31
       %3955 = OpShiftLeftLogical %uint %3864 %3954
       %3956 = OpBitwiseOr %uint %3955 %3953
       %3957 = OpShiftRightLogical %uint %3864 %3931
       %3958 = OpCompositeConstruct %v2uint %3956 %3957
               OpBranch %3960
       %3960 = OpLabel
       %3961 = OpPhi %v2uint %3881 %3952 %3946 %3945
       %3962 = OpPhi %v2uint %3932 %3952 %3947 %3945
       %3963 = OpPhi %v2uint %3958 %3952 %3948 %3945
               OpBranch %3965
       %3965 = OpLabel
       %3966 = OpPhi %v2uint %3961 %3960 %3881 %3930
       %3967 = OpPhi %v2uint %3962 %3960 %3932 %3930
       %3968 = OpPhi %v2uint %3963 %3960 %3866 %3930
               OpBranch %3970
       %3970 = OpLabel
       %3971 = OpPhi %v2uint %3966 %3965 %3881 %3926
       %3972 = OpPhi %v2uint %3967 %3965 %3866 %3926
       %3973 = OpPhi %v2uint %3968 %3965 %270 %3926
               OpBranch %3975
       %3975 = OpLabel
       %3976 = OpPhi %v2uint %3971 %3970 %528 %3910
       %3977 = OpPhi %v2uint %3972 %3970 %528 %3910
       %3978 = OpPhi %v2uint %3973 %3970 %528 %3910
       %3979 = OpPhi %bool %false %3970 %true %3910
               OpSelectionMerge %4021 None
               OpBranchConditional %3979 %3982 %4021
       %3982 = OpLabel
       %3983 = OpULessThanEqual %bool %3877 %uint_63
               OpSelectionMerge %4016 None
               OpBranchConditional %3983 %3986 %4016
       %3986 = OpLabel
       %3987 = OpBitwiseAnd %uint %3921 %3880
       %3988 = OpCompositeInsert %v2uint %3987 %355 1
       %3989 = OpUGreaterThanEqual %bool %3877 %uint_32
               OpSelectionMerge %3997 None
               OpBranchConditional %3989 %3992 %3997
       %3992 = OpLabel
       %3993 = OpBitwiseAnd %uint %3877 %uint_31
       %3994 = OpShiftRightLogical %uint %3880 %3993
       %3995 = OpCompositeInsert %v2uint %3994 %420 0
               OpBranch %3997
       %3997 = OpLabel
       %3998 = OpPhi %v2uint %3995 %3992 %528 %3986
       %3999 = OpPhi %v2uint %3988 %3992 %528 %3986
       %4000 = OpPhi %v2uint %3866 %3992 %528 %3986
       %4001 = OpPhi %bool %false %3992 %true %3986
               OpSelectionMerge %4011 None
               OpBranchConditional %4001 %4004 %4011
       %4004 = OpLabel
       %4005 = OpISub %uint %uint_0 %3877
       %4006 = OpBitwiseAnd %uint %4005 %uint_31
       %4007 = OpShiftLeftLogical %uint %3880 %4006
       %4008 = OpShiftRightLogical %uint %3880 %3877
       %4009 = OpCompositeConstruct %v2uint %4007 %4008
               OpBranch %4011
       %4011 = OpLabel
       %4012 = OpPhi %v2uint %4009 %4004 %3998 %3997
       %4013 = OpPhi %v2uint %3988 %4004 %3999 %3997
       %4014 = OpPhi %v2uint %3866 %4004 %4000 %3997
               OpBranch %4016
       %4016 = OpLabel
       %4017 = OpPhi %v2uint %4012 %4011 %270 %3982
       %4018 = OpPhi %v2uint %4013 %4011 %3881 %3982
       %4019 = OpPhi %v2uint %4014 %4011 %3866 %3982
               OpBranch %4021
       %4021 = OpLabel
       %4022 = OpPhi %v2uint %3978 %3975 %4019 %4016
       %4023 = OpPhi %v2uint %3977 %3975 %4018 %4016
       %4024 = OpPhi %v2uint %3976 %3975 %4017 %4016
       %4025 = OpExtInst %uint %184 SMax %3871 %3851
       %4026 = OpINotEqual %bool %3854 %3856
               OpSelectionMerge %4073 None
               OpBranchConditional %4026 %4029 %4073
       %4029 = OpLabel
       %4030 = OpCompositeExtract %uint %4024 0
       %4031 = OpBitwiseXor %uint %4030 %uint_4294967295
       %4032 = OpCompositeExtract %uint %4024 1
       %4033 = OpBitwiseXor %uint %4032 %uint_4294967295
       %4034 = OpShiftRightLogical %uint %4031 %uint_1
       %4035 = OpBitwiseAnd %uint %4031 %uint_1
       %4036 = OpIAdd %uint %4034 %4035
       %4037 = OpShiftRightLogical %uint %4036 %uint_31
       %4038 = OpISub %uint %uint_0 %4030
       %4039 = OpCompositeExtract %uint %4022 0
       %4040 = OpShiftRightLogical %uint %4039 %uint_1
       %4041 = OpShiftRightLogical %uint %4038 %uint_1
       %4042 = OpIAdd %uint %4041 %4040
       %4043 = OpBitwiseAnd %uint %4039 %uint_1
       %4044 = OpBitwiseAnd %uint %4043 %4038
       %4045 = OpIAdd %uint %4042 %4044
       %4046 = OpShiftRightLogical %uint %4045 %uint_31
       %4047 = OpISub %uint %4039 %4030
       %4048 = OpCompositeExtract %uint %4022 1
       %4049 = OpVectorShuffle %v2uint %4023 %528 1 4294967295
       %4050 = OpBitwiseOr %v2uint %4049 %4023
       %4051 = OpCompositeExtract %uint %4050 0
       %4052 = OpINotEqual %bool %4051 %uint_0
       %4053 = OpSGreaterThan %bool %3871 %3851
       %4054 = OpSelect %bool %4052 %4053 %false
       %4055 = OpSelect %v2uint %4054 %536 %270
       %4056 = OpCompositeExtract %uint %4055 0
       %4057 = OpShiftRightLogical %uint %4047 %uint_1
       %4058 = OpShiftRightLogical %uint %4056 %uint_1
       %4059 = OpIAdd %uint %4058 %4057
       %4060 = OpBitwiseAnd %uint %4047 %uint_1
       %4061 = OpBitwiseAnd %uint %4060 %4056
       %4062 = OpIAdd %uint %4059 %4061
       %4063 = OpShiftRightLogical %uint %4062 %uint_31
       %4064 = OpIAdd %uint %4056 %4047
       %4065 = OpCompositeExtract %uint %4055 1
       %4066 = OpIAdd %uint %4048 %4033
       %4067 = OpIAdd %uint %4066 %4037
       %4068 = OpIAdd %uint %4067 %4046
       %4069 = OpIAdd %uint %4068 %4065
       %4070 = OpIAdd %uint %4069 %4063
       %4071 = OpCompositeConstruct %v2uint %4064 %4070
               OpBranch %4073
       %4073 = OpLabel
       %4074 = OpPhi %v2uint %4071 %4029 %528 %4021
       %4075 = OpPhi %bool %false %4029 %true %4021
               OpSelectionMerge %4094 None
               OpBranchConditional %4075 %4078 %4094
       %4078 = OpLabel
       %4079 = OpCompositeExtract %uint %4022 0
       %4080 = OpCompositeExtract %uint %4024 0
       %4081 = OpShiftRightLogical %uint %4079 %uint_1
       %4082 = OpShiftRightLogical %uint %4080 %uint_1
       %4083 = OpIAdd %uint %4082 %4081
       %4084 = OpBitwiseAnd %uint %4079 %uint_1
       %4085 = OpBitwiseAnd %uint %4084 %4080
       %4086 = OpIAdd %uint %4083 %4085
       %4087 = OpShiftRightLogical %uint %4086 %uint_31
       %4088 = OpIAdd %uint %4080 %4079
       %4089 = OpIAdd %v2uint %4024 %4022
       %4090 = OpCompositeExtract %uint %4089 1
       %4091 = OpIAdd %uint %4087 %4090
       %4092 = OpCompositeConstruct %v2uint %4088 %4091
               OpBranch %4094
       %4094 = OpLabel
       %4095 = OpPhi %v2uint %4092 %4078 %4074 %4073
       %4096 = OpCompositeExtract %uint %4095 1
       %4097 = OpSLessThan %bool %4096 %uint_0
               OpSelectionMerge %4113 None
               OpBranchConditional %4097 %4100 %4113
       %4100 = OpLabel
       %4101 = OpCompositeExtract %uint %4095 0
       %4102 = OpBitwiseXor %uint %4101 %uint_4294967295
       %4103 = OpBitwiseXor %uint %4096 %uint_4294967295
       %4104 = OpShiftRightLogical %uint %4102 %uint_1
       %4105 = OpBitwiseAnd %uint %4102 %uint_1
       %4106 = OpIAdd %uint %4104 %4105
       %4107 = OpShiftRightLogical %uint %4106 %uint_31
       %4108 = OpISub %uint %uint_0 %4101
       %4109 = OpIAdd %uint %4107 %4103
       %4110 = OpCompositeConstruct %v2uint %4108 %4109
       %4111 = OpBitwiseXor %uint %3856 %uint_2147483648
               OpBranch %4113
       %4113 = OpLabel
       %4114 = OpPhi %uint %4111 %4100 %3856 %4094
       %4115 = OpPhi %v2uint %4110 %4100 %4095 %4094
       %4116 = OpCompositeExtract %uint %4115 1
       %4117 = OpExtInst %uint %184 FindUMsb %4116
       %4118 = OpISub %uint %uint_31 %4117
       %4119 = OpIEqual %bool %4116 %uint_0
       %4120 = OpCompositeExtract %uint %4115 0
       %4121 = OpExtInst %uint %184 FindUMsb %4120
       %4122 = OpISub %uint %uint_31 %4121
       %4123 = OpIAdd %uint %4122 %uint_32
       %4124 = OpSelect %uint %4119 %4123 %4118
       %4125 = OpISub %uint %uint_3 %4124
       %4126 = OpIAdd %uint %4125 %4025
       %4127 = OpUGreaterThan %bool %4124 %uint_3
               OpSelectionMerge %4158 None
               OpBranchConditional %4127 %4130 %4158
       %4130 = OpLabel
       %4131 = OpIAdd %uint %4124 %uint_4294967293
       %4132 = OpUGreaterThanEqual %bool %4131 %uint_32
               OpSelectionMerge %4140 None
               OpBranchConditional %4132 %4135 %4140
       %4135 = OpLabel
       %4136 = OpBitwiseAnd %uint %4131 %uint_31
       %4137 = OpShiftLeftLogical %uint %4120 %4136
       %4138 = OpCompositeInsert %v2uint %4137 %355 1
               OpBranch %4140
       %4140 = OpLabel
       %4141 = OpPhi %uint %uint_0 %4135 %354 %4130
       %4142 = OpPhi %v2uint %4138 %4135 %528 %4130
       %4143 = OpPhi %bool %false %4135 %true %4130
               OpSelectionMerge %4154 None
               OpBranchConditional %4143 %4146 %4154
       %4146 = OpLabel
       %4147 = OpShiftLeftLogical %uint %4116 %4131
       %4148 = OpBitwiseAnd %uint %4125 %uint_31
       %4149 = OpShiftRightLogical %uint %4120 %4148
       %4150 = OpBitwiseOr %uint %4149 %4147
       %4151 = OpShiftLeftLogical %uint %4120 %4131
       %4152 = OpCompositeConstruct %v2uint %4151 %4150
               OpBranch %4154
       %4154 = OpLabel
       %4155 = OpPhi %uint %uint_0 %4146 %4141 %4140
       %4156 = OpPhi %v2uint %4152 %4146 %4142 %4140
               OpBranch %4158
       %4158 = OpLabel
       %4159 = OpPhi %v2uint %4115 %4113 %4156 %4154
       %4160 = OpPhi %uint %4125 %4113 %4155 %4154
       %4161 = OpIAdd %uint %4160 %uint_5
       %4162 = OpBitwiseAnd %uint %4161 %uint_31
       %4163 = OpShiftLeftLogical %uint %uint_1 %4162
       %4164 = OpCompositeInsert %v2uint %4163 %355 1
       %4165 = OpIAdd %uint %4163 %uint_4294967295
       %4166 = OpCompositeInsert %v2uint %4165 %650 1
       %4167 = OpBitwiseAnd %v2uint %4166 %4159
       %4168 = OpCompositeExtract %uint %4167 1
       %4169 = OpBitwiseAnd %v2uint %4164 %4159
       %4170 = OpIAdd %uint %4160 %uint_2
       %4171 = OpBitwiseAnd %uint %4170 %uint_31
       %4172 = OpShiftLeftLogical %uint %uint_4 %4171
       %4173 = OpUGreaterThan %bool %4168 %4172
       %4174 = OpLogicalNot %bool %4173
               OpSelectionMerge %4205 None
               OpBranchConditional %4174 %4177 %4205
       %4177 = OpLabel
       %4178 = OpCompositeExtract %uint %4167 0
       %4179 = OpVectorShuffle %v2uint %4023 %528 1 4294967295
       %4180 = OpBitwiseOr %v2uint %4179 %4023
       %4181 = OpCompositeExtract %uint %4180 0
       %4182 = OpINotEqual %bool %4181 %uint_0
       %4183 = OpSelect %uint %4182 %uint_1 %uint_0
       %4184 = OpBitwiseOr %uint %4178 %4183
       %4185 = OpIEqual %bool %4168 %4172
       %4186 = OpINotEqual %bool %4184 %uint_0
       %4187 = OpSelect %bool %4185 %4186 %false
       %4188 = OpLogicalNot %bool %4187
               OpSelectionMerge %4201 None
               OpBranchConditional %4188 %4191 %4201
       %4191 = OpLabel
       %4192 = OpINotEqual %bool %4168 %4172
       %4193 = OpLogicalOr %bool %4192 %4186
       %4194 = OpVectorShuffle %v2uint %4169 %528 1 4294967295
       %4195 = OpBitwiseOr %v2uint %4194 %4169
       %4196 = OpCompositeExtract %uint %4195 0
       %4197 = OpIEqual %bool %4196 %uint_0
       %4198 = OpSelect %bool %4193 %true %4197
       %4199 = OpLogicalNot %bool %4198
               OpBranch %4201
       %4201 = OpLabel
       %4202 = OpPhi %v2uint %4159 %4191 %528 %4177
       %4203 = OpPhi %bool %4199 %4191 %4187 %4177
               OpBranch %4205
       %4205 = OpLabel
       %4206 = OpPhi %v2uint %4202 %4201 %528 %4158
       %4207 = OpPhi %bool %4203 %4201 %4173 %4158
               OpSelectionMerge %4215 None
               OpBranchConditional %4207 %4210 %4215
       %4210 = OpLabel
       %4211 = OpCompositeExtract %uint %4159 1
       %4212 = OpIAdd %uint %4163 %4211
       %4213 = OpCompositeInsert %v2uint %4212 %4159 1
               OpBranch %4215
       %4215 = OpLabel
       %4216 = OpPhi %v2uint %4213 %4210 %4206 %4205
       %4217 = OpCompositeExtract %uint %4216 1
       %4218 = OpShiftRightLogical %uint %4217 %4162
       %4219 = OpUGreaterThan %bool %4218 %uint_16777215
       %4220 = OpSelect %uint %4219 %uint_1 %uint_0
       %4221 = OpShiftRightLogical %uint %4218 %4220
       %4222 = OpIAdd %uint %4126 %4220
       %4223 = OpINotEqual %bool %4221 %uint_0
               OpSelectionMerge %4265 None
               OpBranchConditional %4223 %4226 %4265
       %4226 = OpLabel
       %4227 = OpSLessThanEqual %bool %4222 %uint_127
               OpSelectionMerge %4253 None
               OpBranchConditional %4227 %4230 %4253
       %4230 = OpLabel
       %4231 = OpSGreaterThanEqual %bool %4222 %uint_4294967170
               OpSelectionMerge %4242 None
               OpBranchConditional %4231 %4234 %4242
       %4234 = OpLabel
       %4235 = OpShiftLeftLogical %uint %4222 %uint_23
       %4236 = OpIAdd %uint %4235 %uint_1065353216
       %4237 = OpBitwiseAnd %uint %4221 %uint_8388607
       %4238 = OpBitwiseOr %uint %4236 %4237
       %4239 = OpBitwiseOr %uint %4238 %4114
       %4240 = OpBitcast %float %4239
               OpBranch %4242
       %4242 = OpLabel
       %4243 = OpPhi %float %4240 %4234 %261 %4230
       %4244 = OpPhi %bool %false %4234 %true %4230
               OpSelectionMerge %4250 None
               OpBranchConditional %4244 %4247 %4250
       %4247 = OpLabel
       %4248 = OpBitcast %float %4114
               OpBranch %4250
       %4250 = OpLabel
       %4251 = OpPhi %float %4248 %4247 %4243 %4242
               OpBranch %4253
       %4253 = OpLabel
       %4254 = OpPhi %float %4251 %4250 %261 %4226
       %4255 = OpPhi %bool %false %4250 %true %4226
               OpSelectionMerge %4262 None
               OpBranchConditional %4255 %4258 %4262
       %4258 = OpLabel
       %4259 = OpBitwiseOr %uint %4114 %uint_2139095040
       %4260 = OpBitcast %float %4259
               OpBranch %4262
       %4262 = OpLabel
       %4263 = OpPhi %float %4260 %4258 %4254 %4253
               OpBranch %4265
       %4265 = OpLabel
       %4266 = OpPhi %float %4263 %4262 %float_0 %4215
               OpBranch %4268
       %4268 = OpLabel
       %4269 = OpPhi %float %4266 %4265 %3828 %3840
               OpBranch %4271
       %4271 = OpLabel
       %4272 = OpPhi %float %4269 %4268 %261 %3836
       %4273 = OpPhi %bool %false %4268 %true %3836
               OpSelectionMerge %4281 None
               OpBranchConditional %4273 %4276 %4281
       %4276 = OpLabel
       %4277 = OpVectorShuffle %v2float %3819 %768 1 4294967295
       %4278 = OpFMul %v2float %3819 %4277
       %4279 = OpCompositeExtract %float %4278 0
               OpBranch %4281
       %4281 = OpLabel
       %4282 = OpPhi %float %4279 %4276 %4272 %4271
               OpBranch %4284
       %4284 = OpLabel
       %4285 = OpPhi %float %4282 %4281 %3828 %3809
               OpBranch %4287
       %4287 = OpLabel
       %4288 = OpPhi %float %4285 %4284 %3779 %3804
               OpBranch %4290
       %4290 = OpLabel
       %4291 = OpPhi %float %4288 %4287 %261 %3799
               OpBranch %4293
       %4293 = OpLabel
       %4294 = OpPhi %float %4291 %4290 %261 %3794
       %4295 = OpPhi %bool %3800 %4290 %true %3794
               OpBranch %4297
       %4297 = OpLabel
       %4298 = OpPhi %float %4294 %4293 %261 %3789
       %4299 = OpPhi %bool %4295 %4293 %3790 %3789
               OpBranch %4301
       %4301 = OpLabel
       %4302 = OpPhi %float %4298 %4297 %261 %3784
       %4303 = OpPhi %bool %4299 %4297 %true %3784
               OpSelectionMerge %4309 None
               OpBranchConditional %4303 %4306 %4309
       %4306 = OpLabel
       %4307 = OpFSub %float %3778 %3778
               OpBranch %4309
       %4309 = OpLabel
       %4310 = OpPhi %float %4307 %4306 %4302 %4301
       %4311 = OpIsNan %bool %float_7_54978942en08
       %4312 = OpLogicalNot %bool %4311
               OpSelectionMerge %4831 None
               OpBranchConditional %4312 %4315 %4831
       %4315 = OpLabel
       %4316 = OpIsNan %bool %4310
       %4317 = OpLogicalNot %bool %4316
               OpSelectionMerge %4826 None
               OpBranchConditional %4317 %4320 %4826
       %4320 = OpLabel
       %4321 = OpIsInf %bool %3757
       %4322 = OpLogicalNot %bool %4321
               OpSelectionMerge %4821 None
               OpBranchConditional %4322 %4325 %4821
       %4325 = OpLabel
       %4326 = OpIsInf %bool %float_7_54978942en08
       %4327 = OpLogicalNot %bool %4326
               OpSelectionMerge %4816 None
               OpBranchConditional %4327 %4330 %4816
       %4330 = OpLabel
       %4331 = OpIsInf %bool %4310
       %4332 = OpLogicalNot %bool %4331
               OpSelectionMerge %4813 None
               OpBranchConditional %4332 %4335 %4813
       %4335 = OpLabel
       %4336 = OpCompositeInsert %v2float %3757 %829 1
       %4337 = OpBitcast %v2uint %4336
       %4338 = OpBitwiseAnd %v2uint %4337 %267
       %4339 = OpINotEqual %v2bool %4338 %270
       %4340 = OpBitwiseAnd %v2uint %4337 %272
       %4341 = OpIEqual %v2bool %4340 %270
       %4342 = OpLogicalOr %v2bool %4341 %4339
       %4343 = OpBitwiseAnd %v2uint %4337 %277
       %4344 = OpBitcast %v2float %4343
       %4345 = OpSelect %v2float %4342 %4336 %4344
       %4346 = OpBitcast %uint %4310
       %4347 = OpBitwiseAnd %uint %4346 %uint_2139095040
       %4348 = OpINotEqual %bool %4347 %uint_0
       %4349 = OpBitwiseAnd %uint %4346 %uint_8388607
       %4350 = OpIEqual %bool %4349 %uint_0
       %4351 = OpLogicalOr %bool %4350 %4348
       %4352 = OpBitwiseAnd %uint %4346 %uint_2147483648
       %4353 = OpBitcast %float %4352
       %4354 = OpSelect %float %4351 %4310 %4353
       %4355 = OpFOrdEqual %v2bool %4345 %290
       %4356 = OpVectorShuffle %v2bool %4355 %292 1 4294967295
       %4357 = OpLogicalOr %v2bool %4356 %4355
       %4358 = OpCompositeExtract %bool %4357 0
       %4359 = OpLogicalNot %bool %4358
               OpSelectionMerge %4810 None
               OpBranchConditional %4359 %4362 %4810
       %4362 = OpLabel
       %4363 = OpFUnordNotEqual %bool %4354 %float_0
               OpSelectionMerge %4797 None
               OpBranchConditional %4363 %4366 %4797
       %4366 = OpLabel
       %4367 = OpBitcast %v2uint %4345
       %4368 = OpCompositeExtract %uint %4367 1
       %4369 = OpShiftRightLogical %uint %4368 %uint_23
       %4370 = OpBitwiseAnd %uint %4369 %uint_255
       %4371 = OpCompositeExtract %uint %4367 0
       %4372 = OpShiftRightLogical %uint %4371 %uint_23
       %4373 = OpBitwiseAnd %uint %4372 %uint_255
       %4374 = OpBitcast %uint %4354
       %4375 = OpShiftRightLogical %uint %4374 %uint_23
       %4376 = OpBitwiseAnd %uint %4375 %uint_255
       %4377 = OpIAdd %uint %4376 %uint_4294967169
       %4378 = OpBitwiseAnd %v2uint %4367 %272
       %4379 = OpBitwiseOr %v2uint %4378 %319
       %4380 = OpBitwiseAnd %uint %4374 %uint_2147483648
       %4381 = OpBitwiseXor %uint %4371 %4368
       %4382 = OpBitwiseAnd %uint %4381 %uint_2147483648
       %4383 = OpCompositeExtract %uint %4379 0
       %4384 = OpCompositeExtract %uint %4379 1
       %4385 = OpUMulExtended %_struct_58 %4384 %4383
       %4386 = OpCompositeExtract %uint %4385 1
       %4387 = OpIMul %uint %4383 %4384
       %4388 = OpShiftLeftLogical %uint %4386 %uint_14
       %4389 = OpShiftRightLogical %uint %4387 %uint_18
       %4390 = OpBitwiseOr %uint %4389 %4388
       %4391 = OpShiftLeftLogical %uint %4387 %uint_14
       %4392 = OpCompositeConstruct %v2uint %4391 %4390
       %4393 = OpBitwiseOr %uint %4390 %4391
       %4394 = OpIEqual %bool %4393 %uint_0
       %4395 = OpIAdd %uint %4370 %uint_4294967042
       %4396 = OpIAdd %uint %4395 %4373
       %4397 = OpSelect %uint %4394 %uint_0 %4396
       %4398 = OpBitwiseOr %uint %4397 %4393
       %4399 = OpINotEqual %bool %4398 %uint_0
               OpSelectionMerge %4794 None
               OpBranchConditional %4399 %4402 %4794
       %4402 = OpLabel
       %4403 = OpISub %uint %4397 %4377
       %4404 = OpShiftLeftLogical %uint %4374 %uint_5
       %4405 = OpBitwiseAnd %uint %4404 %uint_268435424
       %4406 = OpBitwiseOr %uint %4405 %uint_268435456
       %4407 = OpCompositeInsert %v2uint %4406 %355 1
       %4408 = OpExtInst %uint %184 SAbs %4403
       %4409 = OpINotEqual %bool %4408 %uint_0
               OpSelectionMerge %4436 None
               OpBranchConditional %4409 %4412 %4436
       %4412 = OpLabel
       %4413 = OpUGreaterThanEqual %bool %4408 %uint_32
               OpSelectionMerge %4421 None
               OpBranchConditional %4413 %4416 %4421
       %4416 = OpLabel
       %4417 = OpBitwiseAnd %uint %4408 %uint_31
       %4418 = OpShiftLeftLogical %uint %uint_1 %4417
       %4419 = OpCompositeInsert %v2uint %4418 %355 1
               OpBranch %4421
       %4421 = OpLabel
       %4422 = OpPhi %v2uint %4419 %4416 %528 %4412
       %4423 = OpPhi %bool %false %4416 %true %4412
               OpSelectionMerge %4433 None
               OpBranchConditional %4423 %4426 %4433
       %4426 = OpLabel
       %4427 = OpISub %uint %uint_0 %4408
       %4428 = OpBitwiseAnd %uint %4427 %uint_31
       %4429 = OpShiftRightLogical %uint %uint_1 %4428
       %4430 = OpShiftLeftLogical %uint %uint_1 %4408
       %4431 = OpCompositeConstruct %v2uint %4430 %4429
               OpBranch %4433
       %4433 = OpLabel
       %4434 = OpPhi %v2uint %4431 %4426 %4422 %4421
               OpBranch %4436
       %4436 = OpLabel
       %4437 = OpPhi %v2uint %7106 %4402 %4434 %4433
       %4438 = OpCompositeExtract %uint %4437 0
       %4439 = OpShiftRightLogical %uint %4438 %uint_1
       %4440 = OpIAdd %uint %4439 %uint_2147483647
       %4441 = OpBitwiseAnd %uint %4438 %uint_1
       %4442 = OpIAdd %uint %4440 %4441
       %4443 = OpShiftRightLogical %uint %4442 %uint_31
       %4444 = OpIAdd %uint %4438 %uint_4294967295
       %4445 = OpCompositeExtract %uint %4437 1
       %4446 = OpIAdd %uint %4445 %uint_4294967295
       %4447 = OpIAdd %uint %4446 %4443
       %4448 = OpCompositeConstruct %v2uint %4444 %4447
       %4449 = OpSLessThanEqual %bool %4403 %uint_0
               OpSelectionMerge %4501 None
               OpBranchConditional %4449 %4452 %4501
       %4452 = OpLabel
       %4453 = OpSGreaterThanEqual %bool %4403 %uint_4294967233
               OpSelectionMerge %4496 None
               OpBranchConditional %4453 %4456 %4496
       %4456 = OpLabel
       %4457 = OpISub %uint %uint_0 %4403
       %4458 = OpBitwiseAnd %v2uint %4448 %4392
       %4459 = OpINotEqual %bool %4397 %4377
               OpSelectionMerge %4491 None
               OpBranchConditional %4459 %4462 %4491
       %4462 = OpLabel
       %4463 = OpUGreaterThanEqual %bool %4457 %uint_32
               OpSelectionMerge %4471 None
               OpBranchConditional %4463 %4466 %4471
       %4466 = OpLabel
       %4467 = OpBitwiseAnd %uint %4457 %uint_31
       %4468 = OpShiftRightLogical %uint %4390 %4467
       %4469 = OpCompositeInsert %v2uint %4468 %420 0
               OpBranch %4471
       %4471 = OpLabel
       %4472 = OpPhi %v2uint %4407 %4466 %528 %4462
       %4473 = OpPhi %v2uint %4458 %4466 %528 %4462
       %4474 = OpPhi %v2uint %4469 %4466 %528 %4462
       %4475 = OpPhi %bool %false %4466 %true %4462
               OpSelectionMerge %4486 None
               OpBranchConditional %4475 %4478 %4486
       %4478 = OpLabel
       %4479 = OpShiftRightLogical %uint %4391 %4457
       %4480 = OpBitwiseAnd %uint %4403 %uint_31
       %4481 = OpShiftLeftLogical %uint %4390 %4480
       %4482 = OpBitwiseOr %uint %4481 %4479
       %4483 = OpShiftRightLogical %uint %4390 %4457
       %4484 = OpCompositeConstruct %v2uint %4482 %4483
               OpBranch %4486
       %4486 = OpLabel
       %4487 = OpPhi %v2uint %4407 %4478 %4472 %4471
       %4488 = OpPhi %v2uint %4458 %4478 %4473 %4471
       %4489 = OpPhi %v2uint %4484 %4478 %4474 %4471
               OpBranch %4491
       %4491 = OpLabel
       %4492 = OpPhi %v2uint %4487 %4486 %4407 %4456
       %4493 = OpPhi %v2uint %4488 %4486 %4458 %4456
       %4494 = OpPhi %v2uint %4489 %4486 %4392 %4456
               OpBranch %4496
       %4496 = OpLabel
       %4497 = OpPhi %v2uint %4492 %4491 %4407 %4452
       %4498 = OpPhi %v2uint %4493 %4491 %4392 %4452
       %4499 = OpPhi %v2uint %4494 %4491 %270 %4452
               OpBranch %4501
       %4501 = OpLabel
       %4502 = OpPhi %v2uint %4497 %4496 %528 %4436
       %4503 = OpPhi %v2uint %4498 %4496 %528 %4436
       %4504 = OpPhi %v2uint %4499 %4496 %528 %4436
       %4505 = OpPhi %bool %false %4496 %true %4436
               OpSelectionMerge %4547 None
               OpBranchConditional %4505 %4508 %4547
       %4508 = OpLabel
       %4509 = OpULessThanEqual %bool %4403 %uint_63
               OpSelectionMerge %4542 None
               OpBranchConditional %4509 %4512 %4542
       %4512 = OpLabel
       %4513 = OpBitwiseAnd %uint %4447 %4406
       %4514 = OpCompositeInsert %v2uint %4513 %355 1
       %4515 = OpUGreaterThanEqual %bool %4403 %uint_32
               OpSelectionMerge %4523 None
               OpBranchConditional %4515 %4518 %4523
       %4518 = OpLabel
       %4519 = OpBitwiseAnd %uint %4403 %uint_31
       %4520 = OpShiftRightLogical %uint %4406 %4519
       %4521 = OpCompositeInsert %v2uint %4520 %420 0
               OpBranch %4523
       %4523 = OpLabel
       %4524 = OpPhi %v2uint %4521 %4518 %528 %4512
       %4525 = OpPhi %v2uint %4514 %4518 %528 %4512
       %4526 = OpPhi %v2uint %4392 %4518 %528 %4512
       %4527 = OpPhi %bool %false %4518 %true %4512
               OpSelectionMerge %4537 None
               OpBranchConditional %4527 %4530 %4537
       %4530 = OpLabel
       %4531 = OpISub %uint %uint_0 %4403
       %4532 = OpBitwiseAnd %uint %4531 %uint_31
       %4533 = OpShiftLeftLogical %uint %4406 %4532
       %4534 = OpShiftRightLogical %uint %4406 %4403
       %4535 = OpCompositeConstruct %v2uint %4533 %4534
               OpBranch %4537
       %4537 = OpLabel
       %4538 = OpPhi %v2uint %4535 %4530 %4524 %4523
       %4539 = OpPhi %v2uint %4514 %4530 %4525 %4523
       %4540 = OpPhi %v2uint %4392 %4530 %4526 %4523
               OpBranch %4542
       %4542 = OpLabel
       %4543 = OpPhi %v2uint %4538 %4537 %270 %4508
       %4544 = OpPhi %v2uint %4539 %4537 %4407 %4508
       %4545 = OpPhi %v2uint %4540 %4537 %4392 %4508
               OpBranch %4547
       %4547 = OpLabel
       %4548 = OpPhi %v2uint %4504 %4501 %4545 %4542
       %4549 = OpPhi %v2uint %4503 %4501 %4544 %4542
       %4550 = OpPhi %v2uint %4502 %4501 %4543 %4542
       %4551 = OpExtInst %uint %184 SMax %4397 %4377
       %4552 = OpINotEqual %bool %4380 %4382
               OpSelectionMerge %4599 None
               OpBranchConditional %4552 %4555 %4599
       %4555 = OpLabel
       %4556 = OpCompositeExtract %uint %4550 0
       %4557 = OpBitwiseXor %uint %4556 %uint_4294967295
       %4558 = OpCompositeExtract %uint %4550 1
       %4559 = OpBitwiseXor %uint %4558 %uint_4294967295
       %4560 = OpShiftRightLogical %uint %4557 %uint_1
       %4561 = OpBitwiseAnd %uint %4557 %uint_1
       %4562 = OpIAdd %uint %4560 %4561
       %4563 = OpShiftRightLogical %uint %4562 %uint_31
       %4564 = OpISub %uint %uint_0 %4556
       %4565 = OpCompositeExtract %uint %4548 0
       %4566 = OpShiftRightLogical %uint %4565 %uint_1
       %4567 = OpShiftRightLogical %uint %4564 %uint_1
       %4568 = OpIAdd %uint %4567 %4566
       %4569 = OpBitwiseAnd %uint %4565 %uint_1
       %4570 = OpBitwiseAnd %uint %4569 %4564
       %4571 = OpIAdd %uint %4568 %4570
       %4572 = OpShiftRightLogical %uint %4571 %uint_31
       %4573 = OpISub %uint %4565 %4556
       %4574 = OpCompositeExtract %uint %4548 1
       %4575 = OpVectorShuffle %v2uint %4549 %528 1 4294967295
       %4576 = OpBitwiseOr %v2uint %4575 %4549
       %4577 = OpCompositeExtract %uint %4576 0
       %4578 = OpINotEqual %bool %4577 %uint_0
       %4579 = OpSGreaterThan %bool %4397 %4377
       %4580 = OpSelect %bool %4578 %4579 %false
       %4581 = OpSelect %v2uint %4580 %536 %270
       %4582 = OpCompositeExtract %uint %4581 0
       %4583 = OpShiftRightLogical %uint %4573 %uint_1
       %4584 = OpShiftRightLogical %uint %4582 %uint_1
       %4585 = OpIAdd %uint %4584 %4583
       %4586 = OpBitwiseAnd %uint %4573 %uint_1
       %4587 = OpBitwiseAnd %uint %4586 %4582
       %4588 = OpIAdd %uint %4585 %4587
       %4589 = OpShiftRightLogical %uint %4588 %uint_31
       %4590 = OpIAdd %uint %4582 %4573
       %4591 = OpCompositeExtract %uint %4581 1
       %4592 = OpIAdd %uint %4574 %4559
       %4593 = OpIAdd %uint %4592 %4563
       %4594 = OpIAdd %uint %4593 %4572
       %4595 = OpIAdd %uint %4594 %4591
       %4596 = OpIAdd %uint %4595 %4589
       %4597 = OpCompositeConstruct %v2uint %4590 %4596
               OpBranch %4599
       %4599 = OpLabel
       %4600 = OpPhi %v2uint %4597 %4555 %528 %4547
       %4601 = OpPhi %bool %false %4555 %true %4547
               OpSelectionMerge %4620 None
               OpBranchConditional %4601 %4604 %4620
       %4604 = OpLabel
       %4605 = OpCompositeExtract %uint %4548 0
       %4606 = OpCompositeExtract %uint %4550 0
       %4607 = OpShiftRightLogical %uint %4605 %uint_1
       %4608 = OpShiftRightLogical %uint %4606 %uint_1
       %4609 = OpIAdd %uint %4608 %4607
       %4610 = OpBitwiseAnd %uint %4605 %uint_1
       %4611 = OpBitwiseAnd %uint %4610 %4606
       %4612 = OpIAdd %uint %4609 %4611
       %4613 = OpShiftRightLogical %uint %4612 %uint_31
       %4614 = OpIAdd %uint %4606 %4605
       %4615 = OpIAdd %v2uint %4550 %4548
       %4616 = OpCompositeExtract %uint %4615 1
       %4617 = OpIAdd %uint %4613 %4616
       %4618 = OpCompositeConstruct %v2uint %4614 %4617
               OpBranch %4620
       %4620 = OpLabel
       %4621 = OpPhi %v2uint %4618 %4604 %4600 %4599
       %4622 = OpCompositeExtract %uint %4621 1
       %4623 = OpSLessThan %bool %4622 %uint_0
               OpSelectionMerge %4639 None
               OpBranchConditional %4623 %4626 %4639
       %4626 = OpLabel
       %4627 = OpCompositeExtract %uint %4621 0
       %4628 = OpBitwiseXor %uint %4627 %uint_4294967295
       %4629 = OpBitwiseXor %uint %4622 %uint_4294967295
       %4630 = OpShiftRightLogical %uint %4628 %uint_1
       %4631 = OpBitwiseAnd %uint %4628 %uint_1
       %4632 = OpIAdd %uint %4630 %4631
       %4633 = OpShiftRightLogical %uint %4632 %uint_31
       %4634 = OpISub %uint %uint_0 %4627
       %4635 = OpIAdd %uint %4633 %4629
       %4636 = OpCompositeConstruct %v2uint %4634 %4635
       %4637 = OpBitwiseXor %uint %4382 %uint_2147483648
               OpBranch %4639
       %4639 = OpLabel
       %4640 = OpPhi %uint %4637 %4626 %4382 %4620
       %4641 = OpPhi %v2uint %4636 %4626 %4621 %4620
       %4642 = OpCompositeExtract %uint %4641 1
       %4643 = OpExtInst %uint %184 FindUMsb %4642
       %4644 = OpISub %uint %uint_31 %4643
       %4645 = OpIEqual %bool %4642 %uint_0
       %4646 = OpCompositeExtract %uint %4641 0
       %4647 = OpExtInst %uint %184 FindUMsb %4646
       %4648 = OpISub %uint %uint_31 %4647
       %4649 = OpIAdd %uint %4648 %uint_32
       %4650 = OpSelect %uint %4645 %4649 %4644
       %4651 = OpISub %uint %uint_3 %4650
       %4652 = OpIAdd %uint %4651 %4551
       %4653 = OpUGreaterThan %bool %4650 %uint_3
               OpSelectionMerge %4684 None
               OpBranchConditional %4653 %4656 %4684
       %4656 = OpLabel
       %4657 = OpIAdd %uint %4650 %uint_4294967293
       %4658 = OpUGreaterThanEqual %bool %4657 %uint_32
               OpSelectionMerge %4666 None
               OpBranchConditional %4658 %4661 %4666
       %4661 = OpLabel
       %4662 = OpBitwiseAnd %uint %4657 %uint_31
       %4663 = OpShiftLeftLogical %uint %4646 %4662
       %4664 = OpCompositeInsert %v2uint %4663 %355 1
               OpBranch %4666
       %4666 = OpLabel
       %4667 = OpPhi %uint %uint_0 %4661 %354 %4656
       %4668 = OpPhi %v2uint %4664 %4661 %528 %4656
       %4669 = OpPhi %bool %false %4661 %true %4656
               OpSelectionMerge %4680 None
               OpBranchConditional %4669 %4672 %4680
       %4672 = OpLabel
       %4673 = OpShiftLeftLogical %uint %4642 %4657
       %4674 = OpBitwiseAnd %uint %4651 %uint_31
       %4675 = OpShiftRightLogical %uint %4646 %4674
       %4676 = OpBitwiseOr %uint %4675 %4673
       %4677 = OpShiftLeftLogical %uint %4646 %4657
       %4678 = OpCompositeConstruct %v2uint %4677 %4676
               OpBranch %4680
       %4680 = OpLabel
       %4681 = OpPhi %uint %uint_0 %4672 %4667 %4666
       %4682 = OpPhi %v2uint %4678 %4672 %4668 %4666
               OpBranch %4684
       %4684 = OpLabel
       %4685 = OpPhi %v2uint %4641 %4639 %4682 %4680
       %4686 = OpPhi %uint %4651 %4639 %4681 %4680
       %4687 = OpIAdd %uint %4686 %uint_5
       %4688 = OpBitwiseAnd %uint %4687 %uint_31
       %4689 = OpShiftLeftLogical %uint %uint_1 %4688
       %4690 = OpCompositeInsert %v2uint %4689 %355 1
       %4691 = OpIAdd %uint %4689 %uint_4294967295
       %4692 = OpCompositeInsert %v2uint %4691 %650 1
       %4693 = OpBitwiseAnd %v2uint %4692 %4685
       %4694 = OpCompositeExtract %uint %4693 1
       %4695 = OpBitwiseAnd %v2uint %4690 %4685
       %4696 = OpIAdd %uint %4686 %uint_2
       %4697 = OpBitwiseAnd %uint %4696 %uint_31
       %4698 = OpShiftLeftLogical %uint %uint_4 %4697
       %4699 = OpUGreaterThan %bool %4694 %4698
       %4700 = OpLogicalNot %bool %4699
               OpSelectionMerge %4731 None
               OpBranchConditional %4700 %4703 %4731
       %4703 = OpLabel
       %4704 = OpCompositeExtract %uint %4693 0
       %4705 = OpVectorShuffle %v2uint %4549 %528 1 4294967295
       %4706 = OpBitwiseOr %v2uint %4705 %4549
       %4707 = OpCompositeExtract %uint %4706 0
       %4708 = OpINotEqual %bool %4707 %uint_0
       %4709 = OpSelect %uint %4708 %uint_1 %uint_0
       %4710 = OpBitwiseOr %uint %4704 %4709
       %4711 = OpIEqual %bool %4694 %4698
       %4712 = OpINotEqual %bool %4710 %uint_0
       %4713 = OpSelect %bool %4711 %4712 %false
       %4714 = OpLogicalNot %bool %4713
               OpSelectionMerge %4727 None
               OpBranchConditional %4714 %4717 %4727
       %4717 = OpLabel
       %4718 = OpINotEqual %bool %4694 %4698
       %4719 = OpLogicalOr %bool %4718 %4712
       %4720 = OpVectorShuffle %v2uint %4695 %528 1 4294967295
       %4721 = OpBitwiseOr %v2uint %4720 %4695
       %4722 = OpCompositeExtract %uint %4721 0
       %4723 = OpIEqual %bool %4722 %uint_0
       %4724 = OpSelect %bool %4719 %true %4723
       %4725 = OpLogicalNot %bool %4724
               OpBranch %4727
       %4727 = OpLabel
       %4728 = OpPhi %v2uint %4685 %4717 %528 %4703
       %4729 = OpPhi %bool %4725 %4717 %4713 %4703
               OpBranch %4731
       %4731 = OpLabel
       %4732 = OpPhi %v2uint %4728 %4727 %528 %4684
       %4733 = OpPhi %bool %4729 %4727 %4699 %4684
               OpSelectionMerge %4741 None
               OpBranchConditional %4733 %4736 %4741
       %4736 = OpLabel
       %4737 = OpCompositeExtract %uint %4685 1
       %4738 = OpIAdd %uint %4689 %4737
       %4739 = OpCompositeInsert %v2uint %4738 %4685 1
               OpBranch %4741
       %4741 = OpLabel
       %4742 = OpPhi %v2uint %4739 %4736 %4732 %4731
       %4743 = OpCompositeExtract %uint %4742 1
       %4744 = OpShiftRightLogical %uint %4743 %4688
       %4745 = OpUGreaterThan %bool %4744 %uint_16777215
       %4746 = OpSelect %uint %4745 %uint_1 %uint_0
       %4747 = OpShiftRightLogical %uint %4744 %4746
       %4748 = OpIAdd %uint %4652 %4746
       %4749 = OpINotEqual %bool %4747 %uint_0
               OpSelectionMerge %4791 None
               OpBranchConditional %4749 %4752 %4791
       %4752 = OpLabel
       %4753 = OpSLessThanEqual %bool %4748 %uint_127
               OpSelectionMerge %4779 None
               OpBranchConditional %4753 %4756 %4779
       %4756 = OpLabel
       %4757 = OpSGreaterThanEqual %bool %4748 %uint_4294967170
               OpSelectionMerge %4768 None
               OpBranchConditional %4757 %4760 %4768
       %4760 = OpLabel
       %4761 = OpShiftLeftLogical %uint %4748 %uint_23
       %4762 = OpIAdd %uint %4761 %uint_1065353216
       %4763 = OpBitwiseAnd %uint %4747 %uint_8388607
       %4764 = OpBitwiseOr %uint %4762 %4763
       %4765 = OpBitwiseOr %uint %4764 %4640
       %4766 = OpBitcast %float %4765
               OpBranch %4768
       %4768 = OpLabel
       %4769 = OpPhi %float %4766 %4760 %261 %4756
       %4770 = OpPhi %bool %false %4760 %true %4756
               OpSelectionMerge %4776 None
               OpBranchConditional %4770 %4773 %4776
       %4773 = OpLabel
       %4774 = OpBitcast %float %4640
               OpBranch %4776
       %4776 = OpLabel
       %4777 = OpPhi %float %4774 %4773 %4769 %4768
               OpBranch %4779
       %4779 = OpLabel
       %4780 = OpPhi %float %4777 %4776 %261 %4752
       %4781 = OpPhi %bool %false %4776 %true %4752
               OpSelectionMerge %4788 None
               OpBranchConditional %4781 %4784 %4788
       %4784 = OpLabel
       %4785 = OpBitwiseOr %uint %4640 %uint_2139095040
       %4786 = OpBitcast %float %4785
               OpBranch %4788
       %4788 = OpLabel
       %4789 = OpPhi %float %4786 %4784 %4780 %4779
               OpBranch %4791
       %4791 = OpLabel
       %4792 = OpPhi %float %4789 %4788 %float_0 %4741
               OpBranch %4794
       %4794 = OpLabel
       %4795 = OpPhi %float %4792 %4791 %4354 %4366
               OpBranch %4797
       %4797 = OpLabel
       %4798 = OpPhi %float %4795 %4794 %261 %4362
       %4799 = OpPhi %bool %false %4794 %true %4362
               OpSelectionMerge %4807 None
               OpBranchConditional %4799 %4802 %4807
       %4802 = OpLabel
       %4803 = OpVectorShuffle %v2float %4345 %768 1 4294967295
       %4804 = OpFMul %v2float %4345 %4803
       %4805 = OpCompositeExtract %float %4804 0
               OpBranch %4807
       %4807 = OpLabel
       %4808 = OpPhi %float %4805 %4802 %4798 %4797
               OpBranch %4810
       %4810 = OpLabel
       %4811 = OpPhi %float %4808 %4807 %4354 %4335
               OpBranch %4813
       %4813 = OpLabel
       %4814 = OpPhi %float %4811 %4810 %4310 %4330
               OpBranch %4816
       %4816 = OpLabel
       %4817 = OpPhi %float %261 %4813 %4310 %4325
       %4818 = OpPhi %float %4814 %4813 %261 %4325
       %4819 = OpPhi %bool %false %4813 %true %4325
               OpBranch %4821
       %4821 = OpLabel
       %4822 = OpPhi %float %4817 %4816 %4310 %4320
       %4823 = OpPhi %float %4818 %4816 %261 %4320
       %4824 = OpPhi %bool %4819 %4816 %4321 %4320
               OpBranch %4826
       %4826 = OpLabel
       %4827 = OpPhi %float %4822 %4821 %4310 %4315
       %4828 = OpPhi %float %4823 %4821 %261 %4315
       %4829 = OpPhi %bool %4824 %4821 %4316 %4315
               OpBranch %4831
       %4831 = OpLabel
       %4832 = OpPhi %float %4827 %4826 %4310 %4309
       %4833 = OpPhi %float %4828 %4826 %261 %4309
       %4834 = OpPhi %bool %4829 %4826 %4311 %4309
               OpBranch %4836
       %4836 = OpLabel
       %4837 = OpPhi %float %4832 %4831 %261 %3624
       %4838 = OpPhi %float %4833 %4831 %261 %3624
       %4839 = OpPhi %bool %4834 %4831 %false %3624
       %4840 = OpPhi %bool %false %4831 %true %3624
               OpSelectionMerge %4846 None
               OpBranchConditional %4840 %4843 %4846
       %4843 = OpLabel
       %4844 = OpFSub %float %3778 %3778
               OpBranch %4846
       %4846 = OpLabel
       %4847 = OpPhi %float %4844 %4843 %4837 %4836
       %4848 = OpPhi %float %261 %4843 %4838 %4836
       %4849 = OpPhi %bool %true %4843 %4839 %4836
               OpSelectionMerge %4856 None
               OpBranchConditional %4849 %4852 %4856
       %4852 = OpLabel
       %4853 = OpFMul %float %3757 %float_7_54978942en08
       %4854 = OpFAdd %float %4853 %4847
               OpBranch %4856
       %4856 = OpLabel
       %4857 = OpPhi %float %4854 %4852 %4848 %4846
       %4858 = OpIsNan %bool %3777
       %4859 = OpLogicalNot %bool %4858
               OpSelectionMerge %5384 None
               OpBranchConditional %4859 %4862 %5384
       %4862 = OpLabel
       %4863 = OpIsNan %bool %float_1_57079625
       %4864 = OpLogicalNot %bool %4863
               OpSelectionMerge %5380 None
               OpBranchConditional %4864 %4867 %5380
       %4867 = OpLabel
       %4868 = OpIsNan %bool %4857
       %4869 = OpLogicalNot %bool %4868
               OpSelectionMerge %5376 None
               OpBranchConditional %4869 %4872 %5376
       %4872 = OpLabel
       %4873 = OpIsInf %bool %3777
       %4874 = OpLogicalNot %bool %4873
               OpSelectionMerge %5372 None
               OpBranchConditional %4874 %4877 %5372
       %4877 = OpLabel
       %4878 = OpIsInf %bool %float_1_57079625
       %4879 = OpLogicalNot %bool %4878
               OpSelectionMerge %5368 None
               OpBranchConditional %4879 %4882 %5368
       %4882 = OpLabel
       %4883 = OpIsInf %bool %4857
       %4884 = OpLogicalNot %bool %4883
               OpSelectionMerge %5365 None
               OpBranchConditional %4884 %4887 %5365
       %4887 = OpLabel
       %4888 = OpCompositeInsert %v2float %3777 %262 1
       %4889 = OpBitcast %v2uint %4888
       %4890 = OpBitwiseAnd %v2uint %4889 %267
       %4891 = OpINotEqual %v2bool %4890 %270
       %4892 = OpBitwiseAnd %v2uint %4889 %272
       %4893 = OpIEqual %v2bool %4892 %270
       %4894 = OpLogicalOr %v2bool %4893 %4891
       %4895 = OpBitwiseAnd %v2uint %4889 %277
       %4896 = OpBitcast %v2float %4895
       %4897 = OpSelect %v2float %4894 %4888 %4896
       %4898 = OpBitcast %uint %4857
       %4899 = OpBitwiseAnd %uint %4898 %uint_2139095040
       %4900 = OpINotEqual %bool %4899 %uint_0
       %4901 = OpBitwiseAnd %uint %4898 %uint_8388607
       %4902 = OpIEqual %bool %4901 %uint_0
       %4903 = OpLogicalOr %bool %4902 %4900
       %4904 = OpBitwiseAnd %uint %4898 %uint_2147483648
       %4905 = OpBitcast %float %4904
       %4906 = OpSelect %float %4903 %4857 %4905
       %4907 = OpFOrdEqual %v2bool %4897 %290
       %4908 = OpVectorShuffle %v2bool %4907 %292 1 4294967295
       %4909 = OpLogicalOr %v2bool %4908 %4907
       %4910 = OpCompositeExtract %bool %4909 0
       %4911 = OpLogicalNot %bool %4910
               OpSelectionMerge %5362 None
               OpBranchConditional %4911 %4914 %5362
       %4914 = OpLabel
       %4915 = OpFUnordNotEqual %bool %4906 %float_0
               OpSelectionMerge %5349 None
               OpBranchConditional %4915 %4918 %5349
       %4918 = OpLabel
       %4919 = OpBitcast %v2uint %4897
       %4920 = OpCompositeExtract %uint %4919 1
       %4921 = OpShiftRightLogical %uint %4920 %uint_23
       %4922 = OpBitwiseAnd %uint %4921 %uint_255
       %4923 = OpCompositeExtract %uint %4919 0
       %4924 = OpShiftRightLogical %uint %4923 %uint_23
       %4925 = OpBitwiseAnd %uint %4924 %uint_255
       %4926 = OpBitcast %uint %4906
       %4927 = OpShiftRightLogical %uint %4926 %uint_23
       %4928 = OpBitwiseAnd %uint %4927 %uint_255
       %4929 = OpIAdd %uint %4928 %uint_4294967169
       %4930 = OpBitwiseAnd %v2uint %4919 %272
       %4931 = OpBitwiseOr %v2uint %4930 %319
       %4932 = OpBitwiseAnd %uint %4926 %uint_2147483648
       %4933 = OpBitwiseXor %uint %4923 %4920
       %4934 = OpBitwiseAnd %uint %4933 %uint_2147483648
       %4935 = OpCompositeExtract %uint %4931 0
       %4936 = OpCompositeExtract %uint %4931 1
       %4937 = OpUMulExtended %_struct_58 %4936 %4935
       %4938 = OpCompositeExtract %uint %4937 1
       %4939 = OpIMul %uint %4935 %4936
       %4940 = OpShiftLeftLogical %uint %4938 %uint_14
       %4941 = OpShiftRightLogical %uint %4939 %uint_18
       %4942 = OpBitwiseOr %uint %4941 %4940
       %4943 = OpShiftLeftLogical %uint %4939 %uint_14
       %4944 = OpCompositeConstruct %v2uint %4943 %4942
       %4945 = OpBitwiseOr %uint %4942 %4943
       %4946 = OpIEqual %bool %4945 %uint_0
       %4947 = OpIAdd %uint %4922 %uint_4294967042
       %4948 = OpIAdd %uint %4947 %4925
       %4949 = OpSelect %uint %4946 %uint_0 %4948
       %4950 = OpBitwiseOr %uint %4949 %4945
       %4951 = OpINotEqual %bool %4950 %uint_0
               OpSelectionMerge %5346 None
               OpBranchConditional %4951 %4954 %5346
       %4954 = OpLabel
       %4955 = OpISub %uint %4949 %4929
       %4956 = OpShiftLeftLogical %uint %4926 %uint_5
       %4957 = OpBitwiseAnd %uint %4956 %uint_268435424
       %4958 = OpBitwiseOr %uint %4957 %uint_268435456
       %4959 = OpCompositeInsert %v2uint %4958 %355 1
       %4960 = OpExtInst %uint %184 SAbs %4955
       %4961 = OpINotEqual %bool %4960 %uint_0
               OpSelectionMerge %4988 None
               OpBranchConditional %4961 %4964 %4988
       %4964 = OpLabel
       %4965 = OpUGreaterThanEqual %bool %4960 %uint_32
               OpSelectionMerge %4973 None
               OpBranchConditional %4965 %4968 %4973
       %4968 = OpLabel
       %4969 = OpBitwiseAnd %uint %4960 %uint_31
       %4970 = OpShiftLeftLogical %uint %uint_1 %4969
       %4971 = OpCompositeInsert %v2uint %4970 %355 1
               OpBranch %4973
       %4973 = OpLabel
       %4974 = OpPhi %v2uint %4971 %4968 %528 %4964
       %4975 = OpPhi %bool %false %4968 %true %4964
               OpSelectionMerge %4985 None
               OpBranchConditional %4975 %4978 %4985
       %4978 = OpLabel
       %4979 = OpISub %uint %uint_0 %4960
       %4980 = OpBitwiseAnd %uint %4979 %uint_31
       %4981 = OpShiftRightLogical %uint %uint_1 %4980
       %4982 = OpShiftLeftLogical %uint %uint_1 %4960
       %4983 = OpCompositeConstruct %v2uint %4982 %4981
               OpBranch %4985
       %4985 = OpLabel
       %4986 = OpPhi %v2uint %4983 %4978 %4974 %4973
               OpBranch %4988
       %4988 = OpLabel
       %4989 = OpPhi %v2uint %7106 %4954 %4986 %4985
       %4990 = OpCompositeExtract %uint %4989 0
       %4991 = OpShiftRightLogical %uint %4990 %uint_1
       %4992 = OpIAdd %uint %4991 %uint_2147483647
       %4993 = OpBitwiseAnd %uint %4990 %uint_1
       %4994 = OpIAdd %uint %4992 %4993
       %4995 = OpShiftRightLogical %uint %4994 %uint_31
       %4996 = OpIAdd %uint %4990 %uint_4294967295
       %4997 = OpCompositeExtract %uint %4989 1
       %4998 = OpIAdd %uint %4997 %uint_4294967295
       %4999 = OpIAdd %uint %4998 %4995
       %5000 = OpCompositeConstruct %v2uint %4996 %4999
       %5001 = OpSLessThanEqual %bool %4955 %uint_0
               OpSelectionMerge %5053 None
               OpBranchConditional %5001 %5004 %5053
       %5004 = OpLabel
       %5005 = OpSGreaterThanEqual %bool %4955 %uint_4294967233
               OpSelectionMerge %5048 None
               OpBranchConditional %5005 %5008 %5048
       %5008 = OpLabel
       %5009 = OpISub %uint %uint_0 %4955
       %5010 = OpBitwiseAnd %v2uint %5000 %4944
       %5011 = OpINotEqual %bool %4949 %4929
               OpSelectionMerge %5043 None
               OpBranchConditional %5011 %5014 %5043
       %5014 = OpLabel
       %5015 = OpUGreaterThanEqual %bool %5009 %uint_32
               OpSelectionMerge %5023 None
               OpBranchConditional %5015 %5018 %5023
       %5018 = OpLabel
       %5019 = OpBitwiseAnd %uint %5009 %uint_31
       %5020 = OpShiftRightLogical %uint %4942 %5019
       %5021 = OpCompositeInsert %v2uint %5020 %420 0
               OpBranch %5023
       %5023 = OpLabel
       %5024 = OpPhi %v2uint %4959 %5018 %528 %5014
       %5025 = OpPhi %v2uint %5010 %5018 %528 %5014
       %5026 = OpPhi %v2uint %5021 %5018 %528 %5014
       %5027 = OpPhi %bool %false %5018 %true %5014
               OpSelectionMerge %5038 None
               OpBranchConditional %5027 %5030 %5038
       %5030 = OpLabel
       %5031 = OpShiftRightLogical %uint %4943 %5009
       %5032 = OpBitwiseAnd %uint %4955 %uint_31
       %5033 = OpShiftLeftLogical %uint %4942 %5032
       %5034 = OpBitwiseOr %uint %5033 %5031
       %5035 = OpShiftRightLogical %uint %4942 %5009
       %5036 = OpCompositeConstruct %v2uint %5034 %5035
               OpBranch %5038
       %5038 = OpLabel
       %5039 = OpPhi %v2uint %4959 %5030 %5024 %5023
       %5040 = OpPhi %v2uint %5010 %5030 %5025 %5023
       %5041 = OpPhi %v2uint %5036 %5030 %5026 %5023
               OpBranch %5043
       %5043 = OpLabel
       %5044 = OpPhi %v2uint %5039 %5038 %4959 %5008
       %5045 = OpPhi %v2uint %5040 %5038 %5010 %5008
       %5046 = OpPhi %v2uint %5041 %5038 %4944 %5008
               OpBranch %5048
       %5048 = OpLabel
       %5049 = OpPhi %v2uint %5044 %5043 %4959 %5004
       %5050 = OpPhi %v2uint %5045 %5043 %4944 %5004
       %5051 = OpPhi %v2uint %5046 %5043 %270 %5004
               OpBranch %5053
       %5053 = OpLabel
       %5054 = OpPhi %v2uint %5049 %5048 %528 %4988
       %5055 = OpPhi %v2uint %5050 %5048 %528 %4988
       %5056 = OpPhi %v2uint %5051 %5048 %528 %4988
       %5057 = OpPhi %bool %false %5048 %true %4988
               OpSelectionMerge %5099 None
               OpBranchConditional %5057 %5060 %5099
       %5060 = OpLabel
       %5061 = OpULessThanEqual %bool %4955 %uint_63
               OpSelectionMerge %5094 None
               OpBranchConditional %5061 %5064 %5094
       %5064 = OpLabel
       %5065 = OpBitwiseAnd %uint %4999 %4958
       %5066 = OpCompositeInsert %v2uint %5065 %355 1
       %5067 = OpUGreaterThanEqual %bool %4955 %uint_32
               OpSelectionMerge %5075 None
               OpBranchConditional %5067 %5070 %5075
       %5070 = OpLabel
       %5071 = OpBitwiseAnd %uint %4955 %uint_31
       %5072 = OpShiftRightLogical %uint %4958 %5071
       %5073 = OpCompositeInsert %v2uint %5072 %420 0
               OpBranch %5075
       %5075 = OpLabel
       %5076 = OpPhi %v2uint %5073 %5070 %528 %5064
       %5077 = OpPhi %v2uint %5066 %5070 %528 %5064
       %5078 = OpPhi %v2uint %4944 %5070 %528 %5064
       %5079 = OpPhi %bool %false %5070 %true %5064
               OpSelectionMerge %5089 None
               OpBranchConditional %5079 %5082 %5089
       %5082 = OpLabel
       %5083 = OpISub %uint %uint_0 %4955
       %5084 = OpBitwiseAnd %uint %5083 %uint_31
       %5085 = OpShiftLeftLogical %uint %4958 %5084
       %5086 = OpShiftRightLogical %uint %4958 %4955
       %5087 = OpCompositeConstruct %v2uint %5085 %5086
               OpBranch %5089
       %5089 = OpLabel
       %5090 = OpPhi %v2uint %5087 %5082 %5076 %5075
       %5091 = OpPhi %v2uint %5066 %5082 %5077 %5075
       %5092 = OpPhi %v2uint %4944 %5082 %5078 %5075
               OpBranch %5094
       %5094 = OpLabel
       %5095 = OpPhi %v2uint %5090 %5089 %270 %5060
       %5096 = OpPhi %v2uint %5091 %5089 %4959 %5060
       %5097 = OpPhi %v2uint %5092 %5089 %4944 %5060
               OpBranch %5099
       %5099 = OpLabel
       %5100 = OpPhi %v2uint %5056 %5053 %5097 %5094
       %5101 = OpPhi %v2uint %5055 %5053 %5096 %5094
       %5102 = OpPhi %v2uint %5054 %5053 %5095 %5094
       %5103 = OpExtInst %uint %184 SMax %4949 %4929
       %5104 = OpINotEqual %bool %4932 %4934
               OpSelectionMerge %5151 None
               OpBranchConditional %5104 %5107 %5151
       %5107 = OpLabel
       %5108 = OpCompositeExtract %uint %5102 0
       %5109 = OpBitwiseXor %uint %5108 %uint_4294967295
       %5110 = OpCompositeExtract %uint %5102 1
       %5111 = OpBitwiseXor %uint %5110 %uint_4294967295
       %5112 = OpShiftRightLogical %uint %5109 %uint_1
       %5113 = OpBitwiseAnd %uint %5109 %uint_1
       %5114 = OpIAdd %uint %5112 %5113
       %5115 = OpShiftRightLogical %uint %5114 %uint_31
       %5116 = OpISub %uint %uint_0 %5108
       %5117 = OpCompositeExtract %uint %5100 0
       %5118 = OpShiftRightLogical %uint %5117 %uint_1
       %5119 = OpShiftRightLogical %uint %5116 %uint_1
       %5120 = OpIAdd %uint %5119 %5118
       %5121 = OpBitwiseAnd %uint %5117 %uint_1
       %5122 = OpBitwiseAnd %uint %5121 %5116
       %5123 = OpIAdd %uint %5120 %5122
       %5124 = OpShiftRightLogical %uint %5123 %uint_31
       %5125 = OpISub %uint %5117 %5108
       %5126 = OpCompositeExtract %uint %5100 1
       %5127 = OpVectorShuffle %v2uint %5101 %528 1 4294967295
       %5128 = OpBitwiseOr %v2uint %5127 %5101
       %5129 = OpCompositeExtract %uint %5128 0
       %5130 = OpINotEqual %bool %5129 %uint_0
       %5131 = OpSGreaterThan %bool %4949 %4929
       %5132 = OpSelect %bool %5130 %5131 %false
       %5133 = OpSelect %v2uint %5132 %536 %270
       %5134 = OpCompositeExtract %uint %5133 0
       %5135 = OpShiftRightLogical %uint %5125 %uint_1
       %5136 = OpShiftRightLogical %uint %5134 %uint_1
       %5137 = OpIAdd %uint %5136 %5135
       %5138 = OpBitwiseAnd %uint %5125 %uint_1
       %5139 = OpBitwiseAnd %uint %5138 %5134
       %5140 = OpIAdd %uint %5137 %5139
       %5141 = OpShiftRightLogical %uint %5140 %uint_31
       %5142 = OpIAdd %uint %5134 %5125
       %5143 = OpCompositeExtract %uint %5133 1
       %5144 = OpIAdd %uint %5126 %5111
       %5145 = OpIAdd %uint %5144 %5115
       %5146 = OpIAdd %uint %5145 %5124
       %5147 = OpIAdd %uint %5146 %5143
       %5148 = OpIAdd %uint %5147 %5141
       %5149 = OpCompositeConstruct %v2uint %5142 %5148
               OpBranch %5151
       %5151 = OpLabel
       %5152 = OpPhi %v2uint %5149 %5107 %528 %5099
       %5153 = OpPhi %bool %false %5107 %true %5099
               OpSelectionMerge %5172 None
               OpBranchConditional %5153 %5156 %5172
       %5156 = OpLabel
       %5157 = OpCompositeExtract %uint %5100 0
       %5158 = OpCompositeExtract %uint %5102 0
       %5159 = OpShiftRightLogical %uint %5157 %uint_1
       %5160 = OpShiftRightLogical %uint %5158 %uint_1
       %5161 = OpIAdd %uint %5160 %5159
       %5162 = OpBitwiseAnd %uint %5157 %uint_1
       %5163 = OpBitwiseAnd %uint %5162 %5158
       %5164 = OpIAdd %uint %5161 %5163
       %5165 = OpShiftRightLogical %uint %5164 %uint_31
       %5166 = OpIAdd %uint %5158 %5157
       %5167 = OpIAdd %v2uint %5102 %5100
       %5168 = OpCompositeExtract %uint %5167 1
       %5169 = OpIAdd %uint %5165 %5168
       %5170 = OpCompositeConstruct %v2uint %5166 %5169
               OpBranch %5172
       %5172 = OpLabel
       %5173 = OpPhi %v2uint %5170 %5156 %5152 %5151
       %5174 = OpCompositeExtract %uint %5173 1
       %5175 = OpSLessThan %bool %5174 %uint_0
               OpSelectionMerge %5191 None
               OpBranchConditional %5175 %5178 %5191
       %5178 = OpLabel
       %5179 = OpCompositeExtract %uint %5173 0
       %5180 = OpBitwiseXor %uint %5179 %uint_4294967295
       %5181 = OpBitwiseXor %uint %5174 %uint_4294967295
       %5182 = OpShiftRightLogical %uint %5180 %uint_1
       %5183 = OpBitwiseAnd %uint %5180 %uint_1
       %5184 = OpIAdd %uint %5182 %5183
       %5185 = OpShiftRightLogical %uint %5184 %uint_31
       %5186 = OpISub %uint %uint_0 %5179
       %5187 = OpIAdd %uint %5185 %5181
       %5188 = OpCompositeConstruct %v2uint %5186 %5187
       %5189 = OpBitwiseXor %uint %4934 %uint_2147483648
               OpBranch %5191
       %5191 = OpLabel
       %5192 = OpPhi %uint %5189 %5178 %4934 %5172
       %5193 = OpPhi %v2uint %5188 %5178 %5173 %5172
       %5194 = OpCompositeExtract %uint %5193 1
       %5195 = OpExtInst %uint %184 FindUMsb %5194
       %5196 = OpISub %uint %uint_31 %5195
       %5197 = OpIEqual %bool %5194 %uint_0
       %5198 = OpCompositeExtract %uint %5193 0
       %5199 = OpExtInst %uint %184 FindUMsb %5198
       %5200 = OpISub %uint %uint_31 %5199
       %5201 = OpIAdd %uint %5200 %uint_32
       %5202 = OpSelect %uint %5197 %5201 %5196
       %5203 = OpISub %uint %uint_3 %5202
       %5204 = OpIAdd %uint %5203 %5103
       %5205 = OpUGreaterThan %bool %5202 %uint_3
               OpSelectionMerge %5236 None
               OpBranchConditional %5205 %5208 %5236
       %5208 = OpLabel
       %5209 = OpIAdd %uint %5202 %uint_4294967293
       %5210 = OpUGreaterThanEqual %bool %5209 %uint_32
               OpSelectionMerge %5218 None
               OpBranchConditional %5210 %5213 %5218
       %5213 = OpLabel
       %5214 = OpBitwiseAnd %uint %5209 %uint_31
       %5215 = OpShiftLeftLogical %uint %5198 %5214
       %5216 = OpCompositeInsert %v2uint %5215 %355 1
               OpBranch %5218
       %5218 = OpLabel
       %5219 = OpPhi %uint %uint_0 %5213 %354 %5208
       %5220 = OpPhi %v2uint %5216 %5213 %528 %5208
       %5221 = OpPhi %bool %false %5213 %true %5208
               OpSelectionMerge %5232 None
               OpBranchConditional %5221 %5224 %5232
       %5224 = OpLabel
       %5225 = OpShiftLeftLogical %uint %5194 %5209
       %5226 = OpBitwiseAnd %uint %5203 %uint_31
       %5227 = OpShiftRightLogical %uint %5198 %5226
       %5228 = OpBitwiseOr %uint %5227 %5225
       %5229 = OpShiftLeftLogical %uint %5198 %5209
       %5230 = OpCompositeConstruct %v2uint %5229 %5228
               OpBranch %5232
       %5232 = OpLabel
       %5233 = OpPhi %uint %uint_0 %5224 %5219 %5218
       %5234 = OpPhi %v2uint %5230 %5224 %5220 %5218
               OpBranch %5236
       %5236 = OpLabel
       %5237 = OpPhi %v2uint %5193 %5191 %5234 %5232
       %5238 = OpPhi %uint %5203 %5191 %5233 %5232
       %5239 = OpIAdd %uint %5238 %uint_5
       %5240 = OpBitwiseAnd %uint %5239 %uint_31
       %5241 = OpShiftLeftLogical %uint %uint_1 %5240
       %5242 = OpCompositeInsert %v2uint %5241 %355 1
       %5243 = OpIAdd %uint %5241 %uint_4294967295
       %5244 = OpCompositeInsert %v2uint %5243 %650 1
       %5245 = OpBitwiseAnd %v2uint %5244 %5237
       %5246 = OpCompositeExtract %uint %5245 1
       %5247 = OpBitwiseAnd %v2uint %5242 %5237
       %5248 = OpIAdd %uint %5238 %uint_2
       %5249 = OpBitwiseAnd %uint %5248 %uint_31
       %5250 = OpShiftLeftLogical %uint %uint_4 %5249
       %5251 = OpUGreaterThan %bool %5246 %5250
       %5252 = OpLogicalNot %bool %5251
               OpSelectionMerge %5283 None
               OpBranchConditional %5252 %5255 %5283
       %5255 = OpLabel
       %5256 = OpCompositeExtract %uint %5245 0
       %5257 = OpVectorShuffle %v2uint %5101 %528 1 4294967295
       %5258 = OpBitwiseOr %v2uint %5257 %5101
       %5259 = OpCompositeExtract %uint %5258 0
       %5260 = OpINotEqual %bool %5259 %uint_0
       %5261 = OpSelect %uint %5260 %uint_1 %uint_0
       %5262 = OpBitwiseOr %uint %5256 %5261
       %5263 = OpIEqual %bool %5246 %5250
       %5264 = OpINotEqual %bool %5262 %uint_0
       %5265 = OpSelect %bool %5263 %5264 %false
       %5266 = OpLogicalNot %bool %5265
               OpSelectionMerge %5279 None
               OpBranchConditional %5266 %5269 %5279
       %5269 = OpLabel
       %5270 = OpINotEqual %bool %5246 %5250
       %5271 = OpLogicalOr %bool %5270 %5264
       %5272 = OpVectorShuffle %v2uint %5247 %528 1 4294967295
       %5273 = OpBitwiseOr %v2uint %5272 %5247
       %5274 = OpCompositeExtract %uint %5273 0
       %5275 = OpIEqual %bool %5274 %uint_0
       %5276 = OpSelect %bool %5271 %true %5275
       %5277 = OpLogicalNot %bool %5276
               OpBranch %5279
       %5279 = OpLabel
       %5280 = OpPhi %v2uint %5237 %5269 %528 %5255
       %5281 = OpPhi %bool %5277 %5269 %5265 %5255
               OpBranch %5283
       %5283 = OpLabel
       %5284 = OpPhi %v2uint %5280 %5279 %528 %5236
       %5285 = OpPhi %bool %5281 %5279 %5251 %5236
               OpSelectionMerge %5293 None
               OpBranchConditional %5285 %5288 %5293
       %5288 = OpLabel
       %5289 = OpCompositeExtract %uint %5237 1
       %5290 = OpIAdd %uint %5241 %5289
       %5291 = OpCompositeInsert %v2uint %5290 %5237 1
               OpBranch %5293
       %5293 = OpLabel
       %5294 = OpPhi %v2uint %5291 %5288 %5284 %5283
       %5295 = OpCompositeExtract %uint %5294 1
       %5296 = OpShiftRightLogical %uint %5295 %5240
       %5297 = OpUGreaterThan %bool %5296 %uint_16777215
       %5298 = OpSelect %uint %5297 %uint_1 %uint_0
       %5299 = OpShiftRightLogical %uint %5296 %5298
       %5300 = OpIAdd %uint %5204 %5298
       %5301 = OpINotEqual %bool %5299 %uint_0
               OpSelectionMerge %5343 None
               OpBranchConditional %5301 %5304 %5343
       %5304 = OpLabel
       %5305 = OpSLessThanEqual %bool %5300 %uint_127
               OpSelectionMerge %5331 None
               OpBranchConditional %5305 %5308 %5331
       %5308 = OpLabel
       %5309 = OpSGreaterThanEqual %bool %5300 %uint_4294967170
               OpSelectionMerge %5320 None
               OpBranchConditional %5309 %5312 %5320
       %5312 = OpLabel
       %5313 = OpShiftLeftLogical %uint %5300 %uint_23
       %5314 = OpIAdd %uint %5313 %uint_1065353216
       %5315 = OpBitwiseAnd %uint %5299 %uint_8388607
       %5316 = OpBitwiseOr %uint %5314 %5315
       %5317 = OpBitwiseOr %uint %5316 %5192
       %5318 = OpBitcast %float %5317
               OpBranch %5320
       %5320 = OpLabel
       %5321 = OpPhi %float %5318 %5312 %261 %5308
       %5322 = OpPhi %bool %false %5312 %true %5308
               OpSelectionMerge %5328 None
               OpBranchConditional %5322 %5325 %5328
       %5325 = OpLabel
       %5326 = OpBitcast %float %5192
               OpBranch %5328
       %5328 = OpLabel
       %5329 = OpPhi %float %5326 %5325 %5321 %5320
               OpBranch %5331
       %5331 = OpLabel
       %5332 = OpPhi %float %5329 %5328 %261 %5304
       %5333 = OpPhi %bool %false %5328 %true %5304
               OpSelectionMerge %5340 None
               OpBranchConditional %5333 %5336 %5340
       %5336 = OpLabel
       %5337 = OpBitwiseOr %uint %5192 %uint_2139095040
       %5338 = OpBitcast %float %5337
               OpBranch %5340
       %5340 = OpLabel
       %5341 = OpPhi %float %5338 %5336 %5332 %5331
               OpBranch %5343
       %5343 = OpLabel
       %5344 = OpPhi %float %5341 %5340 %float_0 %5293
               OpBranch %5346
       %5346 = OpLabel
       %5347 = OpPhi %float %5344 %5343 %4906 %4918
               OpBranch %5349
       %5349 = OpLabel
       %5350 = OpPhi %float %5347 %5346 %261 %4914
       %5351 = OpPhi %bool %false %5346 %true %4914
               OpSelectionMerge %5359 None
               OpBranchConditional %5351 %5354 %5359
       %5354 = OpLabel
       %5355 = OpVectorShuffle %v2float %4897 %768 1 4294967295
       %5356 = OpFMul %v2float %4897 %5355
       %5357 = OpCompositeExtract %float %5356 0
               OpBranch %5359
       %5359 = OpLabel
       %5360 = OpPhi %float %5357 %5354 %5350 %5349
               OpBranch %5362
       %5362 = OpLabel
       %5363 = OpPhi %float %5360 %5359 %4906 %4887
               OpBranch %5365
       %5365 = OpLabel
       %5366 = OpPhi %float %5363 %5362 %4857 %4882
               OpBranch %5368
       %5368 = OpLabel
       %5369 = OpPhi %float %5366 %5365 %261 %4877
       %5370 = OpPhi %bool %false %5365 %true %4877
               OpBranch %5372
       %5372 = OpLabel
       %5373 = OpPhi %float %5369 %5368 %261 %4872
       %5374 = OpPhi %bool %5370 %5368 %4873 %4872
               OpBranch %5376
       %5376 = OpLabel
       %5377 = OpPhi %float %5373 %5372 %261 %4867
       %5378 = OpPhi %bool %5374 %5372 %4868 %4867
               OpBranch %5380
       %5380 = OpLabel
       %5381 = OpPhi %float %5377 %5376 %261 %4862
       %5382 = OpPhi %bool %5378 %5376 %4863 %4862
               OpBranch %5384
       %5384 = OpLabel
       %5385 = OpPhi %float %5381 %5380 %261 %4856
       %5386 = OpPhi %bool %5382 %5380 %4858 %4856
               OpSelectionMerge %5393 None
               OpBranchConditional %5386 %5389 %5393
       %5389 = OpLabel
       %5390 = OpFMul %float %3777 %float_1_57079625
       %5391 = OpFAdd %float %5390 %4857
               OpBranch %5393
       %5393 = OpLabel
       %5394 = OpPhi %float %5391 %5389 %5385 %5384
       %5395 = OpFAdd %float %3778 %5394
       %5396 = OpFSub %float %5395 %3778
       %5397 = OpFSub %float %5394 %5396
       %5398 = OpShiftRightLogical %uint %3721 %uint_30
       %5399 = OpIAdd %uint %3734 %5398
               OpBranch %5401
       %5401 = OpLabel
       %5402 = OpPhi %uint %5399 %5393 %354 %3542
       %5403 = OpPhi %float %5395 %5393 %261 %3542
       %5404 = OpPhi %float %5397 %5393 %261 %3542
       %5405 = OpPhi %bool %false %5393 %true %3542
               OpSelectionMerge %7039 None
               OpBranchConditional %5405 %5408 %7039
       %5408 = OpLabel
       %5409 = OpFMul %float %42 %float_0_636619747
       %5410 = OpFAdd %float %5409 %float_0_5
       %5411 = OpExtInst %float %184 Trunc %5410
       %5412 = OpFMul %float %5411 %float_1_57079625
       %5413 = OpFNegate %float %5412
       %5414 = OpIsNan %bool %5411
       %5415 = OpLogicalNot %bool %5414
               OpSelectionMerge %5940 None
               OpBranchConditional %5415 %5418 %5940
       %5418 = OpLabel
       %5419 = OpIsNan %bool %float_1_57079625
       %5420 = OpLogicalNot %bool %5419
               OpSelectionMerge %5936 None
               OpBranchConditional %5420 %5423 %5936
       %5423 = OpLabel
       %5424 = OpIsNan %bool %5413
       %5425 = OpLogicalNot %bool %5424
               OpSelectionMerge %5932 None
               OpBranchConditional %5425 %5428 %5932
       %5428 = OpLabel
       %5429 = OpIsInf %bool %5411
       %5430 = OpLogicalNot %bool %5429
               OpSelectionMerge %5928 None
               OpBranchConditional %5430 %5433 %5928
       %5433 = OpLabel
       %5434 = OpIsInf %bool %float_1_57079625
       %5435 = OpLogicalNot %bool %5434
               OpSelectionMerge %5924 None
               OpBranchConditional %5435 %5438 %5924
       %5438 = OpLabel
       %5439 = OpIsInf %bool %5413
       %5440 = OpLogicalNot %bool %5439
               OpSelectionMerge %5921 None
               OpBranchConditional %5440 %5443 %5921
       %5443 = OpLabel
       %5444 = OpCompositeInsert %v2float %5411 %262 1
       %5445 = OpBitcast %v2uint %5444
       %5446 = OpBitwiseAnd %v2uint %5445 %267
       %5447 = OpINotEqual %v2bool %5446 %270
       %5448 = OpBitwiseAnd %v2uint %5445 %272
       %5449 = OpIEqual %v2bool %5448 %270
       %5450 = OpLogicalOr %v2bool %5449 %5447
       %5451 = OpBitwiseAnd %v2uint %5445 %277
       %5452 = OpBitcast %v2float %5451
       %5453 = OpSelect %v2float %5450 %5444 %5452
       %5454 = OpBitcast %uint %5413
       %5455 = OpBitwiseAnd %uint %5454 %uint_2139095040
       %5456 = OpINotEqual %bool %5455 %uint_0
       %5457 = OpBitwiseAnd %uint %5454 %uint_8388607
       %5458 = OpIEqual %bool %5457 %uint_0
       %5459 = OpLogicalOr %bool %5458 %5456
       %5460 = OpBitwiseAnd %uint %5454 %uint_2147483648
       %5461 = OpBitcast %float %5460
       %5462 = OpSelect %float %5459 %5413 %5461
       %5463 = OpFOrdEqual %v2bool %5453 %290
       %5464 = OpVectorShuffle %v2bool %5463 %292 1 4294967295
       %5465 = OpLogicalOr %v2bool %5464 %5463
       %5466 = OpCompositeExtract %bool %5465 0
       %5467 = OpLogicalNot %bool %5466
               OpSelectionMerge %5918 None
               OpBranchConditional %5467 %5470 %5918
       %5470 = OpLabel
       %5471 = OpFUnordNotEqual %bool %5462 %float_0
               OpSelectionMerge %5905 None
               OpBranchConditional %5471 %5474 %5905
       %5474 = OpLabel
       %5475 = OpBitcast %v2uint %5453
       %5476 = OpCompositeExtract %uint %5475 1
       %5477 = OpShiftRightLogical %uint %5476 %uint_23
       %5478 = OpBitwiseAnd %uint %5477 %uint_255
       %5479 = OpCompositeExtract %uint %5475 0
       %5480 = OpShiftRightLogical %uint %5479 %uint_23
       %5481 = OpBitwiseAnd %uint %5480 %uint_255
       %5482 = OpBitcast %uint %5462
       %5483 = OpShiftRightLogical %uint %5482 %uint_23
       %5484 = OpBitwiseAnd %uint %5483 %uint_255
       %5485 = OpIAdd %uint %5484 %uint_4294967169
       %5486 = OpBitwiseAnd %v2uint %5475 %272
       %5487 = OpBitwiseOr %v2uint %5486 %319
       %5488 = OpBitwiseAnd %uint %5482 %uint_2147483648
       %5489 = OpBitwiseXor %uint %5479 %5476
       %5490 = OpBitwiseAnd %uint %5489 %uint_2147483648
       %5491 = OpCompositeExtract %uint %5487 0
       %5492 = OpCompositeExtract %uint %5487 1
       %5493 = OpUMulExtended %_struct_58 %5492 %5491
       %5494 = OpCompositeExtract %uint %5493 1
       %5495 = OpIMul %uint %5491 %5492
       %5496 = OpShiftLeftLogical %uint %5494 %uint_14
       %5497 = OpShiftRightLogical %uint %5495 %uint_18
       %5498 = OpBitwiseOr %uint %5497 %5496
       %5499 = OpShiftLeftLogical %uint %5495 %uint_14
       %5500 = OpCompositeConstruct %v2uint %5499 %5498
       %5501 = OpBitwiseOr %uint %5498 %5499
       %5502 = OpIEqual %bool %5501 %uint_0
       %5503 = OpIAdd %uint %5478 %uint_4294967042
       %5504 = OpIAdd %uint %5503 %5481
       %5505 = OpSelect %uint %5502 %uint_0 %5504
       %5506 = OpBitwiseOr %uint %5505 %5501
       %5507 = OpINotEqual %bool %5506 %uint_0
               OpSelectionMerge %5902 None
               OpBranchConditional %5507 %5510 %5902
       %5510 = OpLabel
       %5511 = OpISub %uint %5505 %5485
       %5512 = OpShiftLeftLogical %uint %5482 %uint_5
       %5513 = OpBitwiseAnd %uint %5512 %uint_268435424
       %5514 = OpBitwiseOr %uint %5513 %uint_268435456
       %5515 = OpCompositeInsert %v2uint %5514 %355 1
       %5516 = OpExtInst %uint %184 SAbs %5511
       %5517 = OpINotEqual %bool %5516 %uint_0
               OpSelectionMerge %5544 None
               OpBranchConditional %5517 %5520 %5544
       %5520 = OpLabel
       %5521 = OpUGreaterThanEqual %bool %5516 %uint_32
               OpSelectionMerge %5529 None
               OpBranchConditional %5521 %5524 %5529
       %5524 = OpLabel
       %5525 = OpBitwiseAnd %uint %5516 %uint_31
       %5526 = OpShiftLeftLogical %uint %uint_1 %5525
       %5527 = OpCompositeInsert %v2uint %5526 %355 1
               OpBranch %5529
       %5529 = OpLabel
       %5530 = OpPhi %v2uint %5527 %5524 %528 %5520
       %5531 = OpPhi %bool %false %5524 %true %5520
               OpSelectionMerge %5541 None
               OpBranchConditional %5531 %5534 %5541
       %5534 = OpLabel
       %5535 = OpISub %uint %uint_0 %5516
       %5536 = OpBitwiseAnd %uint %5535 %uint_31
       %5537 = OpShiftRightLogical %uint %uint_1 %5536
       %5538 = OpShiftLeftLogical %uint %uint_1 %5516
       %5539 = OpCompositeConstruct %v2uint %5538 %5537
               OpBranch %5541
       %5541 = OpLabel
       %5542 = OpPhi %v2uint %5539 %5534 %5530 %5529
               OpBranch %5544
       %5544 = OpLabel
       %5545 = OpPhi %v2uint %7106 %5510 %5542 %5541
       %5546 = OpCompositeExtract %uint %5545 0
       %5547 = OpShiftRightLogical %uint %5546 %uint_1
       %5548 = OpIAdd %uint %5547 %uint_2147483647
       %5549 = OpBitwiseAnd %uint %5546 %uint_1
       %5550 = OpIAdd %uint %5548 %5549
       %5551 = OpShiftRightLogical %uint %5550 %uint_31
       %5552 = OpIAdd %uint %5546 %uint_4294967295
       %5553 = OpCompositeExtract %uint %5545 1
       %5554 = OpIAdd %uint %5553 %uint_4294967295
       %5555 = OpIAdd %uint %5554 %5551
       %5556 = OpCompositeConstruct %v2uint %5552 %5555
       %5557 = OpSLessThanEqual %bool %5511 %uint_0
               OpSelectionMerge %5609 None
               OpBranchConditional %5557 %5560 %5609
       %5560 = OpLabel
       %5561 = OpSGreaterThanEqual %bool %5511 %uint_4294967233
               OpSelectionMerge %5604 None
               OpBranchConditional %5561 %5564 %5604
       %5564 = OpLabel
       %5565 = OpISub %uint %uint_0 %5511
       %5566 = OpBitwiseAnd %v2uint %5556 %5500
       %5567 = OpINotEqual %bool %5505 %5485
               OpSelectionMerge %5599 None
               OpBranchConditional %5567 %5570 %5599
       %5570 = OpLabel
       %5571 = OpUGreaterThanEqual %bool %5565 %uint_32
               OpSelectionMerge %5579 None
               OpBranchConditional %5571 %5574 %5579
       %5574 = OpLabel
       %5575 = OpBitwiseAnd %uint %5565 %uint_31
       %5576 = OpShiftRightLogical %uint %5498 %5575
       %5577 = OpCompositeInsert %v2uint %5576 %420 0
               OpBranch %5579
       %5579 = OpLabel
       %5580 = OpPhi %v2uint %5515 %5574 %528 %5570
       %5581 = OpPhi %v2uint %5566 %5574 %528 %5570
       %5582 = OpPhi %v2uint %5577 %5574 %528 %5570
       %5583 = OpPhi %bool %false %5574 %true %5570
               OpSelectionMerge %5594 None
               OpBranchConditional %5583 %5586 %5594
       %5586 = OpLabel
       %5587 = OpShiftRightLogical %uint %5499 %5565
       %5588 = OpBitwiseAnd %uint %5511 %uint_31
       %5589 = OpShiftLeftLogical %uint %5498 %5588
       %5590 = OpBitwiseOr %uint %5589 %5587
       %5591 = OpShiftRightLogical %uint %5498 %5565
       %5592 = OpCompositeConstruct %v2uint %5590 %5591
               OpBranch %5594
       %5594 = OpLabel
       %5595 = OpPhi %v2uint %5515 %5586 %5580 %5579
       %5596 = OpPhi %v2uint %5566 %5586 %5581 %5579
       %5597 = OpPhi %v2uint %5592 %5586 %5582 %5579
               OpBranch %5599
       %5599 = OpLabel
       %5600 = OpPhi %v2uint %5595 %5594 %5515 %5564
       %5601 = OpPhi %v2uint %5596 %5594 %5566 %5564
       %5602 = OpPhi %v2uint %5597 %5594 %5500 %5564
               OpBranch %5604
       %5604 = OpLabel
       %5605 = OpPhi %v2uint %5600 %5599 %5515 %5560
       %5606 = OpPhi %v2uint %5601 %5599 %5500 %5560
       %5607 = OpPhi %v2uint %5602 %5599 %270 %5560
               OpBranch %5609
       %5609 = OpLabel
       %5610 = OpPhi %v2uint %5605 %5604 %528 %5544
       %5611 = OpPhi %v2uint %5606 %5604 %528 %5544
       %5612 = OpPhi %v2uint %5607 %5604 %528 %5544
       %5613 = OpPhi %bool %false %5604 %true %5544
               OpSelectionMerge %5655 None
               OpBranchConditional %5613 %5616 %5655
       %5616 = OpLabel
       %5617 = OpULessThanEqual %bool %5511 %uint_63
               OpSelectionMerge %5650 None
               OpBranchConditional %5617 %5620 %5650
       %5620 = OpLabel
       %5621 = OpBitwiseAnd %uint %5555 %5514
       %5622 = OpCompositeInsert %v2uint %5621 %355 1
       %5623 = OpUGreaterThanEqual %bool %5511 %uint_32
               OpSelectionMerge %5631 None
               OpBranchConditional %5623 %5626 %5631
       %5626 = OpLabel
       %5627 = OpBitwiseAnd %uint %5511 %uint_31
       %5628 = OpShiftRightLogical %uint %5514 %5627
       %5629 = OpCompositeInsert %v2uint %5628 %420 0
               OpBranch %5631
       %5631 = OpLabel
       %5632 = OpPhi %v2uint %5629 %5626 %528 %5620
       %5633 = OpPhi %v2uint %5622 %5626 %528 %5620
       %5634 = OpPhi %v2uint %5500 %5626 %528 %5620
       %5635 = OpPhi %bool %false %5626 %true %5620
               OpSelectionMerge %5645 None
               OpBranchConditional %5635 %5638 %5645
       %5638 = OpLabel
       %5639 = OpISub %uint %uint_0 %5511
       %5640 = OpBitwiseAnd %uint %5639 %uint_31
       %5641 = OpShiftLeftLogical %uint %5514 %5640
       %5642 = OpShiftRightLogical %uint %5514 %5511
       %5643 = OpCompositeConstruct %v2uint %5641 %5642
               OpBranch %5645
       %5645 = OpLabel
       %5646 = OpPhi %v2uint %5643 %5638 %5632 %5631
       %5647 = OpPhi %v2uint %5622 %5638 %5633 %5631
       %5648 = OpPhi %v2uint %5500 %5638 %5634 %5631
               OpBranch %5650
       %5650 = OpLabel
       %5651 = OpPhi %v2uint %5646 %5645 %270 %5616
       %5652 = OpPhi %v2uint %5647 %5645 %5515 %5616
       %5653 = OpPhi %v2uint %5648 %5645 %5500 %5616
               OpBranch %5655
       %5655 = OpLabel
       %5656 = OpPhi %v2uint %5612 %5609 %5653 %5650
       %5657 = OpPhi %v2uint %5611 %5609 %5652 %5650
       %5658 = OpPhi %v2uint %5610 %5609 %5651 %5650
       %5659 = OpExtInst %uint %184 SMax %5505 %5485
       %5660 = OpINotEqual %bool %5488 %5490
               OpSelectionMerge %5707 None
               OpBranchConditional %5660 %5663 %5707
       %5663 = OpLabel
       %5664 = OpCompositeExtract %uint %5658 0
       %5665 = OpBitwiseXor %uint %5664 %uint_4294967295
       %5666 = OpCompositeExtract %uint %5658 1
       %5667 = OpBitwiseXor %uint %5666 %uint_4294967295
       %5668 = OpShiftRightLogical %uint %5665 %uint_1
       %5669 = OpBitwiseAnd %uint %5665 %uint_1
       %5670 = OpIAdd %uint %5668 %5669
       %5671 = OpShiftRightLogical %uint %5670 %uint_31
       %5672 = OpISub %uint %uint_0 %5664
       %5673 = OpCompositeExtract %uint %5656 0
       %5674 = OpShiftRightLogical %uint %5673 %uint_1
       %5675 = OpShiftRightLogical %uint %5672 %uint_1
       %5676 = OpIAdd %uint %5675 %5674
       %5677 = OpBitwiseAnd %uint %5673 %uint_1
       %5678 = OpBitwiseAnd %uint %5677 %5672
       %5679 = OpIAdd %uint %5676 %5678
       %5680 = OpShiftRightLogical %uint %5679 %uint_31
       %5681 = OpISub %uint %5673 %5664
       %5682 = OpCompositeExtract %uint %5656 1
       %5683 = OpVectorShuffle %v2uint %5657 %528 1 4294967295
       %5684 = OpBitwiseOr %v2uint %5683 %5657
       %5685 = OpCompositeExtract %uint %5684 0
       %5686 = OpINotEqual %bool %5685 %uint_0
       %5687 = OpSGreaterThan %bool %5505 %5485
       %5688 = OpSelect %bool %5686 %5687 %false
       %5689 = OpSelect %v2uint %5688 %536 %270
       %5690 = OpCompositeExtract %uint %5689 0
       %5691 = OpShiftRightLogical %uint %5681 %uint_1
       %5692 = OpShiftRightLogical %uint %5690 %uint_1
       %5693 = OpIAdd %uint %5692 %5691
       %5694 = OpBitwiseAnd %uint %5681 %uint_1
       %5695 = OpBitwiseAnd %uint %5694 %5690
       %5696 = OpIAdd %uint %5693 %5695
       %5697 = OpShiftRightLogical %uint %5696 %uint_31
       %5698 = OpIAdd %uint %5690 %5681
       %5699 = OpCompositeExtract %uint %5689 1
       %5700 = OpIAdd %uint %5682 %5667
       %5701 = OpIAdd %uint %5700 %5671
       %5702 = OpIAdd %uint %5701 %5680
       %5703 = OpIAdd %uint %5702 %5699
       %5704 = OpIAdd %uint %5703 %5697
       %5705 = OpCompositeConstruct %v2uint %5698 %5704
               OpBranch %5707
       %5707 = OpLabel
       %5708 = OpPhi %v2uint %5705 %5663 %528 %5655
       %5709 = OpPhi %bool %false %5663 %true %5655
               OpSelectionMerge %5728 None
               OpBranchConditional %5709 %5712 %5728
       %5712 = OpLabel
       %5713 = OpCompositeExtract %uint %5656 0
       %5714 = OpCompositeExtract %uint %5658 0
       %5715 = OpShiftRightLogical %uint %5713 %uint_1
       %5716 = OpShiftRightLogical %uint %5714 %uint_1
       %5717 = OpIAdd %uint %5716 %5715
       %5718 = OpBitwiseAnd %uint %5713 %uint_1
       %5719 = OpBitwiseAnd %uint %5718 %5714
       %5720 = OpIAdd %uint %5717 %5719
       %5721 = OpShiftRightLogical %uint %5720 %uint_31
       %5722 = OpIAdd %uint %5714 %5713
       %5723 = OpIAdd %v2uint %5658 %5656
       %5724 = OpCompositeExtract %uint %5723 1
       %5725 = OpIAdd %uint %5721 %5724
       %5726 = OpCompositeConstruct %v2uint %5722 %5725
               OpBranch %5728
       %5728 = OpLabel
       %5729 = OpPhi %v2uint %5726 %5712 %5708 %5707
       %5730 = OpCompositeExtract %uint %5729 1
       %5731 = OpSLessThan %bool %5730 %uint_0
               OpSelectionMerge %5747 None
               OpBranchConditional %5731 %5734 %5747
       %5734 = OpLabel
       %5735 = OpCompositeExtract %uint %5729 0
       %5736 = OpBitwiseXor %uint %5735 %uint_4294967295
       %5737 = OpBitwiseXor %uint %5730 %uint_4294967295
       %5738 = OpShiftRightLogical %uint %5736 %uint_1
       %5739 = OpBitwiseAnd %uint %5736 %uint_1
       %5740 = OpIAdd %uint %5738 %5739
       %5741 = OpShiftRightLogical %uint %5740 %uint_31
       %5742 = OpISub %uint %uint_0 %5735
       %5743 = OpIAdd %uint %5741 %5737
       %5744 = OpCompositeConstruct %v2uint %5742 %5743
       %5745 = OpBitwiseXor %uint %5490 %uint_2147483648
               OpBranch %5747
       %5747 = OpLabel
       %5748 = OpPhi %uint %5745 %5734 %5490 %5728
       %5749 = OpPhi %v2uint %5744 %5734 %5729 %5728
       %5750 = OpCompositeExtract %uint %5749 1
       %5751 = OpExtInst %uint %184 FindUMsb %5750
       %5752 = OpISub %uint %uint_31 %5751
       %5753 = OpIEqual %bool %5750 %uint_0
       %5754 = OpCompositeExtract %uint %5749 0
       %5755 = OpExtInst %uint %184 FindUMsb %5754
       %5756 = OpISub %uint %uint_31 %5755
       %5757 = OpIAdd %uint %5756 %uint_32
       %5758 = OpSelect %uint %5753 %5757 %5752
       %5759 = OpISub %uint %uint_3 %5758
       %5760 = OpIAdd %uint %5759 %5659
       %5761 = OpUGreaterThan %bool %5758 %uint_3
               OpSelectionMerge %5792 None
               OpBranchConditional %5761 %5764 %5792
       %5764 = OpLabel
       %5765 = OpIAdd %uint %5758 %uint_4294967293
       %5766 = OpUGreaterThanEqual %bool %5765 %uint_32
               OpSelectionMerge %5774 None
               OpBranchConditional %5766 %5769 %5774
       %5769 = OpLabel
       %5770 = OpBitwiseAnd %uint %5765 %uint_31
       %5771 = OpShiftLeftLogical %uint %5754 %5770
       %5772 = OpCompositeInsert %v2uint %5771 %355 1
               OpBranch %5774
       %5774 = OpLabel
       %5775 = OpPhi %uint %uint_0 %5769 %354 %5764
       %5776 = OpPhi %v2uint %5772 %5769 %528 %5764
       %5777 = OpPhi %bool %false %5769 %true %5764
               OpSelectionMerge %5788 None
               OpBranchConditional %5777 %5780 %5788
       %5780 = OpLabel
       %5781 = OpShiftLeftLogical %uint %5750 %5765
       %5782 = OpBitwiseAnd %uint %5759 %uint_31
       %5783 = OpShiftRightLogical %uint %5754 %5782
       %5784 = OpBitwiseOr %uint %5783 %5781
       %5785 = OpShiftLeftLogical %uint %5754 %5765
       %5786 = OpCompositeConstruct %v2uint %5785 %5784
               OpBranch %5788
       %5788 = OpLabel
       %5789 = OpPhi %uint %uint_0 %5780 %5775 %5774
       %5790 = OpPhi %v2uint %5786 %5780 %5776 %5774
               OpBranch %5792
       %5792 = OpLabel
       %5793 = OpPhi %v2uint %5749 %5747 %5790 %5788
       %5794 = OpPhi %uint %5759 %5747 %5789 %5788
       %5795 = OpIAdd %uint %5794 %uint_5
       %5796 = OpBitwiseAnd %uint %5795 %uint_31
       %5797 = OpShiftLeftLogical %uint %uint_1 %5796
       %5798 = OpCompositeInsert %v2uint %5797 %355 1
       %5799 = OpIAdd %uint %5797 %uint_4294967295
       %5800 = OpCompositeInsert %v2uint %5799 %650 1
       %5801 = OpBitwiseAnd %v2uint %5800 %5793
       %5802 = OpCompositeExtract %uint %5801 1
       %5803 = OpBitwiseAnd %v2uint %5798 %5793
       %5804 = OpIAdd %uint %5794 %uint_2
       %5805 = OpBitwiseAnd %uint %5804 %uint_31
       %5806 = OpShiftLeftLogical %uint %uint_4 %5805
       %5807 = OpUGreaterThan %bool %5802 %5806
       %5808 = OpLogicalNot %bool %5807
               OpSelectionMerge %5839 None
               OpBranchConditional %5808 %5811 %5839
       %5811 = OpLabel
       %5812 = OpCompositeExtract %uint %5801 0
       %5813 = OpVectorShuffle %v2uint %5657 %528 1 4294967295
       %5814 = OpBitwiseOr %v2uint %5813 %5657
       %5815 = OpCompositeExtract %uint %5814 0
       %5816 = OpINotEqual %bool %5815 %uint_0
       %5817 = OpSelect %uint %5816 %uint_1 %uint_0
       %5818 = OpBitwiseOr %uint %5812 %5817
       %5819 = OpIEqual %bool %5802 %5806
       %5820 = OpINotEqual %bool %5818 %uint_0
       %5821 = OpSelect %bool %5819 %5820 %false
       %5822 = OpLogicalNot %bool %5821
               OpSelectionMerge %5835 None
               OpBranchConditional %5822 %5825 %5835
       %5825 = OpLabel
       %5826 = OpINotEqual %bool %5802 %5806
       %5827 = OpLogicalOr %bool %5826 %5820
       %5828 = OpVectorShuffle %v2uint %5803 %528 1 4294967295
       %5829 = OpBitwiseOr %v2uint %5828 %5803
       %5830 = OpCompositeExtract %uint %5829 0
       %5831 = OpIEqual %bool %5830 %uint_0
       %5832 = OpSelect %bool %5827 %true %5831
       %5833 = OpLogicalNot %bool %5832
               OpBranch %5835
       %5835 = OpLabel
       %5836 = OpPhi %v2uint %5793 %5825 %528 %5811
       %5837 = OpPhi %bool %5833 %5825 %5821 %5811
               OpBranch %5839
       %5839 = OpLabel
       %5840 = OpPhi %v2uint %5836 %5835 %528 %5792
       %5841 = OpPhi %bool %5837 %5835 %5807 %5792
               OpSelectionMerge %5849 None
               OpBranchConditional %5841 %5844 %5849
       %5844 = OpLabel
       %5845 = OpCompositeExtract %uint %5793 1
       %5846 = OpIAdd %uint %5797 %5845
       %5847 = OpCompositeInsert %v2uint %5846 %5793 1
               OpBranch %5849
       %5849 = OpLabel
       %5850 = OpPhi %v2uint %5847 %5844 %5840 %5839
       %5851 = OpCompositeExtract %uint %5850 1
       %5852 = OpShiftRightLogical %uint %5851 %5796
       %5853 = OpUGreaterThan %bool %5852 %uint_16777215
       %5854 = OpSelect %uint %5853 %uint_1 %uint_0
       %5855 = OpShiftRightLogical %uint %5852 %5854
       %5856 = OpIAdd %uint %5760 %5854
       %5857 = OpINotEqual %bool %5855 %uint_0
               OpSelectionMerge %5899 None
               OpBranchConditional %5857 %5860 %5899
       %5860 = OpLabel
       %5861 = OpSLessThanEqual %bool %5856 %uint_127
               OpSelectionMerge %5887 None
               OpBranchConditional %5861 %5864 %5887
       %5864 = OpLabel
       %5865 = OpSGreaterThanEqual %bool %5856 %uint_4294967170
               OpSelectionMerge %5876 None
               OpBranchConditional %5865 %5868 %5876
       %5868 = OpLabel
       %5869 = OpShiftLeftLogical %uint %5856 %uint_23
       %5870 = OpIAdd %uint %5869 %uint_1065353216
       %5871 = OpBitwiseAnd %uint %5855 %uint_8388607
       %5872 = OpBitwiseOr %uint %5870 %5871
       %5873 = OpBitwiseOr %uint %5872 %5748
       %5874 = OpBitcast %float %5873
               OpBranch %5876
       %5876 = OpLabel
       %5877 = OpPhi %float %5874 %5868 %261 %5864
       %5878 = OpPhi %bool %false %5868 %true %5864
               OpSelectionMerge %5884 None
               OpBranchConditional %5878 %5881 %5884
       %5881 = OpLabel
       %5882 = OpBitcast %float %5748
               OpBranch %5884
       %5884 = OpLabel
       %5885 = OpPhi %float %5882 %5881 %5877 %5876
               OpBranch %5887
       %5887 = OpLabel
       %5888 = OpPhi %float %5885 %5884 %261 %5860
       %5889 = OpPhi %bool %false %5884 %true %5860
               OpSelectionMerge %5896 None
               OpBranchConditional %5889 %5892 %5896
       %5892 = OpLabel
       %5893 = OpBitwiseOr %uint %5748 %uint_2139095040
       %5894 = OpBitcast %float %5893
               OpBranch %5896
       %5896 = OpLabel
       %5897 = OpPhi %float %5894 %5892 %5888 %5887
               OpBranch %5899
       %5899 = OpLabel
       %5900 = OpPhi %float %5897 %5896 %float_0 %5849
               OpBranch %5902
       %5902 = OpLabel
       %5903 = OpPhi %float %5900 %5899 %5462 %5474
               OpBranch %5905
       %5905 = OpLabel
       %5906 = OpPhi %float %5903 %5902 %261 %5470
       %5907 = OpPhi %bool %false %5902 %true %5470
               OpSelectionMerge %5915 None
               OpBranchConditional %5907 %5910 %5915
       %5910 = OpLabel
       %5911 = OpVectorShuffle %v2float %5453 %768 1 4294967295
       %5912 = OpFMul %v2float %5453 %5911
       %5913 = OpCompositeExtract %float %5912 0
               OpBranch %5915
       %5915 = OpLabel
       %5916 = OpPhi %float %5913 %5910 %5906 %5905
               OpBranch %5918
       %5918 = OpLabel
       %5919 = OpPhi %float %5916 %5915 %5462 %5443
               OpBranch %5921
       %5921 = OpLabel
       %5922 = OpPhi %float %5919 %5918 %5413 %5438
               OpBranch %5924
       %5924 = OpLabel
       %5925 = OpPhi %float %5922 %5921 %261 %5433
       %5926 = OpPhi %bool %false %5921 %true %5433
               OpBranch %5928
       %5928 = OpLabel
       %5929 = OpPhi %float %5925 %5924 %261 %5428
       %5930 = OpPhi %bool %5926 %5924 %5429 %5428
               OpBranch %5932
       %5932 = OpLabel
       %5933 = OpPhi %float %5929 %5928 %261 %5423
       %5934 = OpPhi %bool %5930 %5928 %5424 %5423
               OpBranch %5936
       %5936 = OpLabel
       %5937 = OpPhi %float %5933 %5932 %261 %5418
       %5938 = OpPhi %bool %5934 %5932 %5419 %5418
               OpBranch %5940
       %5940 = OpLabel
       %5941 = OpPhi %float %5937 %5936 %261 %5408
       %5942 = OpPhi %bool %5938 %5936 %5414 %5408
               OpSelectionMerge %5948 None
               OpBranchConditional %5942 %5945 %5948
       %5945 = OpLabel
       %5946 = OpFSub %float %5412 %5412
               OpBranch %5948
       %5948 = OpLabel
       %5949 = OpPhi %float %5946 %5945 %5941 %5940
       %5950 = OpFSub %float %42 %5412
       %5951 = OpFSub %float %42 %5950
       %5952 = OpFSub %float %5951 %5412
       %5953 = OpFSub %float %5952 %5949
       %5954 = OpFAdd %float %5950 %5953
       %5955 = OpFMul %float %5411 %float_7_54978942en08
       %5956 = OpFNegate %float %5955
               OpSelectionMerge %6481 None
               OpBranchConditional %5415 %5959 %6481
       %5959 = OpLabel
       %5960 = OpIsNan %bool %float_7_54978942en08
       %5961 = OpLogicalNot %bool %5960
               OpSelectionMerge %6477 None
               OpBranchConditional %5961 %5964 %6477
       %5964 = OpLabel
       %5965 = OpIsNan %bool %5956
       %5966 = OpLogicalNot %bool %5965
               OpSelectionMerge %6473 None
               OpBranchConditional %5966 %5969 %6473
       %5969 = OpLabel
       %5970 = OpIsInf %bool %5411
       %5971 = OpLogicalNot %bool %5970
               OpSelectionMerge %6469 None
               OpBranchConditional %5971 %5974 %6469
       %5974 = OpLabel
       %5975 = OpIsInf %bool %float_7_54978942en08
       %5976 = OpLogicalNot %bool %5975
               OpSelectionMerge %6465 None
               OpBranchConditional %5976 %5979 %6465
       %5979 = OpLabel
       %5980 = OpIsInf %bool %5956
       %5981 = OpLogicalNot %bool %5980
               OpSelectionMerge %6462 None
               OpBranchConditional %5981 %5984 %6462
       %5984 = OpLabel
       %5985 = OpCompositeInsert %v2float %5411 %829 1
       %5986 = OpBitcast %v2uint %5985
       %5987 = OpBitwiseAnd %v2uint %5986 %267
       %5988 = OpINotEqual %v2bool %5987 %270
       %5989 = OpBitwiseAnd %v2uint %5986 %272
       %5990 = OpIEqual %v2bool %5989 %270
       %5991 = OpLogicalOr %v2bool %5990 %5988
       %5992 = OpBitwiseAnd %v2uint %5986 %277
       %5993 = OpBitcast %v2float %5992
       %5994 = OpSelect %v2float %5991 %5985 %5993
       %5995 = OpBitcast %uint %5956
       %5996 = OpBitwiseAnd %uint %5995 %uint_2139095040
       %5997 = OpINotEqual %bool %5996 %uint_0
       %5998 = OpBitwiseAnd %uint %5995 %uint_8388607
       %5999 = OpIEqual %bool %5998 %uint_0
       %6000 = OpLogicalOr %bool %5999 %5997
       %6001 = OpBitwiseAnd %uint %5995 %uint_2147483648
       %6002 = OpBitcast %float %6001
       %6003 = OpSelect %float %6000 %5956 %6002
       %6004 = OpFOrdEqual %v2bool %5994 %290
       %6005 = OpVectorShuffle %v2bool %6004 %292 1 4294967295
       %6006 = OpLogicalOr %v2bool %6005 %6004
       %6007 = OpCompositeExtract %bool %6006 0
       %6008 = OpLogicalNot %bool %6007
               OpSelectionMerge %6459 None
               OpBranchConditional %6008 %6011 %6459
       %6011 = OpLabel
       %6012 = OpFUnordNotEqual %bool %6003 %float_0
               OpSelectionMerge %6446 None
               OpBranchConditional %6012 %6015 %6446
       %6015 = OpLabel
       %6016 = OpBitcast %v2uint %5994
       %6017 = OpCompositeExtract %uint %6016 1
       %6018 = OpShiftRightLogical %uint %6017 %uint_23
       %6019 = OpBitwiseAnd %uint %6018 %uint_255
       %6020 = OpCompositeExtract %uint %6016 0
       %6021 = OpShiftRightLogical %uint %6020 %uint_23
       %6022 = OpBitwiseAnd %uint %6021 %uint_255
       %6023 = OpBitcast %uint %6003
       %6024 = OpShiftRightLogical %uint %6023 %uint_23
       %6025 = OpBitwiseAnd %uint %6024 %uint_255
       %6026 = OpIAdd %uint %6025 %uint_4294967169
       %6027 = OpBitwiseAnd %v2uint %6016 %272
       %6028 = OpBitwiseOr %v2uint %6027 %319
       %6029 = OpBitwiseAnd %uint %6023 %uint_2147483648
       %6030 = OpBitwiseXor %uint %6020 %6017
       %6031 = OpBitwiseAnd %uint %6030 %uint_2147483648
       %6032 = OpCompositeExtract %uint %6028 0
       %6033 = OpCompositeExtract %uint %6028 1
       %6034 = OpUMulExtended %_struct_58 %6033 %6032
       %6035 = OpCompositeExtract %uint %6034 1
       %6036 = OpIMul %uint %6032 %6033
       %6037 = OpShiftLeftLogical %uint %6035 %uint_14
       %6038 = OpShiftRightLogical %uint %6036 %uint_18
       %6039 = OpBitwiseOr %uint %6038 %6037
       %6040 = OpShiftLeftLogical %uint %6036 %uint_14
       %6041 = OpCompositeConstruct %v2uint %6040 %6039
       %6042 = OpBitwiseOr %uint %6039 %6040
       %6043 = OpIEqual %bool %6042 %uint_0
       %6044 = OpIAdd %uint %6019 %uint_4294967042
       %6045 = OpIAdd %uint %6044 %6022
       %6046 = OpSelect %uint %6043 %uint_0 %6045
       %6047 = OpBitwiseOr %uint %6046 %6042
       %6048 = OpINotEqual %bool %6047 %uint_0
               OpSelectionMerge %6443 None
               OpBranchConditional %6048 %6051 %6443
       %6051 = OpLabel
       %6052 = OpISub %uint %6046 %6026
       %6053 = OpShiftLeftLogical %uint %6023 %uint_5
       %6054 = OpBitwiseAnd %uint %6053 %uint_268435424
       %6055 = OpBitwiseOr %uint %6054 %uint_268435456
       %6056 = OpCompositeInsert %v2uint %6055 %355 1
       %6057 = OpExtInst %uint %184 SAbs %6052
       %6058 = OpINotEqual %bool %6057 %uint_0
               OpSelectionMerge %6085 None
               OpBranchConditional %6058 %6061 %6085
       %6061 = OpLabel
       %6062 = OpUGreaterThanEqual %bool %6057 %uint_32
               OpSelectionMerge %6070 None
               OpBranchConditional %6062 %6065 %6070
       %6065 = OpLabel
       %6066 = OpBitwiseAnd %uint %6057 %uint_31
       %6067 = OpShiftLeftLogical %uint %uint_1 %6066
       %6068 = OpCompositeInsert %v2uint %6067 %355 1
               OpBranch %6070
       %6070 = OpLabel
       %6071 = OpPhi %v2uint %6068 %6065 %528 %6061
       %6072 = OpPhi %bool %false %6065 %true %6061
               OpSelectionMerge %6082 None
               OpBranchConditional %6072 %6075 %6082
       %6075 = OpLabel
       %6076 = OpISub %uint %uint_0 %6057
       %6077 = OpBitwiseAnd %uint %6076 %uint_31
       %6078 = OpShiftRightLogical %uint %uint_1 %6077
       %6079 = OpShiftLeftLogical %uint %uint_1 %6057
       %6080 = OpCompositeConstruct %v2uint %6079 %6078
               OpBranch %6082
       %6082 = OpLabel
       %6083 = OpPhi %v2uint %6080 %6075 %6071 %6070
               OpBranch %6085
       %6085 = OpLabel
       %6086 = OpPhi %v2uint %7106 %6051 %6083 %6082
       %6087 = OpCompositeExtract %uint %6086 0
       %6088 = OpShiftRightLogical %uint %6087 %uint_1
       %6089 = OpIAdd %uint %6088 %uint_2147483647
       %6090 = OpBitwiseAnd %uint %6087 %uint_1
       %6091 = OpIAdd %uint %6089 %6090
       %6092 = OpShiftRightLogical %uint %6091 %uint_31
       %6093 = OpIAdd %uint %6087 %uint_4294967295
       %6094 = OpCompositeExtract %uint %6086 1
       %6095 = OpIAdd %uint %6094 %uint_4294967295
       %6096 = OpIAdd %uint %6095 %6092
       %6097 = OpCompositeConstruct %v2uint %6093 %6096
       %6098 = OpSLessThanEqual %bool %6052 %uint_0
               OpSelectionMerge %6150 None
               OpBranchConditional %6098 %6101 %6150
       %6101 = OpLabel
       %6102 = OpSGreaterThanEqual %bool %6052 %uint_4294967233
               OpSelectionMerge %6145 None
               OpBranchConditional %6102 %6105 %6145
       %6105 = OpLabel
       %6106 = OpISub %uint %uint_0 %6052
       %6107 = OpBitwiseAnd %v2uint %6097 %6041
       %6108 = OpINotEqual %bool %6046 %6026
               OpSelectionMerge %6140 None
               OpBranchConditional %6108 %6111 %6140
       %6111 = OpLabel
       %6112 = OpUGreaterThanEqual %bool %6106 %uint_32
               OpSelectionMerge %6120 None
               OpBranchConditional %6112 %6115 %6120
       %6115 = OpLabel
       %6116 = OpBitwiseAnd %uint %6106 %uint_31
       %6117 = OpShiftRightLogical %uint %6039 %6116
       %6118 = OpCompositeInsert %v2uint %6117 %420 0
               OpBranch %6120
       %6120 = OpLabel
       %6121 = OpPhi %v2uint %6056 %6115 %528 %6111
       %6122 = OpPhi %v2uint %6107 %6115 %528 %6111
       %6123 = OpPhi %v2uint %6118 %6115 %528 %6111
       %6124 = OpPhi %bool %false %6115 %true %6111
               OpSelectionMerge %6135 None
               OpBranchConditional %6124 %6127 %6135
       %6127 = OpLabel
       %6128 = OpShiftRightLogical %uint %6040 %6106
       %6129 = OpBitwiseAnd %uint %6052 %uint_31
       %6130 = OpShiftLeftLogical %uint %6039 %6129
       %6131 = OpBitwiseOr %uint %6130 %6128
       %6132 = OpShiftRightLogical %uint %6039 %6106
       %6133 = OpCompositeConstruct %v2uint %6131 %6132
               OpBranch %6135
       %6135 = OpLabel
       %6136 = OpPhi %v2uint %6056 %6127 %6121 %6120
       %6137 = OpPhi %v2uint %6107 %6127 %6122 %6120
       %6138 = OpPhi %v2uint %6133 %6127 %6123 %6120
               OpBranch %6140
       %6140 = OpLabel
       %6141 = OpPhi %v2uint %6136 %6135 %6056 %6105
       %6142 = OpPhi %v2uint %6137 %6135 %6107 %6105
       %6143 = OpPhi %v2uint %6138 %6135 %6041 %6105
               OpBranch %6145
       %6145 = OpLabel
       %6146 = OpPhi %v2uint %6141 %6140 %6056 %6101
       %6147 = OpPhi %v2uint %6142 %6140 %6041 %6101
       %6148 = OpPhi %v2uint %6143 %6140 %270 %6101
               OpBranch %6150
       %6150 = OpLabel
       %6151 = OpPhi %v2uint %6146 %6145 %528 %6085
       %6152 = OpPhi %v2uint %6147 %6145 %528 %6085
       %6153 = OpPhi %v2uint %6148 %6145 %528 %6085
       %6154 = OpPhi %bool %false %6145 %true %6085
               OpSelectionMerge %6196 None
               OpBranchConditional %6154 %6157 %6196
       %6157 = OpLabel
       %6158 = OpULessThanEqual %bool %6052 %uint_63
               OpSelectionMerge %6191 None
               OpBranchConditional %6158 %6161 %6191
       %6161 = OpLabel
       %6162 = OpBitwiseAnd %uint %6096 %6055
       %6163 = OpCompositeInsert %v2uint %6162 %355 1
       %6164 = OpUGreaterThanEqual %bool %6052 %uint_32
               OpSelectionMerge %6172 None
               OpBranchConditional %6164 %6167 %6172
       %6167 = OpLabel
       %6168 = OpBitwiseAnd %uint %6052 %uint_31
       %6169 = OpShiftRightLogical %uint %6055 %6168
       %6170 = OpCompositeInsert %v2uint %6169 %420 0
               OpBranch %6172
       %6172 = OpLabel
       %6173 = OpPhi %v2uint %6170 %6167 %528 %6161
       %6174 = OpPhi %v2uint %6163 %6167 %528 %6161
       %6175 = OpPhi %v2uint %6041 %6167 %528 %6161
       %6176 = OpPhi %bool %false %6167 %true %6161
               OpSelectionMerge %6186 None
               OpBranchConditional %6176 %6179 %6186
       %6179 = OpLabel
       %6180 = OpISub %uint %uint_0 %6052
       %6181 = OpBitwiseAnd %uint %6180 %uint_31
       %6182 = OpShiftLeftLogical %uint %6055 %6181
       %6183 = OpShiftRightLogical %uint %6055 %6052
       %6184 = OpCompositeConstruct %v2uint %6182 %6183
               OpBranch %6186
       %6186 = OpLabel
       %6187 = OpPhi %v2uint %6184 %6179 %6173 %6172
       %6188 = OpPhi %v2uint %6163 %6179 %6174 %6172
       %6189 = OpPhi %v2uint %6041 %6179 %6175 %6172
               OpBranch %6191
       %6191 = OpLabel
       %6192 = OpPhi %v2uint %6187 %6186 %270 %6157
       %6193 = OpPhi %v2uint %6188 %6186 %6056 %6157
       %6194 = OpPhi %v2uint %6189 %6186 %6041 %6157
               OpBranch %6196
       %6196 = OpLabel
       %6197 = OpPhi %v2uint %6153 %6150 %6194 %6191
       %6198 = OpPhi %v2uint %6152 %6150 %6193 %6191
       %6199 = OpPhi %v2uint %6151 %6150 %6192 %6191
       %6200 = OpExtInst %uint %184 SMax %6046 %6026
       %6201 = OpINotEqual %bool %6029 %6031
               OpSelectionMerge %6248 None
               OpBranchConditional %6201 %6204 %6248
       %6204 = OpLabel
       %6205 = OpCompositeExtract %uint %6199 0
       %6206 = OpBitwiseXor %uint %6205 %uint_4294967295
       %6207 = OpCompositeExtract %uint %6199 1
       %6208 = OpBitwiseXor %uint %6207 %uint_4294967295
       %6209 = OpShiftRightLogical %uint %6206 %uint_1
       %6210 = OpBitwiseAnd %uint %6206 %uint_1
       %6211 = OpIAdd %uint %6209 %6210
       %6212 = OpShiftRightLogical %uint %6211 %uint_31
       %6213 = OpISub %uint %uint_0 %6205
       %6214 = OpCompositeExtract %uint %6197 0
       %6215 = OpShiftRightLogical %uint %6214 %uint_1
       %6216 = OpShiftRightLogical %uint %6213 %uint_1
       %6217 = OpIAdd %uint %6216 %6215
       %6218 = OpBitwiseAnd %uint %6214 %uint_1
       %6219 = OpBitwiseAnd %uint %6218 %6213
       %6220 = OpIAdd %uint %6217 %6219
       %6221 = OpShiftRightLogical %uint %6220 %uint_31
       %6222 = OpISub %uint %6214 %6205
       %6223 = OpCompositeExtract %uint %6197 1
       %6224 = OpVectorShuffle %v2uint %6198 %528 1 4294967295
       %6225 = OpBitwiseOr %v2uint %6224 %6198
       %6226 = OpCompositeExtract %uint %6225 0
       %6227 = OpINotEqual %bool %6226 %uint_0
       %6228 = OpSGreaterThan %bool %6046 %6026
       %6229 = OpSelect %bool %6227 %6228 %false
       %6230 = OpSelect %v2uint %6229 %536 %270
       %6231 = OpCompositeExtract %uint %6230 0
       %6232 = OpShiftRightLogical %uint %6222 %uint_1
       %6233 = OpShiftRightLogical %uint %6231 %uint_1
       %6234 = OpIAdd %uint %6233 %6232
       %6235 = OpBitwiseAnd %uint %6222 %uint_1
       %6236 = OpBitwiseAnd %uint %6235 %6231
       %6237 = OpIAdd %uint %6234 %6236
       %6238 = OpShiftRightLogical %uint %6237 %uint_31
       %6239 = OpIAdd %uint %6231 %6222
       %6240 = OpCompositeExtract %uint %6230 1
       %6241 = OpIAdd %uint %6223 %6208
       %6242 = OpIAdd %uint %6241 %6212
       %6243 = OpIAdd %uint %6242 %6221
       %6244 = OpIAdd %uint %6243 %6240
       %6245 = OpIAdd %uint %6244 %6238
       %6246 = OpCompositeConstruct %v2uint %6239 %6245
               OpBranch %6248
       %6248 = OpLabel
       %6249 = OpPhi %v2uint %6246 %6204 %528 %6196
       %6250 = OpPhi %bool %false %6204 %true %6196
               OpSelectionMerge %6269 None
               OpBranchConditional %6250 %6253 %6269
       %6253 = OpLabel
       %6254 = OpCompositeExtract %uint %6197 0
       %6255 = OpCompositeExtract %uint %6199 0
       %6256 = OpShiftRightLogical %uint %6254 %uint_1
       %6257 = OpShiftRightLogical %uint %6255 %uint_1
       %6258 = OpIAdd %uint %6257 %6256
       %6259 = OpBitwiseAnd %uint %6254 %uint_1
       %6260 = OpBitwiseAnd %uint %6259 %6255
       %6261 = OpIAdd %uint %6258 %6260
       %6262 = OpShiftRightLogical %uint %6261 %uint_31
       %6263 = OpIAdd %uint %6255 %6254
       %6264 = OpIAdd %v2uint %6199 %6197
       %6265 = OpCompositeExtract %uint %6264 1
       %6266 = OpIAdd %uint %6262 %6265
       %6267 = OpCompositeConstruct %v2uint %6263 %6266
               OpBranch %6269
       %6269 = OpLabel
       %6270 = OpPhi %v2uint %6267 %6253 %6249 %6248
       %6271 = OpCompositeExtract %uint %6270 1
       %6272 = OpSLessThan %bool %6271 %uint_0
               OpSelectionMerge %6288 None
               OpBranchConditional %6272 %6275 %6288
       %6275 = OpLabel
       %6276 = OpCompositeExtract %uint %6270 0
       %6277 = OpBitwiseXor %uint %6276 %uint_4294967295
       %6278 = OpBitwiseXor %uint %6271 %uint_4294967295
       %6279 = OpShiftRightLogical %uint %6277 %uint_1
       %6280 = OpBitwiseAnd %uint %6277 %uint_1
       %6281 = OpIAdd %uint %6279 %6280
       %6282 = OpShiftRightLogical %uint %6281 %uint_31
       %6283 = OpISub %uint %uint_0 %6276
       %6284 = OpIAdd %uint %6282 %6278
       %6285 = OpCompositeConstruct %v2uint %6283 %6284
       %6286 = OpBitwiseXor %uint %6031 %uint_2147483648
               OpBranch %6288
       %6288 = OpLabel
       %6289 = OpPhi %uint %6286 %6275 %6031 %6269
       %6290 = OpPhi %v2uint %6285 %6275 %6270 %6269
       %6291 = OpCompositeExtract %uint %6290 1
       %6292 = OpExtInst %uint %184 FindUMsb %6291
       %6293 = OpISub %uint %uint_31 %6292
       %6294 = OpIEqual %bool %6291 %uint_0
       %6295 = OpCompositeExtract %uint %6290 0
       %6296 = OpExtInst %uint %184 FindUMsb %6295
       %6297 = OpISub %uint %uint_31 %6296
       %6298 = OpIAdd %uint %6297 %uint_32
       %6299 = OpSelect %uint %6294 %6298 %6293
       %6300 = OpISub %uint %uint_3 %6299
       %6301 = OpIAdd %uint %6300 %6200
       %6302 = OpUGreaterThan %bool %6299 %uint_3
               OpSelectionMerge %6333 None
               OpBranchConditional %6302 %6305 %6333
       %6305 = OpLabel
       %6306 = OpIAdd %uint %6299 %uint_4294967293
       %6307 = OpUGreaterThanEqual %bool %6306 %uint_32
               OpSelectionMerge %6315 None
               OpBranchConditional %6307 %6310 %6315
       %6310 = OpLabel
       %6311 = OpBitwiseAnd %uint %6306 %uint_31
       %6312 = OpShiftLeftLogical %uint %6295 %6311
       %6313 = OpCompositeInsert %v2uint %6312 %355 1
               OpBranch %6315
       %6315 = OpLabel
       %6316 = OpPhi %uint %uint_0 %6310 %354 %6305
       %6317 = OpPhi %v2uint %6313 %6310 %528 %6305
       %6318 = OpPhi %bool %false %6310 %true %6305
               OpSelectionMerge %6329 None
               OpBranchConditional %6318 %6321 %6329
       %6321 = OpLabel
       %6322 = OpShiftLeftLogical %uint %6291 %6306
       %6323 = OpBitwiseAnd %uint %6300 %uint_31
       %6324 = OpShiftRightLogical %uint %6295 %6323
       %6325 = OpBitwiseOr %uint %6324 %6322
       %6326 = OpShiftLeftLogical %uint %6295 %6306
       %6327 = OpCompositeConstruct %v2uint %6326 %6325
               OpBranch %6329
       %6329 = OpLabel
       %6330 = OpPhi %uint %uint_0 %6321 %6316 %6315
       %6331 = OpPhi %v2uint %6327 %6321 %6317 %6315
               OpBranch %6333
       %6333 = OpLabel
       %6334 = OpPhi %v2uint %6290 %6288 %6331 %6329
       %6335 = OpPhi %uint %6300 %6288 %6330 %6329
       %6336 = OpIAdd %uint %6335 %uint_5
       %6337 = OpBitwiseAnd %uint %6336 %uint_31
       %6338 = OpShiftLeftLogical %uint %uint_1 %6337
       %6339 = OpCompositeInsert %v2uint %6338 %355 1
       %6340 = OpIAdd %uint %6338 %uint_4294967295
       %6341 = OpCompositeInsert %v2uint %6340 %650 1
       %6342 = OpBitwiseAnd %v2uint %6341 %6334
       %6343 = OpCompositeExtract %uint %6342 1
       %6344 = OpBitwiseAnd %v2uint %6339 %6334
       %6345 = OpIAdd %uint %6335 %uint_2
       %6346 = OpBitwiseAnd %uint %6345 %uint_31
       %6347 = OpShiftLeftLogical %uint %uint_4 %6346
       %6348 = OpUGreaterThan %bool %6343 %6347
       %6349 = OpLogicalNot %bool %6348
               OpSelectionMerge %6380 None
               OpBranchConditional %6349 %6352 %6380
       %6352 = OpLabel
       %6353 = OpCompositeExtract %uint %6342 0
       %6354 = OpVectorShuffle %v2uint %6198 %528 1 4294967295
       %6355 = OpBitwiseOr %v2uint %6354 %6198
       %6356 = OpCompositeExtract %uint %6355 0
       %6357 = OpINotEqual %bool %6356 %uint_0
       %6358 = OpSelect %uint %6357 %uint_1 %uint_0
       %6359 = OpBitwiseOr %uint %6353 %6358
       %6360 = OpIEqual %bool %6343 %6347
       %6361 = OpINotEqual %bool %6359 %uint_0
       %6362 = OpSelect %bool %6360 %6361 %false
       %6363 = OpLogicalNot %bool %6362
               OpSelectionMerge %6376 None
               OpBranchConditional %6363 %6366 %6376
       %6366 = OpLabel
       %6367 = OpINotEqual %bool %6343 %6347
       %6368 = OpLogicalOr %bool %6367 %6361
       %6369 = OpVectorShuffle %v2uint %6344 %528 1 4294967295
       %6370 = OpBitwiseOr %v2uint %6369 %6344
       %6371 = OpCompositeExtract %uint %6370 0
       %6372 = OpIEqual %bool %6371 %uint_0
       %6373 = OpSelect %bool %6368 %true %6372
       %6374 = OpLogicalNot %bool %6373
               OpBranch %6376
       %6376 = OpLabel
       %6377 = OpPhi %v2uint %6334 %6366 %528 %6352
       %6378 = OpPhi %bool %6374 %6366 %6362 %6352
               OpBranch %6380
       %6380 = OpLabel
       %6381 = OpPhi %v2uint %6377 %6376 %528 %6333
       %6382 = OpPhi %bool %6378 %6376 %6348 %6333
               OpSelectionMerge %6390 None
               OpBranchConditional %6382 %6385 %6390
       %6385 = OpLabel
       %6386 = OpCompositeExtract %uint %6334 1
       %6387 = OpIAdd %uint %6338 %6386
       %6388 = OpCompositeInsert %v2uint %6387 %6334 1
               OpBranch %6390
       %6390 = OpLabel
       %6391 = OpPhi %v2uint %6388 %6385 %6381 %6380
       %6392 = OpCompositeExtract %uint %6391 1
       %6393 = OpShiftRightLogical %uint %6392 %6337
       %6394 = OpUGreaterThan %bool %6393 %uint_16777215
       %6395 = OpSelect %uint %6394 %uint_1 %uint_0
       %6396 = OpShiftRightLogical %uint %6393 %6395
       %6397 = OpIAdd %uint %6301 %6395
       %6398 = OpINotEqual %bool %6396 %uint_0
               OpSelectionMerge %6440 None
               OpBranchConditional %6398 %6401 %6440
       %6401 = OpLabel
       %6402 = OpSLessThanEqual %bool %6397 %uint_127
               OpSelectionMerge %6428 None
               OpBranchConditional %6402 %6405 %6428
       %6405 = OpLabel
       %6406 = OpSGreaterThanEqual %bool %6397 %uint_4294967170
               OpSelectionMerge %6417 None
               OpBranchConditional %6406 %6409 %6417
       %6409 = OpLabel
       %6410 = OpShiftLeftLogical %uint %6397 %uint_23
       %6411 = OpIAdd %uint %6410 %uint_1065353216
       %6412 = OpBitwiseAnd %uint %6396 %uint_8388607
       %6413 = OpBitwiseOr %uint %6411 %6412
       %6414 = OpBitwiseOr %uint %6413 %6289
       %6415 = OpBitcast %float %6414
               OpBranch %6417
       %6417 = OpLabel
       %6418 = OpPhi %float %6415 %6409 %261 %6405
       %6419 = OpPhi %bool %false %6409 %true %6405
               OpSelectionMerge %6425 None
               OpBranchConditional %6419 %6422 %6425
       %6422 = OpLabel
       %6423 = OpBitcast %float %6289
               OpBranch %6425
       %6425 = OpLabel
       %6426 = OpPhi %float %6423 %6422 %6418 %6417
               OpBranch %6428
       %6428 = OpLabel
       %6429 = OpPhi %float %6426 %6425 %261 %6401
       %6430 = OpPhi %bool %false %6425 %true %6401
               OpSelectionMerge %6437 None
               OpBranchConditional %6430 %6433 %6437
       %6433 = OpLabel
       %6434 = OpBitwiseOr %uint %6289 %uint_2139095040
       %6435 = OpBitcast %float %6434
               OpBranch %6437
       %6437 = OpLabel
       %6438 = OpPhi %float %6435 %6433 %6429 %6428
               OpBranch %6440
       %6440 = OpLabel
       %6441 = OpPhi %float %6438 %6437 %float_0 %6390
               OpBranch %6443
       %6443 = OpLabel
       %6444 = OpPhi %float %6441 %6440 %6003 %6015
               OpBranch %6446
       %6446 = OpLabel
       %6447 = OpPhi %float %6444 %6443 %261 %6011
       %6448 = OpPhi %bool %false %6443 %true %6011
               OpSelectionMerge %6456 None
               OpBranchConditional %6448 %6451 %6456
       %6451 = OpLabel
       %6452 = OpVectorShuffle %v2float %5994 %768 1 4294967295
       %6453 = OpFMul %v2float %5994 %6452
       %6454 = OpCompositeExtract %float %6453 0
               OpBranch %6456
       %6456 = OpLabel
       %6457 = OpPhi %float %6454 %6451 %6447 %6446
               OpBranch %6459
       %6459 = OpLabel
       %6460 = OpPhi %float %6457 %6456 %6003 %5984
               OpBranch %6462
       %6462 = OpLabel
       %6463 = OpPhi %float %6460 %6459 %5956 %5979
               OpBranch %6465
       %6465 = OpLabel
       %6466 = OpPhi %float %6463 %6462 %261 %5974
       %6467 = OpPhi %bool %false %6462 %true %5974
               OpBranch %6469
       %6469 = OpLabel
       %6470 = OpPhi %float %6466 %6465 %261 %5969
       %6471 = OpPhi %bool %6467 %6465 %5970 %5969
               OpBranch %6473
       %6473 = OpLabel
       %6474 = OpPhi %float %6470 %6469 %261 %5964
       %6475 = OpPhi %bool %6471 %6469 %5965 %5964
               OpBranch %6477
       %6477 = OpLabel
       %6478 = OpPhi %float %6474 %6473 %261 %5959
       %6479 = OpPhi %bool %6475 %6473 %5960 %5959
               OpBranch %6481
       %6481 = OpLabel
       %6482 = OpPhi %float %6478 %6477 %261 %5948
       %6483 = OpPhi %bool %6479 %6477 %5414 %5948
               OpSelectionMerge %6489 None
               OpBranchConditional %6483 %6486 %6489
       %6486 = OpLabel
       %6487 = OpFSub %float %5955 %5955
               OpBranch %6489
       %6489 = OpLabel
       %6490 = OpPhi %float %6487 %6486 %6482 %6481
       %6491 = OpFSub %float %5954 %5955
       %6492 = OpFSub %float %5954 %6491
       %6493 = OpFSub %float %6492 %5955
       %6494 = OpFSub %float %6493 %6490
       %6495 = OpFAdd %float %6491 %6494
       %6496 = OpFMul %float %5411 %float_5_39030253en15
       %6497 = OpFNegate %float %6496
               OpSelectionMerge %7022 None
               OpBranchConditional %5415 %6500 %7022
       %6500 = OpLabel
       %6501 = OpIsNan %bool %float_5_39030253en15
       %6502 = OpLogicalNot %bool %6501
               OpSelectionMerge %7018 None
               OpBranchConditional %6502 %6505 %7018
       %6505 = OpLabel
       %6506 = OpIsNan %bool %6497
       %6507 = OpLogicalNot %bool %6506
               OpSelectionMerge %7014 None
               OpBranchConditional %6507 %6510 %7014
       %6510 = OpLabel
       %6511 = OpIsInf %bool %5411
       %6512 = OpLogicalNot %bool %6511
               OpSelectionMerge %7010 None
               OpBranchConditional %6512 %6515 %7010
       %6515 = OpLabel
       %6516 = OpIsInf %bool %float_5_39030253en15
       %6517 = OpLogicalNot %bool %6516
               OpSelectionMerge %7006 None
               OpBranchConditional %6517 %6520 %7006
       %6520 = OpLabel
       %6521 = OpIsInf %bool %6497
       %6522 = OpLogicalNot %bool %6521
               OpSelectionMerge %7003 None
               OpBranchConditional %6522 %6525 %7003
       %6525 = OpLabel
       %6526 = OpCompositeInsert %v2float %5411 %3023 1
       %6527 = OpBitcast %v2uint %6526
       %6528 = OpBitwiseAnd %v2uint %6527 %267
       %6529 = OpINotEqual %v2bool %6528 %270
       %6530 = OpBitwiseAnd %v2uint %6527 %272
       %6531 = OpIEqual %v2bool %6530 %270
       %6532 = OpLogicalOr %v2bool %6531 %6529
       %6533 = OpBitwiseAnd %v2uint %6527 %277
       %6534 = OpBitcast %v2float %6533
       %6535 = OpSelect %v2float %6532 %6526 %6534
       %6536 = OpBitcast %uint %6497
       %6537 = OpBitwiseAnd %uint %6536 %uint_2139095040
       %6538 = OpINotEqual %bool %6537 %uint_0
       %6539 = OpBitwiseAnd %uint %6536 %uint_8388607
       %6540 = OpIEqual %bool %6539 %uint_0
       %6541 = OpLogicalOr %bool %6540 %6538
       %6542 = OpBitwiseAnd %uint %6536 %uint_2147483648
       %6543 = OpBitcast %float %6542
       %6544 = OpSelect %float %6541 %6497 %6543
       %6545 = OpFOrdEqual %v2bool %6535 %290
       %6546 = OpVectorShuffle %v2bool %6545 %292 1 4294967295
       %6547 = OpLogicalOr %v2bool %6546 %6545
       %6548 = OpCompositeExtract %bool %6547 0
       %6549 = OpLogicalNot %bool %6548
               OpSelectionMerge %7000 None
               OpBranchConditional %6549 %6552 %7000
       %6552 = OpLabel
       %6553 = OpFUnordNotEqual %bool %6544 %float_0
               OpSelectionMerge %6987 None
               OpBranchConditional %6553 %6556 %6987
       %6556 = OpLabel
       %6557 = OpBitcast %v2uint %6535
       %6558 = OpCompositeExtract %uint %6557 1
       %6559 = OpShiftRightLogical %uint %6558 %uint_23
       %6560 = OpBitwiseAnd %uint %6559 %uint_255
       %6561 = OpCompositeExtract %uint %6557 0
       %6562 = OpShiftRightLogical %uint %6561 %uint_23
       %6563 = OpBitwiseAnd %uint %6562 %uint_255
       %6564 = OpBitcast %uint %6544
       %6565 = OpShiftRightLogical %uint %6564 %uint_23
       %6566 = OpBitwiseAnd %uint %6565 %uint_255
       %6567 = OpIAdd %uint %6566 %uint_4294967169
       %6568 = OpBitwiseAnd %v2uint %6557 %272
       %6569 = OpBitwiseOr %v2uint %6568 %319
       %6570 = OpBitwiseAnd %uint %6564 %uint_2147483648
       %6571 = OpBitwiseXor %uint %6561 %6558
       %6572 = OpBitwiseAnd %uint %6571 %uint_2147483648
       %6573 = OpCompositeExtract %uint %6569 0
       %6574 = OpCompositeExtract %uint %6569 1
       %6575 = OpUMulExtended %_struct_58 %6574 %6573
       %6576 = OpCompositeExtract %uint %6575 1
       %6577 = OpIMul %uint %6573 %6574
       %6578 = OpShiftLeftLogical %uint %6576 %uint_14
       %6579 = OpShiftRightLogical %uint %6577 %uint_18
       %6580 = OpBitwiseOr %uint %6579 %6578
       %6581 = OpShiftLeftLogical %uint %6577 %uint_14
       %6582 = OpCompositeConstruct %v2uint %6581 %6580
       %6583 = OpBitwiseOr %uint %6580 %6581
       %6584 = OpIEqual %bool %6583 %uint_0
       %6585 = OpIAdd %uint %6560 %uint_4294967042
       %6586 = OpIAdd %uint %6585 %6563
       %6587 = OpSelect %uint %6584 %uint_0 %6586
       %6588 = OpBitwiseOr %uint %6587 %6583
       %6589 = OpINotEqual %bool %6588 %uint_0
               OpSelectionMerge %6984 None
               OpBranchConditional %6589 %6592 %6984
       %6592 = OpLabel
       %6593 = OpISub %uint %6587 %6567
       %6594 = OpShiftLeftLogical %uint %6564 %uint_5
       %6595 = OpBitwiseAnd %uint %6594 %uint_268435424
       %6596 = OpBitwiseOr %uint %6595 %uint_268435456
       %6597 = OpCompositeInsert %v2uint %6596 %355 1
       %6598 = OpExtInst %uint %184 SAbs %6593
       %6599 = OpINotEqual %bool %6598 %uint_0
               OpSelectionMerge %6626 None
               OpBranchConditional %6599 %6602 %6626
       %6602 = OpLabel
       %6603 = OpUGreaterThanEqual %bool %6598 %uint_32
               OpSelectionMerge %6611 None
               OpBranchConditional %6603 %6606 %6611
       %6606 = OpLabel
       %6607 = OpBitwiseAnd %uint %6598 %uint_31
       %6608 = OpShiftLeftLogical %uint %uint_1 %6607
       %6609 = OpCompositeInsert %v2uint %6608 %355 1
               OpBranch %6611
       %6611 = OpLabel
       %6612 = OpPhi %v2uint %6609 %6606 %528 %6602
       %6613 = OpPhi %bool %false %6606 %true %6602
               OpSelectionMerge %6623 None
               OpBranchConditional %6613 %6616 %6623
       %6616 = OpLabel
       %6617 = OpISub %uint %uint_0 %6598
       %6618 = OpBitwiseAnd %uint %6617 %uint_31
       %6619 = OpShiftRightLogical %uint %uint_1 %6618
       %6620 = OpShiftLeftLogical %uint %uint_1 %6598
       %6621 = OpCompositeConstruct %v2uint %6620 %6619
               OpBranch %6623
       %6623 = OpLabel
       %6624 = OpPhi %v2uint %6621 %6616 %6612 %6611
               OpBranch %6626
       %6626 = OpLabel
       %6627 = OpPhi %v2uint %7106 %6592 %6624 %6623
       %6628 = OpCompositeExtract %uint %6627 0
       %6629 = OpShiftRightLogical %uint %6628 %uint_1
       %6630 = OpIAdd %uint %6629 %uint_2147483647
       %6631 = OpBitwiseAnd %uint %6628 %uint_1
       %6632 = OpIAdd %uint %6630 %6631
       %6633 = OpShiftRightLogical %uint %6632 %uint_31
       %6634 = OpIAdd %uint %6628 %uint_4294967295
       %6635 = OpCompositeExtract %uint %6627 1
       %6636 = OpIAdd %uint %6635 %uint_4294967295
       %6637 = OpIAdd %uint %6636 %6633
       %6638 = OpCompositeConstruct %v2uint %6634 %6637
       %6639 = OpSLessThanEqual %bool %6593 %uint_0
               OpSelectionMerge %6691 None
               OpBranchConditional %6639 %6642 %6691
       %6642 = OpLabel
       %6643 = OpSGreaterThanEqual %bool %6593 %uint_4294967233
               OpSelectionMerge %6686 None
               OpBranchConditional %6643 %6646 %6686
       %6646 = OpLabel
       %6647 = OpISub %uint %uint_0 %6593
       %6648 = OpBitwiseAnd %v2uint %6638 %6582
       %6649 = OpINotEqual %bool %6587 %6567
               OpSelectionMerge %6681 None
               OpBranchConditional %6649 %6652 %6681
       %6652 = OpLabel
       %6653 = OpUGreaterThanEqual %bool %6647 %uint_32
               OpSelectionMerge %6661 None
               OpBranchConditional %6653 %6656 %6661
       %6656 = OpLabel
       %6657 = OpBitwiseAnd %uint %6647 %uint_31
       %6658 = OpShiftRightLogical %uint %6580 %6657
       %6659 = OpCompositeInsert %v2uint %6658 %420 0
               OpBranch %6661
       %6661 = OpLabel
       %6662 = OpPhi %v2uint %6597 %6656 %528 %6652
       %6663 = OpPhi %v2uint %6648 %6656 %528 %6652
       %6664 = OpPhi %v2uint %6659 %6656 %528 %6652
       %6665 = OpPhi %bool %false %6656 %true %6652
               OpSelectionMerge %6676 None
               OpBranchConditional %6665 %6668 %6676
       %6668 = OpLabel
       %6669 = OpShiftRightLogical %uint %6581 %6647
       %6670 = OpBitwiseAnd %uint %6593 %uint_31
       %6671 = OpShiftLeftLogical %uint %6580 %6670
       %6672 = OpBitwiseOr %uint %6671 %6669
       %6673 = OpShiftRightLogical %uint %6580 %6647
       %6674 = OpCompositeConstruct %v2uint %6672 %6673
               OpBranch %6676
       %6676 = OpLabel
       %6677 = OpPhi %v2uint %6597 %6668 %6662 %6661
       %6678 = OpPhi %v2uint %6648 %6668 %6663 %6661
       %6679 = OpPhi %v2uint %6674 %6668 %6664 %6661
               OpBranch %6681
       %6681 = OpLabel
       %6682 = OpPhi %v2uint %6677 %6676 %6597 %6646
       %6683 = OpPhi %v2uint %6678 %6676 %6648 %6646
       %6684 = OpPhi %v2uint %6679 %6676 %6582 %6646
               OpBranch %6686
       %6686 = OpLabel
       %6687 = OpPhi %v2uint %6682 %6681 %6597 %6642
       %6688 = OpPhi %v2uint %6683 %6681 %6582 %6642
       %6689 = OpPhi %v2uint %6684 %6681 %270 %6642
               OpBranch %6691
       %6691 = OpLabel
       %6692 = OpPhi %v2uint %6687 %6686 %528 %6626
       %6693 = OpPhi %v2uint %6688 %6686 %528 %6626
       %6694 = OpPhi %v2uint %6689 %6686 %528 %6626
       %6695 = OpPhi %bool %false %6686 %true %6626
               OpSelectionMerge %6737 None
               OpBranchConditional %6695 %6698 %6737
       %6698 = OpLabel
       %6699 = OpULessThanEqual %bool %6593 %uint_63
               OpSelectionMerge %6732 None
               OpBranchConditional %6699 %6702 %6732
       %6702 = OpLabel
       %6703 = OpBitwiseAnd %uint %6637 %6596
       %6704 = OpCompositeInsert %v2uint %6703 %355 1
       %6705 = OpUGreaterThanEqual %bool %6593 %uint_32
               OpSelectionMerge %6713 None
               OpBranchConditional %6705 %6708 %6713
       %6708 = OpLabel
       %6709 = OpBitwiseAnd %uint %6593 %uint_31
       %6710 = OpShiftRightLogical %uint %6596 %6709
       %6711 = OpCompositeInsert %v2uint %6710 %420 0
               OpBranch %6713
       %6713 = OpLabel
       %6714 = OpPhi %v2uint %6711 %6708 %528 %6702
       %6715 = OpPhi %v2uint %6704 %6708 %528 %6702
       %6716 = OpPhi %v2uint %6582 %6708 %528 %6702
       %6717 = OpPhi %bool %false %6708 %true %6702
               OpSelectionMerge %6727 None
               OpBranchConditional %6717 %6720 %6727
       %6720 = OpLabel
       %6721 = OpISub %uint %uint_0 %6593
       %6722 = OpBitwiseAnd %uint %6721 %uint_31
       %6723 = OpShiftLeftLogical %uint %6596 %6722
       %6724 = OpShiftRightLogical %uint %6596 %6593
       %6725 = OpCompositeConstruct %v2uint %6723 %6724
               OpBranch %6727
       %6727 = OpLabel
       %6728 = OpPhi %v2uint %6725 %6720 %6714 %6713
       %6729 = OpPhi %v2uint %6704 %6720 %6715 %6713
       %6730 = OpPhi %v2uint %6582 %6720 %6716 %6713
               OpBranch %6732
       %6732 = OpLabel
       %6733 = OpPhi %v2uint %6728 %6727 %270 %6698
       %6734 = OpPhi %v2uint %6729 %6727 %6597 %6698
       %6735 = OpPhi %v2uint %6730 %6727 %6582 %6698
               OpBranch %6737
       %6737 = OpLabel
       %6738 = OpPhi %v2uint %6694 %6691 %6735 %6732
       %6739 = OpPhi %v2uint %6693 %6691 %6734 %6732
       %6740 = OpPhi %v2uint %6692 %6691 %6733 %6732
       %6741 = OpExtInst %uint %184 SMax %6587 %6567
       %6742 = OpINotEqual %bool %6570 %6572
               OpSelectionMerge %6789 None
               OpBranchConditional %6742 %6745 %6789
       %6745 = OpLabel
       %6746 = OpCompositeExtract %uint %6740 0
       %6747 = OpBitwiseXor %uint %6746 %uint_4294967295
       %6748 = OpCompositeExtract %uint %6740 1
       %6749 = OpBitwiseXor %uint %6748 %uint_4294967295
       %6750 = OpShiftRightLogical %uint %6747 %uint_1
       %6751 = OpBitwiseAnd %uint %6747 %uint_1
       %6752 = OpIAdd %uint %6750 %6751
       %6753 = OpShiftRightLogical %uint %6752 %uint_31
       %6754 = OpISub %uint %uint_0 %6746
       %6755 = OpCompositeExtract %uint %6738 0
       %6756 = OpShiftRightLogical %uint %6755 %uint_1
       %6757 = OpShiftRightLogical %uint %6754 %uint_1
       %6758 = OpIAdd %uint %6757 %6756
       %6759 = OpBitwiseAnd %uint %6755 %uint_1
       %6760 = OpBitwiseAnd %uint %6759 %6754
       %6761 = OpIAdd %uint %6758 %6760
       %6762 = OpShiftRightLogical %uint %6761 %uint_31
       %6763 = OpISub %uint %6755 %6746
       %6764 = OpCompositeExtract %uint %6738 1
       %6765 = OpVectorShuffle %v2uint %6739 %528 1 4294967295
       %6766 = OpBitwiseOr %v2uint %6765 %6739
       %6767 = OpCompositeExtract %uint %6766 0
       %6768 = OpINotEqual %bool %6767 %uint_0
       %6769 = OpSGreaterThan %bool %6587 %6567
       %6770 = OpSelect %bool %6768 %6769 %false
       %6771 = OpSelect %v2uint %6770 %536 %270
       %6772 = OpCompositeExtract %uint %6771 0
       %6773 = OpShiftRightLogical %uint %6763 %uint_1
       %6774 = OpShiftRightLogical %uint %6772 %uint_1
       %6775 = OpIAdd %uint %6774 %6773
       %6776 = OpBitwiseAnd %uint %6763 %uint_1
       %6777 = OpBitwiseAnd %uint %6776 %6772
       %6778 = OpIAdd %uint %6775 %6777
       %6779 = OpShiftRightLogical %uint %6778 %uint_31
       %6780 = OpIAdd %uint %6772 %6763
       %6781 = OpCompositeExtract %uint %6771 1
       %6782 = OpIAdd %uint %6764 %6749
       %6783 = OpIAdd %uint %6782 %6753
       %6784 = OpIAdd %uint %6783 %6762
       %6785 = OpIAdd %uint %6784 %6781
       %6786 = OpIAdd %uint %6785 %6779
       %6787 = OpCompositeConstruct %v2uint %6780 %6786
               OpBranch %6789
       %6789 = OpLabel
       %6790 = OpPhi %v2uint %6787 %6745 %528 %6737
       %6791 = OpPhi %bool %false %6745 %true %6737
               OpSelectionMerge %6810 None
               OpBranchConditional %6791 %6794 %6810
       %6794 = OpLabel
       %6795 = OpCompositeExtract %uint %6738 0
       %6796 = OpCompositeExtract %uint %6740 0
       %6797 = OpShiftRightLogical %uint %6795 %uint_1
       %6798 = OpShiftRightLogical %uint %6796 %uint_1
       %6799 = OpIAdd %uint %6798 %6797
       %6800 = OpBitwiseAnd %uint %6795 %uint_1
       %6801 = OpBitwiseAnd %uint %6800 %6796
       %6802 = OpIAdd %uint %6799 %6801
       %6803 = OpShiftRightLogical %uint %6802 %uint_31
       %6804 = OpIAdd %uint %6796 %6795
       %6805 = OpIAdd %v2uint %6740 %6738
       %6806 = OpCompositeExtract %uint %6805 1
       %6807 = OpIAdd %uint %6803 %6806
       %6808 = OpCompositeConstruct %v2uint %6804 %6807
               OpBranch %6810
       %6810 = OpLabel
       %6811 = OpPhi %v2uint %6808 %6794 %6790 %6789
       %6812 = OpCompositeExtract %uint %6811 1
       %6813 = OpSLessThan %bool %6812 %uint_0
               OpSelectionMerge %6829 None
               OpBranchConditional %6813 %6816 %6829
       %6816 = OpLabel
       %6817 = OpCompositeExtract %uint %6811 0
       %6818 = OpBitwiseXor %uint %6817 %uint_4294967295
       %6819 = OpBitwiseXor %uint %6812 %uint_4294967295
       %6820 = OpShiftRightLogical %uint %6818 %uint_1
       %6821 = OpBitwiseAnd %uint %6818 %uint_1
       %6822 = OpIAdd %uint %6820 %6821
       %6823 = OpShiftRightLogical %uint %6822 %uint_31
       %6824 = OpISub %uint %uint_0 %6817
       %6825 = OpIAdd %uint %6823 %6819
       %6826 = OpCompositeConstruct %v2uint %6824 %6825
       %6827 = OpBitwiseXor %uint %6572 %uint_2147483648
               OpBranch %6829
       %6829 = OpLabel
       %6830 = OpPhi %uint %6827 %6816 %6572 %6810
       %6831 = OpPhi %v2uint %6826 %6816 %6811 %6810
       %6832 = OpCompositeExtract %uint %6831 1
       %6833 = OpExtInst %uint %184 FindUMsb %6832
       %6834 = OpISub %uint %uint_31 %6833
       %6835 = OpIEqual %bool %6832 %uint_0
       %6836 = OpCompositeExtract %uint %6831 0
       %6837 = OpExtInst %uint %184 FindUMsb %6836
       %6838 = OpISub %uint %uint_31 %6837
       %6839 = OpIAdd %uint %6838 %uint_32
       %6840 = OpSelect %uint %6835 %6839 %6834
       %6841 = OpISub %uint %uint_3 %6840
       %6842 = OpIAdd %uint %6841 %6741
       %6843 = OpUGreaterThan %bool %6840 %uint_3
               OpSelectionMerge %6874 None
               OpBranchConditional %6843 %6846 %6874
       %6846 = OpLabel
       %6847 = OpIAdd %uint %6840 %uint_4294967293
       %6848 = OpUGreaterThanEqual %bool %6847 %uint_32
               OpSelectionMerge %6856 None
               OpBranchConditional %6848 %6851 %6856
       %6851 = OpLabel
       %6852 = OpBitwiseAnd %uint %6847 %uint_31
       %6853 = OpShiftLeftLogical %uint %6836 %6852
       %6854 = OpCompositeInsert %v2uint %6853 %355 1
               OpBranch %6856
       %6856 = OpLabel
       %6857 = OpPhi %uint %uint_0 %6851 %354 %6846
       %6858 = OpPhi %v2uint %6854 %6851 %528 %6846
       %6859 = OpPhi %bool %false %6851 %true %6846
               OpSelectionMerge %6870 None
               OpBranchConditional %6859 %6862 %6870
       %6862 = OpLabel
       %6863 = OpShiftLeftLogical %uint %6832 %6847
       %6864 = OpBitwiseAnd %uint %6841 %uint_31
       %6865 = OpShiftRightLogical %uint %6836 %6864
       %6866 = OpBitwiseOr %uint %6865 %6863
       %6867 = OpShiftLeftLogical %uint %6836 %6847
       %6868 = OpCompositeConstruct %v2uint %6867 %6866
               OpBranch %6870
       %6870 = OpLabel
       %6871 = OpPhi %uint %uint_0 %6862 %6857 %6856
       %6872 = OpPhi %v2uint %6868 %6862 %6858 %6856
               OpBranch %6874
       %6874 = OpLabel
       %6875 = OpPhi %v2uint %6831 %6829 %6872 %6870
       %6876 = OpPhi %uint %6841 %6829 %6871 %6870
       %6877 = OpIAdd %uint %6876 %uint_5
       %6878 = OpBitwiseAnd %uint %6877 %uint_31
       %6879 = OpShiftLeftLogical %uint %uint_1 %6878
       %6880 = OpCompositeInsert %v2uint %6879 %355 1
       %6881 = OpIAdd %uint %6879 %uint_4294967295
       %6882 = OpCompositeInsert %v2uint %6881 %650 1
       %6883 = OpBitwiseAnd %v2uint %6882 %6875
       %6884 = OpCompositeExtract %uint %6883 1
       %6885 = OpBitwiseAnd %v2uint %6880 %6875
       %6886 = OpIAdd %uint %6876 %uint_2
       %6887 = OpBitwiseAnd %uint %6886 %uint_31
       %6888 = OpShiftLeftLogical %uint %uint_4 %6887
       %6889 = OpUGreaterThan %bool %6884 %6888
       %6890 = OpLogicalNot %bool %6889
               OpSelectionMerge %6921 None
               OpBranchConditional %6890 %6893 %6921
       %6893 = OpLabel
       %6894 = OpCompositeExtract %uint %6883 0
       %6895 = OpVectorShuffle %v2uint %6739 %528 1 4294967295
       %6896 = OpBitwiseOr %v2uint %6895 %6739
       %6897 = OpCompositeExtract %uint %6896 0
       %6898 = OpINotEqual %bool %6897 %uint_0
       %6899 = OpSelect %uint %6898 %uint_1 %uint_0
       %6900 = OpBitwiseOr %uint %6894 %6899
       %6901 = OpIEqual %bool %6884 %6888
       %6902 = OpINotEqual %bool %6900 %uint_0
       %6903 = OpSelect %bool %6901 %6902 %false
       %6904 = OpLogicalNot %bool %6903
               OpSelectionMerge %6917 None
               OpBranchConditional %6904 %6907 %6917
       %6907 = OpLabel
       %6908 = OpINotEqual %bool %6884 %6888
       %6909 = OpLogicalOr %bool %6908 %6902
       %6910 = OpVectorShuffle %v2uint %6885 %528 1 4294967295
       %6911 = OpBitwiseOr %v2uint %6910 %6885
       %6912 = OpCompositeExtract %uint %6911 0
       %6913 = OpIEqual %bool %6912 %uint_0
       %6914 = OpSelect %bool %6909 %true %6913
       %6915 = OpLogicalNot %bool %6914
               OpBranch %6917
       %6917 = OpLabel
       %6918 = OpPhi %v2uint %6875 %6907 %528 %6893
       %6919 = OpPhi %bool %6915 %6907 %6903 %6893
               OpBranch %6921
       %6921 = OpLabel
       %6922 = OpPhi %v2uint %6918 %6917 %528 %6874
       %6923 = OpPhi %bool %6919 %6917 %6889 %6874
               OpSelectionMerge %6931 None
               OpBranchConditional %6923 %6926 %6931
       %6926 = OpLabel
       %6927 = OpCompositeExtract %uint %6875 1
       %6928 = OpIAdd %uint %6879 %6927
       %6929 = OpCompositeInsert %v2uint %6928 %6875 1
               OpBranch %6931
       %6931 = OpLabel
       %6932 = OpPhi %v2uint %6929 %6926 %6922 %6921
       %6933 = OpCompositeExtract %uint %6932 1
       %6934 = OpShiftRightLogical %uint %6933 %6878
       %6935 = OpUGreaterThan %bool %6934 %uint_16777215
       %6936 = OpSelect %uint %6935 %uint_1 %uint_0
       %6937 = OpShiftRightLogical %uint %6934 %6936
       %6938 = OpIAdd %uint %6842 %6936
       %6939 = OpINotEqual %bool %6937 %uint_0
               OpSelectionMerge %6981 None
               OpBranchConditional %6939 %6942 %6981
       %6942 = OpLabel
       %6943 = OpSLessThanEqual %bool %6938 %uint_127
               OpSelectionMerge %6969 None
               OpBranchConditional %6943 %6946 %6969
       %6946 = OpLabel
       %6947 = OpSGreaterThanEqual %bool %6938 %uint_4294967170
               OpSelectionMerge %6958 None
               OpBranchConditional %6947 %6950 %6958
       %6950 = OpLabel
       %6951 = OpShiftLeftLogical %uint %6938 %uint_23
       %6952 = OpIAdd %uint %6951 %uint_1065353216
       %6953 = OpBitwiseAnd %uint %6937 %uint_8388607
       %6954 = OpBitwiseOr %uint %6952 %6953
       %6955 = OpBitwiseOr %uint %6954 %6830
       %6956 = OpBitcast %float %6955
               OpBranch %6958
       %6958 = OpLabel
       %6959 = OpPhi %float %6956 %6950 %261 %6946
       %6960 = OpPhi %bool %false %6950 %true %6946
               OpSelectionMerge %6966 None
               OpBranchConditional %6960 %6963 %6966
       %6963 = OpLabel
       %6964 = OpBitcast %float %6830
               OpBranch %6966
       %6966 = OpLabel
       %6967 = OpPhi %float %6964 %6963 %6959 %6958
               OpBranch %6969
       %6969 = OpLabel
       %6970 = OpPhi %float %6967 %6966 %261 %6942
       %6971 = OpPhi %bool %false %6966 %true %6942
               OpSelectionMerge %6978 None
               OpBranchConditional %6971 %6974 %6978
       %6974 = OpLabel
       %6975 = OpBitwiseOr %uint %6830 %uint_2139095040
       %6976 = OpBitcast %float %6975
               OpBranch %6978
       %6978 = OpLabel
       %6979 = OpPhi %float %6976 %6974 %6970 %6969
               OpBranch %6981
       %6981 = OpLabel
       %6982 = OpPhi %float %6979 %6978 %float_0 %6931
               OpBranch %6984
       %6984 = OpLabel
       %6985 = OpPhi %float %6982 %6981 %6544 %6556
               OpBranch %6987
       %6987 = OpLabel
       %6988 = OpPhi %float %6985 %6984 %261 %6552
       %6989 = OpPhi %bool %false %6984 %true %6552
               OpSelectionMerge %6997 None
               OpBranchConditional %6989 %6992 %6997
       %6992 = OpLabel
       %6993 = OpVectorShuffle %v2float %6535 %768 1 4294967295
       %6994 = OpFMul %v2float %6535 %6993
       %6995 = OpCompositeExtract %float %6994 0
               OpBranch %6997
       %6997 = OpLabel
       %6998 = OpPhi %float %6995 %6992 %6988 %6987
               OpBranch %7000
       %7000 = OpLabel
       %7001 = OpPhi %float %6998 %6997 %6544 %6525
               OpBranch %7003
       %7003 = OpLabel
       %7004 = OpPhi %float %7001 %7000 %6497 %6520
               OpBranch %7006
       %7006 = OpLabel
       %7007 = OpPhi %float %7004 %7003 %261 %6515
       %7008 = OpPhi %bool %false %7003 %true %6515
               OpBranch %7010
       %7010 = OpLabel
       %7011 = OpPhi %float %7007 %7006 %261 %6510
       %7012 = OpPhi %bool %7008 %7006 %6511 %6510
               OpBranch %7014
       %7014 = OpLabel
       %7015 = OpPhi %float %7011 %7010 %261 %6505
       %7016 = OpPhi %bool %7012 %7010 %6506 %6505
               OpBranch %7018
       %7018 = OpLabel
       %7019 = OpPhi %float %7015 %7014 %261 %6500
       %7020 = OpPhi %bool %7016 %7014 %6501 %6500
               OpBranch %7022
       %7022 = OpLabel
       %7023 = OpPhi %float %7019 %7018 %261 %6489
       %7024 = OpPhi %bool %7020 %7018 %5414 %6489
               OpSelectionMerge %7030 None
               OpBranchConditional %7024 %7027 %7030
       %7027 = OpLabel
       %7028 = OpFSub %float %6496 %6496
               OpBranch %7030
       %7030 = OpLabel
       %7031 = OpPhi %float %7028 %7027 %7023 %7022
       %7032 = OpFSub %float %6495 %6496
       %7033 = OpFSub %float %6495 %7032
       %7034 = OpFSub %float %7033 %6496
       %7035 = OpFAdd %float %7032 %7034
       %7036 = OpFNegate %float %7031
       %7037 = OpConvertFToS %uint %5411
               OpBranch %7039
       %7039 = OpLabel
       %7040 = OpPhi %uint %7037 %7030 %5402 %5401
       %7041 = OpPhi %float %7035 %7030 %5403 %5401
       %7042 = OpPhi %float %7036 %7030 %5404 %5401
               OpBranch %7044
       %7044 = OpLabel
       %7045 = OpBitcast %uint %35
       %7046 = OpFMul %float %7041 %7041
       %7047 = OpFMul %float %7041 %7046
       %7048 = OpFMul %float %7046 %float_1_58969102en10
       %7049 = OpFAdd %float %7048 %float_n2_50507597en08
       %7050 = OpFMul %float %7046 %7049
       %7051 = OpFAdd %float %7050 %float_2_72500006en06
       %7052 = OpFMul %float %7046 %7051
       %7053 = OpFAdd %float %7052 %float_n0_00019840087
       %7054 = OpFMul %float %7046 %7053
       %7055 = OpFAdd %float %7054 %float_0_00833333191
       %7056 = OpFMul %float %7042 %float_0_5
       %7057 = OpFMul %float %7047 %7055
       %7058 = OpFSub %float %7056 %7057
       %7059 = OpFMul %float %7046 %7058
       %7060 = OpFSub %float %7059 %7042
       %7061 = OpFMul %float %7047 %float_0_166666672
       %7062 = OpFAdd %float %7061 %7060
       %7063 = OpFSub %float %7041 %7062
       %7064 = OpFMul %float %7046 %float_1_13596476en11
       %7065 = OpFSub %float %float_2_08757234en09 %7064
       %7066 = OpFMul %float %7046 %7065
       %7067 = OpFAdd %float %7066 %float_n2_7301013en07
       %7068 = OpFMul %float %7046 %7067
       %7069 = OpFAdd %float %7068 %float_2_48005999en05
       %7070 = OpFMul %float %7046 %7069
       %7071 = OpFAdd %float %7070 %float_n0_00138888881
       %7072 = OpFMul %float %7046 %7071
       %7073 = OpFAdd %float %7072 %float_0_0416666679
       %7074 = OpFMul %float %7046 %7073
       %7075 = OpBitcast %uint %7041
       %7076 = OpBitwiseAnd %uint %7075 %uint_2147483647
       %7077 = OpBitcast %float %7076
       %7078 = OpBitcast %uint %7077
       %7079 = OpIAdd %uint %7078 %uint_4278190080
       %7080 = OpBitcast %float %7079
       %7081 = OpIAdd %uint %7078 %uint_3244713574
       %7082 = OpULessThan %bool %7081 %uint_11429479
       %7083 = OpSelect %float %7082 %7080 %float_0
       %7084 = OpUGreaterThan %bool %7078 %uint_1061683200
       %7085 = OpSelect %float %7084 %float_0_28125 %7083
       %7086 = OpFMul %float %7046 %float_0_5
       %7087 = OpFSub %float %7086 %7085
       %7088 = OpFSub %float %float_1 %7085
       %7089 = OpFMul %float %7046 %7074
       %7090 = OpFMul %float %7042 %7041
       %7091 = OpFSub %float %7089 %7090
       %7092 = OpFSub %float %7091 %7087
       %7093 = OpFAdd %float %7088 %7092
       %7094 = OpBitwiseAnd %uint %7040 %uint_1
       %7095 = OpIEqual %bool %7094 %uint_0
       %7096 = OpSelect %float %7095 %7063 %7093
       %7097 = OpBitcast %uint %7096
       %7098 = OpShiftLeftLogical %uint %7040 %uint_30
       %7099 = OpBitwiseXor %uint %7098 %7045
       %7100 = OpBitwiseAnd %uint %7099 %uint_2147483648
       %7101 = OpBitwiseXor %uint %7100 %7097
       %7102 = OpBitcast %float %7101
       %7103 = OpSelect %float %3619 %float_0x1_8p_128 %7102
       %7104 = OpFOrdEqual %bool %35 %float_0
       %7105 = OpSelect %float %7104 %35 %7103
               OpReturnValue %7105
               OpFunctionEnd
       %7115 = OpExtInst %void %7107 PushConstantRegionOffset %uint_0 %uint_12
       %7110 = OpExtInst %void %7107 Kernel %21 %7108 %uint_1 %uint_0 %7109
       %7112 = OpExtInst %void %7107 ArgumentInfo %7111
       %7113 = OpExtInst %void %7107 ArgumentStorageBuffer %7110 %uint_0 %uint_0 %uint_0 %7112
       %7116 = OpExtInst %void %7107 SpecConstantWorkgroupSize %uint_0 %uint_1 %uint_2
