; @Config: 3, 1, 1
; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 47
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %9 "foo" %__spirv_BuiltInLocalInvocationId
               OpSource OpenCL_C 200000
               OpName %__spirv_BuiltInLocalInvocationId "__spirv_BuiltInLocalInvocationId"
               OpName %A "A"
               OpName %entry "entry"
               OpName %if_then "if.then"
               OpName %if_end "if.end"
               OpName %for_cond "for.cond"
               OpName %for_body "for.body"
               OpName %if_then5 "if.then5"
               OpName %if_end8 "if.end8"
               OpName %for_inc "for.inc"
               OpName %for_end "for.end"
               OpName %A_addr "A.addr"
               OpName %i "i"
               OpName %call "call"
               OpName %cmp "cmp"
               OpName %call1 "call1"
               OpName %call2 "call2"
               OpName %arrayidx "arrayidx"
               OpName %cmp3 "cmp3"
               OpName %cmp4 "cmp4"
               OpName %call6 "call6"
               OpName %arrayidx7 "arrayidx7"
               OpName %inc "inc"
               OpDecorate %__spirv_BuiltInLocalInvocationId BuiltIn LocalInvocationId
               OpDecorate %__spirv_BuiltInLocalInvocationId Constant
               OpDecorate %__spirv_BuiltInLocalInvocationId LinkageAttributes "__spirv_BuiltInLocalInvocationId" Import
               OpDecorate %A_addr Alignment 4
               OpDecorate %i Alignment 4
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
   %uint_100 = OpConstant %uint 100
     %uint_1 = OpConstant %uint 1
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_Workgroup_uint = OpTypePointer Workgroup %uint
          %8 = OpTypeFunction %void %_ptr_Workgroup_uint
%_ptr_Function__ptr_Workgroup_uint = OpTypePointer Function %_ptr_Workgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
       %bool = OpTypeBool
%__spirv_BuiltInLocalInvocationId = OpVariable %_ptr_Input_v3uint Input
          %9 = OpFunction %void DontInline %8
          %A = OpFunctionParameter %_ptr_Workgroup_uint
      %entry = OpLabel
     %A_addr = OpVariable %_ptr_Function__ptr_Workgroup_uint Function
          %i = OpVariable %_ptr_Function_uint Function
               OpStore %A_addr %A Aligned 4
         %24 = OpLoad %v3uint %__spirv_BuiltInLocalInvocationId Aligned 16
       %call = OpCompositeExtract %uint %24 0
        %cmp = OpINotEqual %bool %call %uint_0
               OpBranchConditional %cmp %if_then %if_end
    %if_then = OpLabel
         %29 = OpLoad %v3uint %__spirv_BuiltInLocalInvocationId Aligned 16
      %call1 = OpCompositeExtract %uint %29 0
         %31 = OpLoad %_ptr_Workgroup_uint %A_addr Aligned 4
         %32 = OpLoad %v3uint %__spirv_BuiltInLocalInvocationId Aligned 16
      %call2 = OpCompositeExtract %uint %32 0
   %arrayidx = OpInBoundsPtrAccessChain %_ptr_Workgroup_uint %31 %call2
               OpStore %arrayidx %call1 Aligned 4
               OpBranch %if_end
     %if_end = OpLabel
               OpStore %i %uint_0 Aligned 4
               OpBranch %for_cond
   %for_cond = OpLabel
         %35 = OpLoad %uint %i Aligned 4
       %cmp3 = OpSLessThan %bool %35 %uint_100
               OpBranchConditional %cmp3 %for_body %for_end
   %for_body = OpLabel
         %38 = OpLoad %uint %i Aligned 4
       %cmp4 = OpIEqual %bool %38 %uint_1
               OpBranchConditional %cmp4 %if_then5 %if_end8
   %if_then5 = OpLabel
         %41 = OpLoad %v3uint %__spirv_BuiltInLocalInvocationId Aligned 16
      %call6 = OpCompositeExtract %uint %41 0
         %43 = OpLoad %_ptr_Workgroup_uint %A_addr Aligned 4
  %arrayidx7 = OpInBoundsPtrAccessChain %_ptr_Workgroup_uint %43 %uint_0
               OpStore %arrayidx7 %call6 Aligned 4
               OpBranch %if_end8
    %if_end8 = OpLabel
               OpBranch %for_inc
    %for_inc = OpLabel
         %45 = OpLoad %uint %i Aligned 4
        %inc = OpIAdd %uint %45 %uint_1
               OpStore %i %inc Aligned 4
               OpBranch %for_cond
    %for_end = OpLabel
               OpReturn
               OpFunctionEnd
