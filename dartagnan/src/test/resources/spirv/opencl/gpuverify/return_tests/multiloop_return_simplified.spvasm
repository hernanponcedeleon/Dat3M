; @Config: 3, 1, 3
; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 44
; Schema: 0
               OpCapability Addresses
               OpCapability Kernel
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %5 "bar"
               OpSource OpenCL_C 200000
               OpName %y "y"
               OpName %entry "entry"
               OpName %for_cond "for.cond"
               OpName %for_body "for.body"
               OpName %if_then "if.then"
               OpName %if_end "if.end"
               OpName %for_inc "for.inc"
               OpName %for_end "for.end"
               OpName %for_cond3 "for.cond3"
               OpName %for_body5 "for.body5"
               OpName %for_inc7 "for.inc7"
               OpName %for_end9 "for.end9"
               OpName %y_addr "y.addr"
               OpName %result "result"
               OpName %j "j"
               OpName %j2 "j2"
               OpName %cmp "cmp"
               OpName %cmp1 "cmp1"
               OpName %add "add"
               OpName %inc "inc"
               OpName %cmp4 "cmp4"
               OpName %add6 "add6"
               OpName %inc8 "inc8"
               OpDecorate %y_addr Alignment 4
               OpDecorate %result Alignment 4
               OpDecorate %j Alignment 4
               OpDecorate %j2 Alignment 4
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
   %uint_100 = OpConstant %uint 100
  %uint_1000 = OpConstant %uint 1000
     %uint_1 = OpConstant %uint 1
       %void = OpTypeVoid
          %4 = OpTypeFunction %void %uint
%_ptr_Function_uint = OpTypePointer Function %uint
       %bool = OpTypeBool
          %5 = OpFunction %void DontInline %4
          %y = OpFunctionParameter %uint
      %entry = OpLabel
     %y_addr = OpVariable %_ptr_Function_uint Function
     %result = OpVariable %_ptr_Function_uint Function
          %j = OpVariable %_ptr_Function_uint Function
         %j2 = OpVariable %_ptr_Function_uint Function
               OpStore %y_addr %y Aligned 4
               OpStore %result %uint_0 Aligned 4
               OpStore %j %uint_0 Aligned 4
               OpBranch %for_cond
   %for_cond = OpLabel
         %24 = OpLoad %uint %j Aligned 4
        %cmp = OpSLessThan %bool %24 %uint_100
               OpBranchConditional %cmp %for_body %for_end
   %for_body = OpLabel
         %28 = OpLoad %uint %result Aligned 4
       %cmp1 = OpSGreaterThan %bool %28 %uint_1000
               OpBranchConditional %cmp1 %if_then %if_end
    %if_then = OpLabel
               OpBranch %for_end9
     %if_end = OpLabel
         %31 = OpLoad %uint %j Aligned 4
         %32 = OpLoad %uint %result Aligned 4
        %add = OpIAdd %uint %32 %31
               OpStore %result %add Aligned 4
               OpBranch %for_inc
    %for_inc = OpLabel
         %34 = OpLoad %uint %j Aligned 4
        %inc = OpIAdd %uint %34 %uint_1
               OpStore %j %inc Aligned 4
               OpBranch %for_cond
    %for_end = OpLabel
               OpStore %j2 %uint_0 Aligned 4
               OpBranch %for_cond3
  %for_cond3 = OpLabel
         %37 = OpLoad %uint %j2 Aligned 4
       %cmp4 = OpSLessThan %bool %37 %uint_100
               OpBranchConditional %cmp4 %for_body5 %for_end9
  %for_body5 = OpLabel
         %39 = OpLoad %uint %j2 Aligned 4
         %40 = OpLoad %uint %result Aligned 4
       %add6 = OpIAdd %uint %40 %39
               OpStore %result %add6 Aligned 4
               OpBranch %for_inc7
   %for_inc7 = OpLabel
         %42 = OpLoad %uint %j2 Aligned 4
       %inc8 = OpIAdd %uint %42 %uint_1
               OpStore %j2 %inc8 Aligned 4
               OpBranch %for_cond3
   %for_end9 = OpLabel
               OpReturn
               OpFunctionEnd
