; @Config: 3, 1, 3
; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 93
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %78 "foo" %__spirv_BuiltInLocalInvocationId
               OpSource OpenCL_C 200000
               OpName %__spirv_BuiltInLocalInvocationId "__spirv_BuiltInLocalInvocationId"
               OpName %bar "bar"
               OpName %y "y"
               OpName %entry "entry"
               OpName %for_cond "for.cond"
               OpName %for_body "for.body"
               OpName %for_inc "for.inc"
               OpName %for_end "for.end"
               OpName %for_cond1 "for.cond1"
               OpName %for_body3 "for.body3"
               OpName %for_cond5 "for.cond5"
               OpName %for_body7 "for.body7"
               OpName %if_then "if.then"
               OpName %if_end "if.end"
               OpName %for_inc10 "for.inc10"
               OpName %for_end12 "for.end12"
               OpName %for_inc13 "for.inc13"
               OpName %for_end15 "for.end15"
               OpName %for_cond16 "for.cond16"
               OpName %for_body18 "for.body18"
               OpName %for_inc20 "for.inc20"
               OpName %for_end22 "for.end22"
               OpName %return "return"
               OpName %retval "retval"
               OpName %y_addr "y.addr"
               OpName %result "result"
               OpName %j "j"
               OpName %k "k"
               OpName %w "w"
               OpName %q "q"
               OpName %cmp "cmp"
               OpName %add "add"
               OpName %inc "inc"
               OpName %cmp2 "cmp2"
               OpName %add4 "add4"
               OpName %call "call"
               OpName %cmp6 "cmp6"
               OpName %add8 "add8"
               OpName %cmp9 "cmp9"
               OpName %inc11 "inc11"
               OpName %inc14 "inc14"
               OpName %cmp17 "cmp17"
               OpName %add19 "add19"
               OpName %inc21 "inc21"
               OpName %entry_0 "entry"
               OpName %for_cond_0 "for.cond"
               OpName %for_body_0 "for.body"
               OpName %for_inc_0 "for.inc"
               OpName %for_end_0 "for.end"
               OpName %x "x"
               OpName %i "i"
               OpName %cmp_0 "cmp"
               OpName %call_0 "call"
               OpName %inc_0 "inc"
               OpDecorate %__spirv_BuiltInLocalInvocationId BuiltIn LocalInvocationId
               OpDecorate %__spirv_BuiltInLocalInvocationId Constant
               OpDecorate %bar LinkageAttributes "bar" Export
               OpDecorate %__spirv_BuiltInLocalInvocationId LinkageAttributes "__spirv_BuiltInLocalInvocationId" Import
               OpDecorate %retval Alignment 4
               OpDecorate %y_addr Alignment 4
               OpDecorate %result Alignment 4
               OpDecorate %j Alignment 4
               OpDecorate %k Alignment 4
               OpDecorate %w Alignment 4
               OpDecorate %q Alignment 4
               OpDecorate %x Alignment 4
               OpDecorate %i Alignment 4
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
   %uint_100 = OpConstant %uint 100
     %uint_1 = OpConstant %uint 1
  %uint_1000 = OpConstant %uint 1000
   %uint_200 = OpConstant %uint 200
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
          %6 = OpTypeFunction %uint %uint
%_ptr_Function_uint = OpTypePointer Function %uint
       %bool = OpTypeBool
       %void = OpTypeVoid
         %77 = OpTypeFunction %void
%__spirv_BuiltInLocalInvocationId = OpVariable %_ptr_Input_v3uint Input
        %bar = OpFunction %uint DontInline %6
          %y = OpFunctionParameter %uint
      %entry = OpLabel
     %retval = OpVariable %_ptr_Function_uint Function
     %y_addr = OpVariable %_ptr_Function_uint Function
     %result = OpVariable %_ptr_Function_uint Function
          %j = OpVariable %_ptr_Function_uint Function
          %k = OpVariable %_ptr_Function_uint Function
          %w = OpVariable %_ptr_Function_uint Function
          %q = OpVariable %_ptr_Function_uint Function
               OpStore %y_addr %y Aligned 4
               OpStore %result %uint_0 Aligned 4
               OpStore %j %uint_0 Aligned 4
               OpBranch %for_cond
   %for_cond = OpLabel
         %38 = OpLoad %uint %j Aligned 4
        %cmp = OpSLessThan %bool %38 %uint_100
               OpBranchConditional %cmp %for_body %for_end
   %for_body = OpLabel
         %42 = OpLoad %uint %j Aligned 4
         %43 = OpLoad %uint %result Aligned 4
        %add = OpIAdd %uint %43 %42
               OpStore %result %add Aligned 4
               OpBranch %for_inc
    %for_inc = OpLabel
         %45 = OpLoad %uint %j Aligned 4
        %inc = OpIAdd %uint %45 %uint_1
               OpStore %j %inc Aligned 4
               OpBranch %for_cond
    %for_end = OpLabel
               OpStore %k %uint_0 Aligned 4
               OpBranch %for_cond1
  %for_cond1 = OpLabel
         %48 = OpLoad %uint %k Aligned 4
       %cmp2 = OpSLessThan %bool %48 %uint_100
               OpBranchConditional %cmp2 %for_body3 %for_end15
  %for_body3 = OpLabel
         %50 = OpLoad %uint %k Aligned 4
         %51 = OpLoad %uint %result Aligned 4
       %add4 = OpIAdd %uint %51 %50
               OpStore %result %add4 Aligned 4
               OpStore %w %uint_0 Aligned 4
               OpBranch %for_cond5
  %for_cond5 = OpLabel
         %53 = OpLoad %uint %w Aligned 4
         %54 = OpLoad %v3uint %__spirv_BuiltInLocalInvocationId Aligned 16
       %call = OpCompositeExtract %uint %54 0
       %cmp6 = OpULessThan %bool %53 %call
               OpBranchConditional %cmp6 %for_body7 %for_end12
  %for_body7 = OpLabel
         %57 = OpLoad %uint %w Aligned 4
         %58 = OpLoad %uint %result Aligned 4
       %add8 = OpIAdd %uint %58 %57
               OpStore %result %add8 Aligned 4
         %60 = OpLoad %uint %result Aligned 4
       %cmp9 = OpSGreaterThan %bool %60 %uint_1000
               OpBranchConditional %cmp9 %if_then %if_end
    %if_then = OpLabel
               OpStore %retval %uint_0 Aligned 4
               OpBranch %return
     %if_end = OpLabel
               OpBranch %for_inc10
  %for_inc10 = OpLabel
         %63 = OpLoad %uint %w Aligned 4
      %inc11 = OpIAdd %uint %63 %uint_1
               OpStore %w %inc11 Aligned 4
               OpBranch %for_cond5
  %for_end12 = OpLabel
               OpBranch %for_inc13
  %for_inc13 = OpLabel
         %65 = OpLoad %uint %k Aligned 4
      %inc14 = OpIAdd %uint %65 %uint_1
               OpStore %k %inc14 Aligned 4
               OpBranch %for_cond1
  %for_end15 = OpLabel
               OpStore %q %uint_0 Aligned 4
               OpBranch %for_cond16
 %for_cond16 = OpLabel
         %67 = OpLoad %uint %q Aligned 4
      %cmp17 = OpSLessThan %bool %67 %uint_100
               OpBranchConditional %cmp17 %for_body18 %for_end22
 %for_body18 = OpLabel
         %69 = OpLoad %uint %q Aligned 4
         %70 = OpLoad %uint %result Aligned 4
      %add19 = OpIAdd %uint %70 %69
               OpStore %result %add19 Aligned 4
               OpBranch %for_inc20
  %for_inc20 = OpLabel
         %72 = OpLoad %uint %q Aligned 4
      %inc21 = OpIAdd %uint %72 %uint_1
               OpStore %q %inc21 Aligned 4
               OpBranch %for_cond16
  %for_end22 = OpLabel
         %74 = OpLoad %uint %result Aligned 4
               OpStore %retval %74 Aligned 4
               OpBranch %return
     %return = OpLabel
         %75 = OpLoad %uint %retval Aligned 4
               OpReturnValue %75
               OpFunctionEnd
         %78 = OpFunction %void DontInline %77
    %entry_0 = OpLabel
          %x = OpVariable %_ptr_Function_uint Function
          %i = OpVariable %_ptr_Function_uint Function
               OpStore %i %uint_0 Aligned 4
               OpBranch %for_cond_0
 %for_cond_0 = OpLabel
         %86 = OpLoad %uint %i Aligned 4
      %cmp_0 = OpSLessThan %bool %86 %uint_200
               OpBranchConditional %cmp_0 %for_body_0 %for_end_0
 %for_body_0 = OpLabel
         %89 = OpLoad %uint %i Aligned 4
     %call_0 = OpFunctionCall %uint %bar %89
               OpStore %x %call_0 Aligned 4
               OpBranch %for_inc_0
  %for_inc_0 = OpLabel
         %91 = OpLoad %uint %i Aligned 4
      %inc_0 = OpIAdd %uint %91 %uint_1
               OpStore %i %inc_0 Aligned 4
               OpBranch %for_cond_0
  %for_end_0 = OpLabel
               OpReturn
               OpFunctionEnd
