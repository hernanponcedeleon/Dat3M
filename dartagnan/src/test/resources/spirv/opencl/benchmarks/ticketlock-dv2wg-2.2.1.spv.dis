; @Input: %10 = {{0}}
; @Input: %11 = {{0}}
; @Input: %12 = {{0}}
; @Input: %13 = {{-1, -1}}
; @Output: forall (%13[0][0] == -1 or %13[0][1] == -1 or %13[0][0] != %13[0][1])
; @Config: 2, 2, 1
; SPIR-V
; Version: 1.0
; Generator: Khronos LLVM/SPIR-V Translator; 14
; Bound: 75
; Schema: 0
               OpCapability Addresses
               OpCapability Linkage
               OpCapability Kernel
               OpCapability GenericPointer
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %9 "mutex_test" %__spirv_BuiltInGlobalInvocationId
               OpSource OpenCL_C 200000
               OpName %__spirv_BuiltInGlobalInvocationId "__spirv_BuiltInGlobalInvocationId"
               OpName %lock "lock"
               OpName %unlock "unlock"
               OpDecorate %__spirv_BuiltInGlobalInvocationId BuiltIn GlobalInvocationId
               OpDecorate %__spirv_BuiltInGlobalInvocationId Constant
               OpDecorate %__spirv_BuiltInGlobalInvocationId LinkageAttributes "__spirv_BuiltInGlobalInvocationId" Import
               OpDecorate %16 Alignment 4
               OpDecorate %17 Alignment 4
               OpDecorate %18 Alignment 4
               OpDecorate %19 Alignment 4
               OpDecorate %21 Alignment 4
               OpDecorate %49 Alignment 4
               OpDecorate %50 Alignment 4
               OpDecorate %51 Alignment 4
               OpDecorate %65 Alignment 4
               OpDecorate %66 Alignment 4
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_0 = OpConstant %uint 0
     %uint_4 = OpConstant %uint 4
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
       %void = OpTypeVoid
%_ptr_CrossWorkgroup_uint = OpTypePointer CrossWorkgroup %uint
          %8 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint %_ptr_CrossWorkgroup_uint %_ptr_CrossWorkgroup_uint %_ptr_CrossWorkgroup_uint
%_ptr_Function__ptr_CrossWorkgroup_uint = OpTypePointer Function %_ptr_CrossWorkgroup_uint
%_ptr_Function_uint = OpTypePointer Function %uint
         %24 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint %_ptr_CrossWorkgroup_uint
         %36 = OpTypeFunction %void %_ptr_CrossWorkgroup_uint
%_ptr_Generic_uint = OpTypePointer Generic %uint
       %bool = OpTypeBool
%__spirv_BuiltInGlobalInvocationId = OpVariable %_ptr_Input_v3uint Input
          %9 = OpFunction %void DontInline %8
         %10 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %11 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %12 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %13 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %14 = OpLabel
         %16 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %17 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %18 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %19 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %21 = OpVariable %_ptr_Function_uint Function
               OpStore %16 %10 Aligned 4
               OpStore %17 %11 Aligned 4
               OpStore %18 %12 Aligned 4
               OpStore %19 %13 Aligned 4
         %22 = OpLoad %_ptr_CrossWorkgroup_uint %16 Aligned 4
         %23 = OpLoad %_ptr_CrossWorkgroup_uint %17 Aligned 4
         %28 = OpFunctionCall %void %lock %22 %23
         %29 = OpLoad %_ptr_CrossWorkgroup_uint %18 Aligned 4
         %30 = OpLoad %uint %29 Aligned 4
               OpStore %21 %30 Aligned 4
         %31 = OpLoad %uint %21 Aligned 4
         %33 = OpIAdd %uint %31 %uint_1
         %34 = OpLoad %_ptr_CrossWorkgroup_uint %18 Aligned 4
               OpStore %34 %33 Aligned 4
         %35 = OpLoad %_ptr_CrossWorkgroup_uint %16 Aligned 4
         %39 = OpFunctionCall %void %unlock %35
         %40 = OpLoad %uint %21 Aligned 4
         %41 = OpLoad %_ptr_CrossWorkgroup_uint %19 Aligned 4
         %42 = OpLoad %v3uint %__spirv_BuiltInGlobalInvocationId Aligned 16
         %43 = OpCompositeExtract %uint %42 0
         %44 = OpInBoundsPtrAccessChain %_ptr_CrossWorkgroup_uint %41 %43
               OpStore %44 %40 Aligned 4
               OpReturn
               OpFunctionEnd
       %lock = OpFunction %void DontInline %24
         %26 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %27 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %45 = OpLabel
         %49 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %50 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %51 = OpVariable %_ptr_Function_uint Function
               OpStore %49 %26 Aligned 4
               OpStore %50 %27 Aligned 4
         %52 = OpLoad %_ptr_CrossWorkgroup_uint %50 Aligned 4
         %54 = OpPtrCastToGeneric %_ptr_Generic_uint %52
         %57 = OpAtomicIAdd %uint %54 %uint_2 %uint_0 %uint_1
               OpStore %51 %57 Aligned 4
               OpBranch %46
         %46 = OpLabel
         %58 = OpLoad %_ptr_CrossWorkgroup_uint %49 Aligned 4
         %59 = OpPtrCastToGeneric %_ptr_Generic_uint %58
         %60 = OpAtomicLoad %uint %59 %uint_2 %uint_2
         %61 = OpLoad %uint %51 Aligned 4
         %63 = OpINotEqual %bool %60 %61
               OpBranchConditional %63 %47 %48
         %47 = OpLabel
               OpBranch %46
         %48 = OpLabel
               OpReturn
               OpFunctionEnd
     %unlock = OpFunction %void DontInline %36
         %38 = OpFunctionParameter %_ptr_CrossWorkgroup_uint
         %64 = OpLabel
         %65 = OpVariable %_ptr_Function__ptr_CrossWorkgroup_uint Function
         %66 = OpVariable %_ptr_Function_uint Function
               OpStore %65 %38 Aligned 4
         %67 = OpLoad %_ptr_CrossWorkgroup_uint %65 Aligned 4
         %68 = OpPtrCastToGeneric %_ptr_Generic_uint %67
         %69 = OpAtomicLoad %uint %68 %uint_2 %uint_0
               OpStore %66 %69 Aligned 4
         %70 = OpLoad %_ptr_CrossWorkgroup_uint %65 Aligned 4
         %71 = OpPtrCastToGeneric %_ptr_Generic_uint %70
         %72 = OpLoad %uint %66 Aligned 4
         %73 = OpIAdd %uint %72 %uint_1
               OpAtomicStore %71 %uint_2 %uint_4 %73
               OpReturn
               OpFunctionEnd
