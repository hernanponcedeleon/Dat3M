; @Input: %12={{0, 0, 0, 0, 0, 0, 0, 0}}
; @Input: %13={{0, 0, 0, 0, 0, 0, 0, 0}}
; @Input: %14={{0, 0, 0, 0, 0, 0, 0, 0, 0}}
; @Input: %15={{0, 0, 0, 0, 0, 0, 0, 0, 0}}
; @Output: forall (%12[0][0] == 0 and %12[0][2] == 1)
; @Output: forall (%12[0][4] == 2 and %12[0][6] == 3)
; @Output: forall (%13[0][0] == 4 and %13[0][1] == 5)
; @Output: forall (%13[0][2] == 6 and %13[0][3] == 7)
; SPIR-V
; Version: 1.6
; Generator: Google Clspv; 0
; Bound: 81
; Schema: 0
               OpCapability Shader
               OpCapability VulkanMemoryModel
               OpExtension "SPV_KHR_vulkan_memory_model"
         %64 = OpExtInstImport "NonSemantic.ClspvReflection.5"
               OpMemoryModel Logical Vulkan
               OpEntryPoint GLCompute %18 "test" %8 %12 %13 %14 %15
               OpSource OpenCL_C 200
         %65 = OpString "test"
         %66 = OpString "__kernel"
         %68 = OpString "r_aligned"
         %71 = OpString "r_unaligned"
         %74 = OpString "aligned"
         %77 = OpString "unaligned"
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 Block
               OpDecorate %12 DescriptorSet 0
               OpDecorate %12 Binding 0
               OpDecorate %13 DescriptorSet 0
               OpDecorate %13 Binding 1
               OpDecorate %14 DescriptorSet 0
               OpDecorate %14 Binding 2
               OpDecorate %15 DescriptorSet 0
               OpDecorate %15 Binding 3
               OpDecorate %2 SpecId 0
               OpDecorate %3 SpecId 1
               OpDecorate %4 SpecId 2
       %uint = OpTypeInt 32 0
          %2 = OpSpecConstant %uint 1
          %3 = OpSpecConstant %uint 1
          %4 = OpSpecConstant %uint 1
     %v3uint = OpTypeVector %uint 3
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %2 %3 %4
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
%_runtimearr_uint = OpTypeRuntimeArray %uint
 %_struct_10 = OpTypeStruct %_runtimearr_uint
%_ptr_StorageBuffer__struct_10 = OpTypePointer StorageBuffer %_struct_10
       %void = OpTypeVoid
         %17 = OpTypeFunction %void
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
     %uint_0 = OpConstant %uint 0
     %uint_2 = OpConstant %uint 2
     %uint_1 = OpConstant %uint 1
     %uint_4 = OpConstant %uint 4
     %uint_6 = OpConstant %uint 6
     %uint_3 = OpConstant %uint 3
     %uint_5 = OpConstant %uint 5
     %uint_7 = OpConstant %uint 7
       %bool = OpTypeBool
     %uint_8 = OpConstant %uint 8
         %61 = OpUndef %uint
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
          %8 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %12 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %13 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %14 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %15 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %18 = OpFunction %void None %17
         %19 = OpLabel
         %22 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_0
               OpStore %22 %uint_0 Aligned 4
         %24 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_2
               OpStore %24 %uint_1 Aligned 4
         %27 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_4
               OpStore %27 %uint_2 Aligned 4
         %29 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %uint_6
               OpStore %29 %uint_3 Aligned 4
         %31 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %uint_0
               OpStore %31 %uint_4 Aligned 4
         %32 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %uint_1
               OpStore %32 %uint_5 Aligned 4
         %34 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %uint_2
               OpStore %34 %uint_6 Aligned 4
         %35 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %uint_3
               OpStore %35 %uint_7 Aligned 4
               OpBranch %38
         %38 = OpLabel
         %39 = OpPhi %uint %uint_0 %19 %57 %56
         %42 = OpULessThan %bool %39 %uint_8
               OpLoopMerge %60 %56 None
               OpBranchConditional %42 %45 %56
         %45 = OpLabel
         %46 = OpAccessChain %_ptr_StorageBuffer_uint %14 %uint_0 %39
         %47 = OpLoad %uint %46 Aligned 4
         %48 = OpAccessChain %_ptr_StorageBuffer_uint %12 %uint_0 %39
               OpStore %48 %47 Aligned 4
         %49 = OpAccessChain %_ptr_StorageBuffer_uint %15 %uint_0 %39
         %50 = OpLoad %uint %49 Aligned 4
         %51 = OpAccessChain %_ptr_StorageBuffer_uint %13 %uint_0 %39
               OpStore %51 %50 Aligned 4
               OpBranch %53
         %53 = OpLabel
         %54 = OpIAdd %uint %39 %uint_1
               OpBranch %56
         %56 = OpLabel
         %57 = OpPhi %uint %54 %53 %61 %38
         %58 = OpPhi %bool %false %53 %true %38
               OpBranchConditional %58 %60 %38
         %60 = OpLabel
               OpReturn
               OpFunctionEnd
         %67 = OpExtInst %void %64 Kernel %18 %65 %uint_4 %uint_0 %66
         %69 = OpExtInst %void %64 ArgumentInfo %68
         %70 = OpExtInst %void %64 ArgumentStorageBuffer %67 %uint_0 %uint_0 %uint_0 %69
         %72 = OpExtInst %void %64 ArgumentInfo %71
         %73 = OpExtInst %void %64 ArgumentStorageBuffer %67 %uint_1 %uint_0 %uint_1 %72
         %75 = OpExtInst %void %64 ArgumentInfo %74
         %76 = OpExtInst %void %64 ArgumentStorageBuffer %67 %uint_2 %uint_0 %uint_2 %75
         %78 = OpExtInst %void %64 ArgumentInfo %77
         %79 = OpExtInst %void %64 ArgumentStorageBuffer %67 %uint_3 %uint_0 %uint_3 %78
         %80 = OpExtInst %void %64 SpecConstantWorkgroupSize %uint_0 %uint_1 %uint_2
